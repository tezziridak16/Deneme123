/*

47 Role Play

*/

#include <a_samp>
#include <mysql>
#include <mSelection>
#include <sscanf2>
#include <time>
#include <file>
#include <Dini>
#include <OPSP>
#include <Progress>
#include <a_npc>
#include <Streamer>
#include <core>
#include <float>
#pragma tabsize 0

//===============================[GENEL AYARLAR]================================================
#define GAMEMODE	"47"
#define GAMEMODE_USE_VERSION	"Yes"
#define MAP_NAME	"El Quebrados "
#define SERVER_NAME	"47 Role Play ~ (Coming Soon)"
#define WEBSITE	"www.47roleplay.com"
#define VERSION	"v0.1"
#define LAST_UPDATE	"6 Þubat 2013"
#define DEVELOPER	"Batuhan ve Umut"
#define PASSWORD	"123"

new KAYIT = 1; // Kayýt aktif veya pasif. 1: Aktif - 0: Pasif

#define MYSQL_HOST "localhost"
#define MYSQL_PORT "81"
#define MYSQL_USER "root"
#define MYSQL_PASS ""
#define MYSQL_DB   "samp5"
//===============================[DÝÐER AYARLAR]================================================
#define MAX_STRING 255
#define MAX_PICKUPZ 10000
#define MAX_HOUSES 350
#define MAX_BUSINESSES 300
#define ARAC_SAYISI 300
#define PICKUP_RANGE 50
#define MAX_ZONE_NAME 28
#define MAX_RAPOR 250
#define MAX_SPIKESTRIPS 250
#define txtcost 15
//=================================[RENK TANIMLAMALARI]==============================================
#define COLOR_FACTIONCHAT 0x01FCFFC8
#define COLOR_CORLEONE 0xFFFFFFFF
#define COLOR_RIGHTHAND_DONS 0xFFFFFFFF
#define COLOR_BARZINI 0xFFFFFFFF
#define COLOR_PATERNO 0xFFFFFFFF
#define COLOR_TATTAGLIA 0xFFFFFFFF
#define COLOR_STRACCI 0xFFFFFFFF
#define COLOR_LSPD 0xFFFF00AA
#define COLOR_FBI 0xFFFFFFFF
#define COLOR_NATIONALGUARD 0xFFFFFFFF
#define COLOR_CIVILIAN 0xFFFFFFFF
#define RENK1 	0x33AA33AA
#define RENK2 	0x9EC73DAA
#define Turuncu 0xFF8000FF
#define COLOR_LOCALMSG 0xEC5413AA
#define COLOR_ADMINCMD 0xF97804FF
#define COLOR_ADMINDUTY 0x33AA33AA
#define COLOR_TESTERDUTY 0x800000
#define COLOR_VENDET 0xF60000AA
#define COLOR_NOTLOGGED 0x00000000
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xA10000AA
#define COLOR_DARKRED 0xCD000000
#define COLOR_ANTICHEAT 0xAA3333AA
#define RENK_KOYESIL 0x008000FF
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTBLUE2 0x0080FFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_LIGHTORANGE 0xFF8000FF
#define COLOR_DARKBROWN 0xB36C42FF
#define COLOR_MEDIUMBLUE 0x1ED5C7FF
#define COLOR_LIGHTYELLOW 0xE0E377AA
#define COLOR_LIGHTYELLOW2 0xE0EA64AA
#define COLOR_LIGHTYELLOW3 0xFF6347AA
#define COLOR_DARKPURPLE 0x5F56F8AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0x9E81D0AA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define COLOR_NEWOOC 0x0080FFAA
//=================================[DÝÐER TANIMLAMALAR]==============================================
#define mysql_fetch_row_format(%1,"|") mysql_fetch_row(%1)
#define GasMax 100
#define ResetMoneyBar ResetPlayerMoney
#define UpdateMoneyBar GivePlayerMoney
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2
#define CHECKPOINT_ARACGPS 0
#define CHECKPOINT_TAKSI0 1
#define CHECKPOINT_OTOBUS0 2
#define CHECKPOINT_OTOBUS1 3
#define CHECKPOINT_OTOBUS2 4
#define CHECKPOINT_OTOBUS3 5
#define CHECKPOINT_OTOBUS4 6
#define CHECKPOINT_OTOBUS5 7
#define CHECKPOINT_OTOBUS6 8
#define CHECKPOINT_OTOBUS7 9
#define CHECKPOINT_OTOBUS8 10

#define CHECKPOINT_OTOBUS9 100
#define CHECKPOINT_OTOBUS10 101
#define CHECKPOINT_OTOBUS11 102
#define CHECKPOINT_OTOBUS12 103
#define CHECKPOINT_OTOBUS13 104

#define CHECKPOINT_TEMIZLIK0 11
#define CHECKPOINT_TEMIZLIK1 12
#define CHECKPOINT_TEMIZLIK2 13
#define CHECKPOINT_TEMIZLIK3 14
#define CHECKPOINT_TEMIZLIK4 15
#define CHECKPOINT_TEMIZLIK5 16
#define CHECKPOINT_TEMIZLIK6 17
#define CHECKPOINT_TEMIZLIK7 18
#define CHECKPOINT_TEMIZLIK8 19
#define CHECKPOINT_ARACSURUS0 20
#define CHECKPOINT_ARACSURUS1 21
#define CHECKPOINT_ARACSURUS2 22
#define CHECKPOINT_ARACSURUS3 23
#define CHECKPOINT_ARACSURUS4 24
#define CHECKPOINT_ARACSURUS5 25
#define CHECKPOINT_ARACSURUS6 26
#define CHECKPOINT_ARACSURUS7 27
#define CHECKPOINT_ARACSURUS8 28
#define CHECKPOINT_ARACSURUS9 29
#define CHECKPOINT_ARACSURUS10 30
#define CHECKPOINT_ARACSURUS11 31
#define CHECKPOINT_ARACSURUS12 32
#define CHECKPOINT_NAVIGASYON1 33
#define CHECKPOINT_NAVIGASYON2 34
#define CHECKPOINT_NAVIGASYON3 35
#define CHECKPOINT_NAVIGASYON4 36
#define CHECKPOINT_NAVIGASYON5 37
#define CHECKPOINT_NAVIGASYON6 38
#define CHECKPOINT_BALIK 39
#define CHECKPOINT_TIRCILIK0 40
#define CHECKPOINT_TIRCILIK1 41
#define CHECKPOINT_TIRCILIK2 42
#define CHECKPOINT_TIRCILIK3 43
#define CHECKPOINT_TIRCILIK4 44
#define CHECKPOINT_TIRCILIK5 45
#define CHECKPOINT_TIRCILIK6 46
#define CHECKPOINT_TIRCILIK7 47
#define CHECKPOINT_TIRCILIK8 48
#define CHECKPOINT_TIRCILIK9 49
#define CHECKPOINT_TIRCILIK10 50
#define CHECKPOINT_TIRCILIK11 51
#define CHECKPOINT_TIRCILIK12 52
#define CHECKPOINT_TIRCILIK13 53
#define CHECKPOINT_TIRCILIK14 54
#define CHECKPOINT_TIRCILIK15 55
#define CHECKPOINT_GEMICILIK0 56
#define CHECKPOINT_GEMICILIK1 57
#define CHECKPOINT_GEMICILIK2 58
#define CHECKPOINT_GEMICILIK3 59
#define CHECKPOINT_GEMICILIK4 60
#define CHECKPOINT_GEMICILIK5 61
#define CHECKPOINT_GEMICILIK6 62
#define CHECKPOINT_GEMICILIK7 63
#define CHECKPOINT_GEMICILIK8 64
#define CHECKPOINT_GEMICILIK9 65
#define CHECKPOINT_GEMICILIK10 66
#define CHECKPOINT_GEMICILIK11 67
#define CHECKPOINT_GEMICILIK12 68
#define CHECKPOINT_GEMICILIK13 69
#define CHECKPOINT_GEMICILIK14 70
#define CHECKPOINT_GEMICILIK15 71
#define CHECKPOINT_GEMICILIK16 72
#define CHECKPOINT_GEMICILIK17 73
#define CHECKPOINT_GEMICILIK18 74
#define CHECKPOINT_GEMICILIK19 75
#define CHECKPOINT_GEMICILIK20 76
#define CHECKPOINT_GEMICILIK21 77
#define CHECKPOINT_GEMICILIK22 78
#define CHECKPOINT_GEMICILIK23 79
#define CHECKPOINT_GEMICILIK24 80
#define CHECKPOINT_GEMICILIK25 81
#define CHECKPOINT_GEMICILIK26 82
#define CHECKPOINT_GEMICILIK27 83
#define CHECKPOINT_GEMICILIK28 84
#define CHECKPOINT_GEMICILIK29 85
#define CHECKPOINT_GEMICILIK30 86
#define CHECKPOINT_GEMICILIK31 87
#define CHECKPOINT_DESTEKEKIP 88


#define dcmd(%1,%2,%3) if ((strcmp((%3)[1], #%1, true, (%2)) == 0) && ((((%3)[(%2) + 1] == 0) && (dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
//=======================================[FORWARDLAR]========================================
forward Motor1(playerid);
forward Motor2(playerid);
forward Alarm(playerid);
forward Alarm2(playerid);
forward Alarm3(playerid);
forward Alarm4(playerid);
forward OnPlayerPrivmsg(playerid, recieverid, text[]);
forward SendJobMessage(job, color, string[]);
forward OOCNews(color,const string[]);
forward SetPlayerSkinEx(playerid,skinid);
forward GameModeRestart();
forward GameModeRestartFunction();
forward UntasePlayer(playerid);
forward YerdenKaldir(playerid);
forward OnPlayerRegister(playerid, password[]);
forward Adres_Update();
forward UpdateScore();
forward SendFactionMessage(playerid, faction, color, string[]);
forward SendFactionMessage2(playerid, faction, color, string[]);
forward SendFactionMessage3(playerid, faction, color, string[]);
forward SendFactionTypeMessage(factiontype, color, string[]);
forward SetPlayerToFactionSkin(playerid);
forward SetPlayerToTeamColor(playerid);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerDataSave(playerid);
forward SetPlayerSpawn(playerid);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetector2(Float:radi, playerid, string[],string2[],col1,col2,col3,col4,col5);
forward ProxDetector3(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetector4(Float:radi, playerid,targetid, string[],string2[],col1,col2,col3,col4,col5);
forward ProxDetector5(Float:radi, playerid, string[],string2[],col1,col2,col3,col4,col5);
forward FixHour(hour);
forward SyncTime();
forward UpdateData();
forward SaveServer();
forward Update();
forward PayDay();
forward UpdateMoney();
forward ResetStats(playerid);
forward H_split(const strsrc[], strdest[][], delimiter);
forward PanelGuncelle();
forward ShowStats(playerid,targetid);
forward KarakterOzellik(playerid,targetid);
forward BanLog(string[]);
forward AccountBanLog(string[]);
forward LambalariYukle(vehicleid);
forward KickLog(string[]);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward PosKontrol(Float:radi, Float:xxX,Float:yyY,Float:zzZ, Float:xX,Float:yY,Float:zZ);
forward VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z);
forward PickupGametexts();
forward FuelTimer();
forward IsAtGasStation(playerid);
forward PlayerActionMessage(playerid,Float:radius,message[]);
forward PlayerDoMessage(playerid,Float:radius,message[]);
forward Dondur(playerid);
forward PlayerZarMessage(playerid,Float:radius,message[]);
forward PlayerPlayerActionMessage(playerid,targetid,Float:radius,message[]);
forward IsAPlane(vehicleid);
forward IsAHelicopter(vehicleid);
forward AnimBitir(playerid);
forward RemoveDriverFromVehicle(playerid);
forward IsVehicleOccupied(vehicleid);
forward AddsOn();
forward ProxDetectorS(Float:radi, playerid, targetid);
forward BanLog(string[]);
forward KickLog(string[]);
forward EvLog(string[]);
forward HackLog(string[]);
forward GirisTimer(playerid);
forward PlayerActionLog(string[]);
forward IsyeriLog(string[]);
forward TalkLog(string[]);
forward ModifiyeLog(string[]);
forward ParaLog(string[]);
forward SilahLog(string[]);
forward FactionChatLog(string[]);
forward TelefonLog(string[]);
forward CKLog(string[]);
forward PMLog(string[]);
forward AracLog(string[]);
forward OOCLog(string[]);
forward HangupTimer(playerid);
forward IsACopSkin(skinid);
forward JailTimer(playerid);
forward PhoneAnimation(playerid);
forward GetClosestPlayer(p1);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward SetPlayerWantedLevelEx(playerid,level);
forward GetPlayerWantedLevelEx(playerid);
forward ResetPlayerWantedLevelEx(playerid);
forward IsAtBar(playerid);
forward DrugEffect(playerid);
forward UndrugEffect(playerid);
forward EkranTimer(playerid, renk[]);
forward LoadScript();
forward ModifiyeEdilmeyecekArac(vehicleid);
forward IsABike(vehicleid);
forward IsATaxi(vehicleid);
forward IsAOtobus(vehicleid);
forward IsACleaner(vehicleid);
forward MotorsuzArac(vehicleid);
forward AtesliSilahKontrol(weaponid);
//===============================[PICKUP STREAMER]=========================================
forward CreateStreamPickup(model,type,Float:x,Float:y,Float:z,range);
forward StreamPickups();
forward Pickup_AnyPlayerToPoint(Float:radi, Float:x, Float:y, Float:z);
forward DestroyStreamPickup(ID);
forward CountStreamPickups();
forward ChangeStreamPickupModel(ID,newmodel);
forward ChangeStreamPickupType(ID,newtype);
forward MoveStreamPickup(ID,Float:x,Float:y,Float:z);
//=========================================================================================
new RandomStableModels[][2] =
{
{400},
{401},
{402},
{404},
{405},
{410},
{411},
{412},
{413},
{415},
{418},
{419},
{421},
{422},
{424},
{426},
{429},
{436},
{439},
{445},
{451},
{458},
{461},
{462},
{463},
{466},
{467},
{468},
{471},
{474},
{475},
{477},
{479},
{480},
{482},
{483},
{491},
{492},
{496},
{500},
{506},
{507},
{516},
{517},
{518},
{521},
{522},
{526},
{527},
{529},
{533},
{534},
{535},
{536},
{540},
{541},
{542},
{543},
{546},
{547},
{549},
{550},
{551},
{554},
{555},
{558},
{559},
{560},
{561},
{562},
{565},
{566},
{567},
{575},
{576},
{579},
{580},
{581},
{585},
{586},
{587},
{589},
{600},
{602},
{604},
{603},
{605}
};
new VehicleName[212][] =
{
   "Landstalker",  "Bravura",  "Buffalo", "Linerunner", "Perenniel", "Sentinel",
   "Dumper",  "Firetruck" ,  "Trashmaster" ,  "Stretch",  "Manana",  "Infernus",
   "Voodoo", "Pony",  "Mule", "Cheetah", "Ambulans",  "Leviathan",  "Moonbeam",
   "Esperanto", "Taxi",  "Washington",  "Bobcat",  "Mr Whoopee", "BF Injection",
   "Hunter", "Premier",  "Enforcer",  "Securicar", "Banshee", "Predator", "Bus",
   "Rhino",  "Barracks",  "Hotknife",  "Trailer",  "Previon", "Coach", "Cabbie",
   "Stallion", "Rumpo", "RC Bandit",  "Romero", "Packer", "Monster",  "Admiral",
   "Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer",  "Turismo", "Speeder",
   "Reefer", "Tropic", "Flatbed","Yankee", "Caddy", "Solair","Berkley's RC Van",
   "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron","RC Raider","Glendale",
   "Oceanic", "Sanchez", "Sparrow",  "Patriot", "Quad",  "Coastguard", "Dinghy",
   "Hermes", "Sabre", "Rustler", "ZR-350", "Walton",  "Regina",  "Comet", "BMX",
   "Burrito", "Camper", "Marquis", "Baggage", "Dozer","Maverick","News Chopper",
   "Rancher", "FBI Rancher", "Virgo", "Greenwood","Jetmax","Hotring","Sandking",
   "Blista Compact", "Police Maverick", "Boxville", "Benson","Mesa","RC Goblin",
   "Hotring Racer", "Hotring Racer", "Bloodring Banger", "Rancher",  "Super GT",
   "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropdust", "Stunt",
   "Tanker", "RoadTrain", "Nebula", "Majestic", "Buccaneer", "Shamal",  "Hydra",
   "FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona",
   "FBI Truck", "Willard", "Forklift","Tractor","Combine","Feltzer","Remington",
   "Slamvan", "Blade", "Freight", "Streak","Vortex","Vincent","Bullet","Clover",
   "Sadler",  "Firetruck", "Hustler", "Intruder", "Primo", "Cargobob",  "Tampa",
   "Sunrise", "Merit",  "Utility Truck",  "Nevada", "Yosemite", "Windsor",  "Monster",
   "Monster","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RCTiger",
   "Flash","Tahoma","Savanna", "Bandito", "Freight", "Trailer", "Kart", "Mower",
   "Dune", "Sweeper", "Broadway", "Tornado", "AT-400",  "DFT-30", "Huntley",
   "Stafford", "BF-400", "Newsvan","Tug","Trailer","Emperor","Wayfarer","Euros",
   "Hotdog", "Club", "Trailer", "Trailer","Andromada","Dodo","RC Cam", "Launch",
   "Police Car", "Police Car","Police Car","Police Ranger",
   "Picador",   "S.W.A.T. Van",  "Alpha",   "Phoenix",   "Glendale",   "Sadler",
   "Luggage Trailer","Luggage Trailer","Stair Trailer", "Boxville", "Farm Plow",
   "Utility Trailer"
};
new SatilikAraclar[101][] =
{
	{400, 30000, "Landstalker"},
	{401, 20000, "Bravura"},
	{402, 50000, "Buffalo"},
	{404, 10000, "Perenniel"},
	{405, 35000, "Sentinel"},
	{409, 150000, "Stretch"},
	{410, 20000, "Manana"},
	{411, 150000, "Infernus"},
	{412, 25000, "Voodoo"},
	{413, 28500, "Pony"},
	{415, 115000, "Cheetah"},
	{418, 19000, "Moonbeam"},
	{419, 20000, "Esperanto"},
	{421, 23000, "Washington"},
	{422, 15000, "Bobcat"},
	{426, 22000, "Premier"},
	{429, 140000, "Banshee"},
	{436, 25000, "Previon"},
	{439, 31000, "Stallion"},
	{440, 23500, "Rumpo"},
	{442, 15000, "Romero"},
	{445, 21000, "Admiral"},
	{451, 140000, "Turismo"},
	{452, 65000, "Speeder"},
	{453, 22000, "Reefer"},
	{454, 75000, "Tropic"},
	{458, 20000, "Solair"},
	{461, 45000, "PCJ-600"},
	{462, 5000, "Faggio"},
	{463, 26000, "Freeway"},
	{466, 9800, "Glendale"},
	{467, 12180, "Oceanic"},
	{468, 21000, "Sanchez",},
	{473, 15000, "Dinghy"},
	{474, 28000, "Hermes"},
	{475, 45000, "Sabre"},
	{477, 124000, "ZR-350"},
	{478, 6000, "Walton"},
	{479, 12000, "Regina"},
	{480, 55000, "Comet"},
	{481, 700, "BMX"},
	{482, 28500, "Burrito"},
	{483, 35000, "Camper"},
	{484, 80000, "Marquis"},
	{489, 45000, "Rancher"},
	{491, 21500, "Virgo"},
	{492, 23000, "Greenwood"},
	{496, 21000, "Blista Compact"},
	{500, 28000, "Mesa"},
	{506, 150000, "Super GT"},
	{507, 27000, "Elegant"},
	{508, 50000, "Journey"},
	{509, 350, "Bike"},
	{510, 1000, "Mountain Bike"},
	{516, 22000, "Nebula"},
	{517, 18000, "Majestic"},
	{518, 19000, "Buccaneer"},
	{521, 49800, "FCR-900"},
	{522, 51900, "NRG-500"},
	{526, 16000, "Fortune"},
	{527, 13500, "Cadrona"},
	{529, 19500, "Willard"},
	{533, 35940, "Feltzer"},
	{534, 38200, "Remington"},
	{535, 24100, "Slamvan"},
	{536, 38500, "Blade"},
	{540, 22500, "Vincent"},
	{541, 187000, "Bullet"},
	{542, 10000, "Clover"},
	{543, 6000, "Sadler"},
	{545, 52900, "Hustler"},
	{546, 23100, "Intruder"},
	{547, 23200, "Primo"},
	{549, 7000, "Tampa"},
	{550, 35000, "Sunrise"},
	{551, 32800, "Merit"},
	{554, 22000, "Yosemite"},
	{555, 75000, "Windsor"},
	{558, 39800, "Uranus"},
	{559, 43100, "Jester"},
	{560, 53700, "Sultan"},
	{561, 37800, "Stratum"},
	{562, 52700, "Elegy"},
	{565, 31000, "Flash"},
	{566, 26000, "Tohoma"},
	{567, 28000, "Savanna"},
	{575, 32000, "Broadway"},
	{576, 27000, "Tornado"},
	{579, 49000, "Huntley"},
	{580, 51000, "Stafford"},
	{581, 37800, "BF-400"},
	{585, 18000, "Emperor"},
	{586, 21000, "Wayfarer"},
	{587, 45800, "Euros"},
	{588, 35800, "Hotdog"},
	{589, 27000, "Club"},
	{600, 11000, "Picador"},
	{602, 42000, "Alpha"},
	{603, 52300, "Phoenix"},
	{604, 5500, "Glendale Shit"},
	{605, 5000, "Sadler Shit"}
};
new AcikErkekSkinler[110][3] =
{
	{2, 50},
	{8, 50},
	{20, 45},
	{23, 40},
	{26, 50},
	{27, 30},
	{29, 90},
	{30, 50},
	{32, 20},
	{33, 75},
	{34, 30},
	{37, 30},
	{42, 60},
	{43, 50},
	{44, 30},
	{47, 70},
	{48, 70},
	{49, 15},
	{50, 50},
	{52, 30},
	{57, 250},
	{58, 30},
	{59, 200},
	{60, 80},
	{62, 10},
	{68, 70},
	{72, 50},
	{73, 50},
	{95, 30},
	{96, 30},
	{98, 200},
	{100, 50},
	{101, 75},
	{108, 75},
	{109, 75},
	{110, 75},
	{111, 400},
	{112, 350},
	{114, 100},
	{115, 100},
	{116, 75},
	{117, 150},
	{118, 150},
	{119, 100},
	{121, 75},
	{122, 75},
	{123, 100},
	{124, 200},
	{125, 200},
	{126, 200},
	{127, 400},
	{133, 20},
	{135, 20},
	{137, 20},
	{147, 350},
	{153, 200},
	{160, 20},
	{162, 15},
	{164, 150},
	{165, 300},
	{170, 50},
	{171, 75},
	{173, 75},
	{174, 75},
	{175, 75},
	{177, 50},
	{179, 65},
	{184, 65},
	{185, 150},
	{187, 300},
	{188, 100},
	{189, 85},
	{200, 20},
	{202, 35},
	{203, 35},
	{204, 35},
	{206, 35},
	{208, 450},
	{210, 40},
	{212, 20},
	{213, 20},
	{217, 85},
	{223, 125},
	{227, 200},
	{228, 350},
	{229, 35},
	{234, 40},
	{235, 40},
	{236, 40},
	{240, 350},
	{242, 45},
	{247, 75},
	{248, 75},
	{250, 50},
	{254, 75},
	{255, 75},
	{258, 100},
	{259, 100},
	{261, 40},
	{264, 60},
	{268, 50},
	{272, 200},
	{273, 200},
	{289, 100},
	{290, 300},
	{291, 100},
	{292, 200},
	{294, 800},
	{295, 300},
	{299, 150}
};
new KoyuErkekSkinler[56][3] =
{
    {4, 40},
    {5, 45},
    {6, 100},
	{8, 50},
	{14, 35},
	{15, 35},
	{16, 40},
	{17, 250},
	{19, 75},
	{21, 75},
	{22, 75},
	{24, 120},
	{25, 120},
	{28, 50},
	{35, 50},
	{36, 50},
	{51, 50},
	{66, 120},
	{67, 120},
	{79, 20},
	{82, 70},
	{83, 70},
	{84, 70},
	{86, 99},
	{102, 75},
	{103, 100},
	{104, 100},
	{105, 100},
	{106, 100},
	{107, 75},
	{134, 20},
	{136, 20},
	{142, 100},
	{143, 75},
	{144, 65},
	{156, 50},
	{163, 150},
	{166, 200},
	{168, 20},
	{176, 50},
	{180, 50},
	{181, 3},
	{182, 30},
	{183, 30},
	{220, 35},
	{221, 45},
	{222, 45},
	{230, 20},
	{239, 20},
	{241, 45},
	{253, 55},
	{260, 40},
	{262, 20},
	{293, 200},
	{296, 750},
	{297, 100}
};
new BeyazKadinSkinler[47][3] =
{
	{12, 75},
	{31, 35},
	{39, 35},
	{40, 70},
	{41, 50},
	{53, 35},
	{54, 35},
	{55, 100},
	{56, 90},
	{75, 35},
	{77, 35},
	{85, 75},
	{87, 45},
	{88, 35},
	{89, 35},
	{90, 50},
	{91, 100},
	{93, 100},
	{129, 30},
	{130, 30},
	{131, 30},
	{141, 150},
	{150, 150},
	{151, 50},
	{152, 50},
	{157, 35},
	{169, 200},
	{172, 100},
	{191, 100},
	{192, 800},
	{193, 90},
	{194, 100},
	{196, 35},
	{197, 35},
	{198, 45},
	{199, 25},
	{201, 45},
	{211, 100},
	{216, 120},
	{224, 50},
	{225, 50},
	{226, 90},
	{231, 35},
	{232, 45},
	{245, 50},
	{251, 50},
	{257, 40}
};
new SiyahKadinSkinler[29][3] =
{
	{9, 50},
	{10, 25},
	{11, 50},
	{13, 55},
	{63, 65},
	{64, 65},
	{65, 100},
	{69, 55},
	{76, 120},
	{139, 50},
	{140, 100},
	{148, 75},
	{190, 75},
	{195, 150},
	{207, 50},
	{214, 350},
	{215, 45},
	{218, 35},
	{219, 105},
	{224, 50},
	{225, 50},
	{226, 500},
	{238, 100},
	{243, 75},
	{244, 50},
	{245, 50},
	{256, 90},
	{263, 70},
	{298, 1000}
};
new HataliKiyafetler[65] = {1,2,3,4,5,7,12,15,17,18,21,23,26,27,30,32,33,34,40,41,50,51,60,64,73,76,85,98,103,106,114,118,136,142,148,152,154,157,160,166,172,197,204,207,214,241,245,248,252,254,259,268,269,272,276,277,278,282,283,284,286,287,288,292};

static Float:CapsSkinOffSet[299][6] =
{
	{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 1
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 3
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 4
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 5
	{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 7
	{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
	{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
	{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
	{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 12
	{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
	{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 15
	{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 17
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 18
	{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
	{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 21
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
	{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
	{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 26
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
	{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
	{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 30
	{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 33
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
	{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
	{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
	{0.144815, 0.013641, -0.009374, 0.726156, 359.666778, 350.562103}, //Skin - 37
	{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
	{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 40
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
	{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
	{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
	{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
	{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
	{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
	{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
	{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
	{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 50
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
	{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
	{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
	{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
	{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
	{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
	{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
	{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
	{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 60
	{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
	{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
	{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 64
	{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
	{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
	{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
	{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
	{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
	{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
	{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
	{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 73
	{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
	{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 76
	{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
	{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
	{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
	{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
	{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
	{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
	{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
	{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 86
	{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
	{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
	{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
	{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
	{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
	{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
	{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
	{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
	{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
	{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
	{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
	{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
	{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
	{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
	{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
	{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
	{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
	{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
	{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
	{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
	{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
	{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
	{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
	{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
	{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
	{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
	{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
	{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin -120
	{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
	{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
	{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
	{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
	{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
	{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
	{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
	{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
	{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 129
	{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
	{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
	{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
	{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
	{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
	{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
	{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
	{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
	{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
	{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
	{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
	{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
	{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
	{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
	{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
	{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
	{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
	{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
	{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
	{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
	{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
	{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
	{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
	{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
	{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
	{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
	{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
	{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
	{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
	{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
	{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
	{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
	{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
	{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
	{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
	{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
	{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
	{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
	{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
	{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
	{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
	{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
	{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
	{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
	{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
	{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
	{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
	{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
	{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
	{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
	{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
	{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
	{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
	{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
	{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
	{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
	{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
	{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
	{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
	{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
	{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
	{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
	{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
	{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
	{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
	{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
	{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
	{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
	{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
	{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
	{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
	{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
	{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
	{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
	{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
	{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
	{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
	{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
	{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
	{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
	{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
	{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
	{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
	{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
	{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
	{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
	{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
	{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
	{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
	{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
	{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
	{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
	{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
	{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
	{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
	{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
	{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
	{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
	{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
	{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
	{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
	{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
	{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
	{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
	{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
	{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
	{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
	{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
	{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
	{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
	{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
	{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
	{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
	{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
	{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
	{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
	{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
	{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
	{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
	{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
	{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
	{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
	{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 273
	{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
	{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 285
	{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
	{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
	{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
	{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
	{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
	{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
	{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
	{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
	{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
	{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705}//Skin - 299
};

new Float:SkinOffSet[300][7] =
{
	{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968 }, // - 0
	{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 1
	{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 2
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 3
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 4
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 5
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 6
	{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968 }, // - 7
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 8
	{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968 },  // - 9
	{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968 }, // - 10
	{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 11
	{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 12
	{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 13
	{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 14
	{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968 }, // - 15
	{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968 },  // - 16
	{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968 }, // - 17
	{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968 }, // - 18
	{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968 }, // - 19
	{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968 }, // - 20
	{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 21
	{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 22
	{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968 }, // - 23
	{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968 }, // - 24
	{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968 }, // - 25
	{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968 }, // - 26
	{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968 }, // - 27
	{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968 }, // - 28
	{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968 },  // - 29
	{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968 }, // - 30
	{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968 }, // - 31
	{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968 },// - 32
	{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968 }, // - 33
	{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968 }, // - 34
	{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 35
	{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 36
	{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 37
	{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 38
	{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 39
	{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 40
	{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968 }, // - 41
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 42
	{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968 }, // - 43
	{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968 }, // - 44
	{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 45
	{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 46
	{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968 }, // - 47
	{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968 }, // - 48
	{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968 }, // - 49
	{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 50
	{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 51
	{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 52
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 53
	{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 54
	{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 55
	{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968 }, // - 56
	{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968 }, // - 57
	{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968 }, // - 58
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 59
	{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968 }, // - 60
	{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000 }, // - 61
	{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000 },  // - 62
	{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 63
	{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 64
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 65
	{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 66
	{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 67
	{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000 }, // - 68
	{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000 }, // - 69
	{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000 },  // - 70
	{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 71
	{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 72
	{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 73
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 74
	{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 75
	{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 76
	{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 77
	{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 78
	{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 79
	{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000 }, // - 80
	{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000 }, // - 81
	{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 82
	{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 83
	{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 84
	{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 85
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 86
	{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000 }, // - 87
	{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 88
	{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 89
	{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 90
	{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 91
	{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 92
	{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 93
	{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 94
	{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 95
	{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 96
	{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 97
	{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 98
	{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 99
	{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000 }, // - 100
	{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000 }, // - 101
	{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 102
	{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 103
	{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 104
	{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 105
	{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 106
	{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000 }, // - 107
	{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000 },  // - 108
	{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 109
	{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 110
	{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 111
	{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 112
	{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000 }, // - 113
	{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 114
	{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 115
	{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 116
	{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000 }, // - 117
	{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000 }, // - 118
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 119
	{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000 }, // - 120
	{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000 }, // - 121
	{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000 }, // - 122
	{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000 }, // - 123
	{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000 },  // - 124
	{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 125
	{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 126
	{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 127
	{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 128
	{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000 },  // - 129
	{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000 },  // - 130
	{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000 }, // - 131
	{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000 }, // - 132
	{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000 }, // - 133
	{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000 }, // - 134
	{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000 }, // - 135
	{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 136
	{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 137
	{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000 }, // - 138
	{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000 }, // - 139
	{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000 }, // - 140
	{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000 }, // - 141
	{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000 }, // - 142
	{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000 }, // - 143
	{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000 }, // - 144
	{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000 },  // - 145
	{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000 }, // - 146
	{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000 },  // - 147
	{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 148
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 149
	{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 150
	{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000 }, // - 151
	{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000 }, // - 152
	{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000 },  // - 153
	{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000 }, // - 154
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 155
	{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000 }, // - 156
	{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000 }, // - 157
	{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000 }, // - 158
	{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000 }, // - 159
	{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000 }, // - 160
	{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000 },  // - 161
	{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000 }, // - 162
	{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 163
	{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 164
	{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 165
	{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 166
	{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000 },  // - 167
	{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 168
	{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 169
	{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000 }, // - 170
	{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000 }, // - 171
	{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000 }, // - 172
	{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 173
	{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 174
	{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 175
	{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000 }, // - 176
	{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000 }, // - 177
	{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000 }, // - 178
	{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 179
	{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 180
	{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000 }, // - 181
	{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000 }, // - 182
	{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000 }, // - 183
	{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000 }, // - 184
	{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000 }, // - 185
	{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000 }, // - 186
	{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000 },  // - 187
	{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000 },  // - 188
	{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 189
	{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 190
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 191
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 192
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 193
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 194
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 195
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 196
	{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 197
	{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 198
	{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 199
	{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 200
	{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 201
	{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000 }, // - 202
	{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 203
	{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 204
	{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000 }, // - 205
	{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000 }, // - 206
	{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000 }, // - 207
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 208
	{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000 }, // - 209
	{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000 }, // - 210
	{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000 }, // - 211
	{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000 },  // - 212
	{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 213
	{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 214
	{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 215
	{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 216
	{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 217
	{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000 }, // - 218
	{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000 }, // - 219
	{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000 }, // - 220
	{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000 },  // - 221
	{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000 }, // - 222
	{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000 }, // - 223
	{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 224
	{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 225
	{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 226
	{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000 }, // - 227
	{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000 }, // - 228
	{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 229
	{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 230
	{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 231
	{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 232
	{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 233
	{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 234
	{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 235
	{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000 }, // - 236
	{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000 }, // - 237
	{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000 }, // - 238
	{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000 },  // - 239
	{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 240
	{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 241
	{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 242
	{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 243
	{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000 }, // - 244
	{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000 },  // - 245
	{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000 }, // - 246
	{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000 },  // - 247
	{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000 }, // - 248
	{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000 },  // - 249
	{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000 }, // - 250
	{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000 }, // - 251
	{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 252
	{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 253
	{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 254
	{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000 },  // - 255
	{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 256
	{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 257
	{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 258
	{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 259
	{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000 }, // - 260
	{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000 }, // - 261
	{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 262
	{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 263
	{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 264
	{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 265
	{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000 }, // - 266
	{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 267
	{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 268
	{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 269
	{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000 },  // - 270
	{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 271
	{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 272
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 273
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 274
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 275
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 276
	{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 277
	{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 278
	{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 279
	{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 280
	{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 281
	{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 282
	{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 283
	{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000 },  // - 284
	{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000 },  // - 285
	{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000 }, // - 286
	{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000 },  // - 287
	{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000 }, // - 288
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 289
	{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000 }, // - 290
	{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000 }, // - 291
	{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000 }, // - 292
	{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000 }, // - 293
	{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000 },  // - 294
	{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000 }, // - 295
	{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000 }, // - 296
	{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000 },  // - 297
	{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000 }, // - 298
	{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000 }  // - 299
};

new Float:KaskPos[][6] =
{
   {0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}, //skin 0
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 1
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 2
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 3
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 4
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 5
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 6
   {0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 7
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 8
   {0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 9
   {0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 10
   {0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 11
   {0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 12
   {0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 13
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 14
   {0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 15
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 16
   {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 17
   {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 18
   {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 19
   {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 20
   {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 21
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 22
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 23
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 24
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 25
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 26
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 27
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 28
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 29
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 30
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 31
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 32
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 33
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 34
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 35
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 36
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 37
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 38
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 39
   {0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 40
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 41
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 42
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 43
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 44
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 45
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 46
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 47
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 48
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 49
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 50
   {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 51
   {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 52
   {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 53
   {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 54
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 55
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 56
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 57
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 58
   {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 59
   {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 60
   {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 61
   {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 62
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 63
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 64
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 66
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 67
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 68
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 69
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 70
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 71
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 72
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 73
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 75
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 76
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 78
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 79
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 80
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 81
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 82
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 83
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 84
   {0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 85
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 86
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 87
   {0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 88
   {0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 89
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 90
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 91
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 92
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 93
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 94
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 95
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 96
   {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 97
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 98
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 99
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 100
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 101
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 102
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 103
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 104
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 105
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 106
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 107
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 108
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 109
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 110
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 111
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 112
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 113
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 114
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 115
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 116
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 117
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 118
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 119
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 120
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 121
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 122
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 123
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 124
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 125
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 126
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 127
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 128
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 129
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 130
   {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 131
   {0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 132
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 133
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 134
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 135
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 136
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 137
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 138
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 139
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 140
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 141
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 142
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 143
   {0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 144
   {0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 145
   {0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 146
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 147
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 148
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 150
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 151
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 152
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 153
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 154
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 155
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 156
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 157
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 158
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 159
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 160
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 161
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 162
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 163
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 164
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 165
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 166
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 167
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 168
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 169
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 170
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 171
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 172
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 173
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 174
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 175
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 176
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 177
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 178
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 179
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 180
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 181
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 182
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 183
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 184
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 185
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 186
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 187
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 188
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 189
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 190
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 191
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 192
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 193
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 194
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 195
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 196
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 197
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 198
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 199
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 200
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 201
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 202
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 203
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 204
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 205
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 206
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 207
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 209
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 210
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 211
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 212
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 213
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 214
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 215
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 216
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 217
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 218
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 219
   {0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 220
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 221
   {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 222
   {0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 223
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 224
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 225
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 226
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 227
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 228
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 229
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 230
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 231
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 232
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 233
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 234
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 235
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 236
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 237
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 238
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 239
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 240
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 241
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 242
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 243
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 244
   {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 245
   {0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 246
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 247
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 248
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 249
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 250
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 251
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 252
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 253
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 254
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 255
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 256
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 257
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 258
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 259
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 260
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 261
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 262
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 263
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 264
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 265
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 266
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 267
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 268
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 269
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 270
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 271
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 272
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 274
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 275
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 276
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 277
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 278
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 279
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 280
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 281
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 282
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 283
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 284
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 285
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 286
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 287
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 288
   {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 289
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 290
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 291
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 292
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 293
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 294
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 295
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 296
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 297
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 298
   {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000} //skin 299
};
new SilahIsimleri[48][] =
{
	"Boþ",
	"Muþta",
	"Golf Sopasý",
	"Jop",
	"Býçak",
	"Beyzbol Sopasý",
	"Kürek",
	"Bilardo Sopasý",
	"Katana",
	"Testere",
	"Mor Yapas Penis",
	"Kýsa Beyaz Yapay Penis",
	"Uzun Beyaz Yapay Penis",
	"Yapay Penis",
	"Çiçek",
	"Baston",
	"El Bombasý",
	"Göz Yaþartýcý Bomba",
	"Molotof Kokteyli",
	"Bozuk Silah",
	"Bozuk Silah",
	"Bozuk Silah",
	"Glock",
	"Susturuculu Pistol",
	"Desert Eagle",
	"Shotgun",
	"Sawn Off",
	"Combat Shotgun",
	"Micro UZI",
	"MP5",
	"AK47",
	"M4",
	"Tec9",
	"Tüfek",
	"Sniper Tüfeði",
	"Roketatar",
	"HS Roketatar",
	"Ateþ Piskürtücü",
	"Minigun",
	"Uzaktan Kumandalý Bomba",
	"Uzaktan Kumanda",
	"Göz Yaþartýcý Sprey",
	"Yangýn Söndürücü",
	"Kamera",
	"Gece Görüþ Dürbünü",
	"Gece Görüþ Dürbünü",
	"Paraþüt",
	"Bozuk Silah"
};
new SilahObjeleri[47][0] =
{
	{0},
	{331},
	{333},
	{334},
	{335},
	{336},
	{337},
	{338},
	{339},
	{341},
	{321},
	{322},
	{323},
	{324},
	{325},
	{326},
	{342},
	{343},
	{344},
	{0},
	{0},
	{0},
	{346},
	{347},
	{348},
	{349},
	{350},
	{351},
	{352},
	{353},
	{355},
	{356},
	{372},
	{357},
	{358},
	{359},
	{360},
	{361},
	{362},
	{363},
	{364},
	{365},
	{366},
	{367},
	{368},
	{368},
	{371}
};
//===============================[RAPOR SÝSTEMÝ]===============================

enum Raporlar
{
	rAtan[30],
	rYazi[528],
	rPID,
	rRapor
}
new Rapor[MAX_RAPOR][Raporlar];

//===============================[PICKUP STREAMER]=========================================
enum pickupINFO
{
	pickupCreated,
	pickupVisible,
	pickupID,
	pickupRange,
	Float:pickupX,
	Float:pickupY,
	Float:pickupZ,
 	pickupType,
	pickupModel
}
new Pickup[MAX_PICKUPZ+1][pickupINFO];
//===============================[TANITIMLAR]===========================================
new BagliOyuncular;
new Text:lbt1;
new Text:lbb1;
new Text:SehriAlem;
new Text:SehriAlem1;
new radyoobje[MAX_PLAYERS];
forward mmicin(playerid);
forward molotoficin(playerid);
forward sawnofficin(playerid);
forward mp5icin(playerid);
forward tufekicin(playerid);
forward roketicin(playerid);
forward yanginicin(playerid);
forward kameraicin(playerid);
forward sprayicin(playerid);
forward spistolicin(playerid);
forward shoutgunicin(playerid);
forward tec9icin(playerid);
forward uziicin(playerid);
forward m4icin(playerid);
forward ak47icin(playerid);
forward snipericin(playerid);
new Silahelinde[MAX_PLAYERS];
new mustaelinde[MAX_PLAYERS];
new golfelinde[MAX_PLAYERS];
new kurekelinde[MAX_PLAYERS];
new molotofelinde[MAX_PLAYERS];
new sawnoffelinde[MAX_PLAYERS];
new mp5elinde[MAX_PLAYERS];
new tufekelinde[MAX_PLAYERS];
new roketelinde[MAX_PLAYERS];
new yanginelinde[MAX_PLAYERS];
new parasutelinde[MAX_PLAYERS];
new kameraelinde[MAX_PLAYERS];
//new spreyelinde[MAX_PLAYERS];
new Text:aracbilgi[MAX_PLAYERS];
new Text:aracbenzint[MAX_PLAYERS];
new Text:arachiz[MAX_PLAYERS];
new Text:arachasar[MAX_PLAYERS];
new Text:benzina[MAX_PLAYERS];
new Text:hiza[MAX_PLAYERS];
new Text:hasara[MAX_PLAYERS];
new cicekelinde[MAX_PLAYERS];
new bastonelinde[MAX_PLAYERS];
new bicakelinde[MAX_PLAYERS];
new sopaelinde[MAX_PLAYERS];
new mmelinde[MAX_PLAYERS];
new katanaelinde[MAX_PLAYERS];
new sprayelinde[MAX_PLAYERS];
new spistolelinde[MAX_PLAYERS];
new shoutgunelinde[MAX_PLAYERS];
new tec9elinde[MAX_PLAYERS];
new uzielinde[MAX_PLAYERS];
new m4elinde[MAX_PLAYERS];
new ak47elinde[MAX_PLAYERS];
new sniperelinde[MAX_PLAYERS];
new Text:TextDraw3[MAX_PLAYERS];
new Text:Adres[MAX_PLAYERS];
new Text:EkranKapat[MAX_PLAYERS];
new RutbeKisi[MAX_PLAYERS];
new Yerde[MAX_PLAYERS];
new IhtiyacGuncelleme[MAX_PLAYERS];
new TeklifEden[MAX_PLAYERS];
new TeklifAsamasi[MAX_PLAYERS];
new PlayerText3D:KafaYazisi[MAX_PLAYERS][MAX_PLAYERS];
new KafaYazisiX[MAX_PLAYERS][MAX_PLAYERS];
new StreamOldu[MAX_PLAYERS][MAX_PLAYERS];
new OMIzleme[MAX_PLAYERS];
new selamlastigim[MAX_PLAYERS];
new FIzliyor[MAX_PLAYERS];
new AlanAdiTip[MAX_PLAYERS];
new DestekEkip[MAX_PLAYERS];
new Olum[MAX_PLAYERS];
new ABSeviye[MAX_PLAYERS];
new ABSuc[MAX_PLAYERS][45];
new Yarali[MAX_PLAYERS];
new kalkabilir[MAX_PLAYERS];
new Float:OlumX[MAX_PLAYERS];
new Float:OlumY[MAX_PLAYERS];
new Float:OlumZ[MAX_PLAYERS];
new OlumInt[MAX_PLAYERS];
new OlumVW[MAX_PLAYERS];
new TrafikKoni[MAX_PLAYERS][11];
new Koniler[MAX_PLAYERS];
new Barikat[MAX_PLAYERS][2];
new UzeriniArama[MAX_PLAYERS];
new Silah[MAX_PLAYERS];
new SilahSira[MAX_PLAYERS];
new SilahZaman[MAX_PLAYERS];
new Bunny[MAX_PLAYERS];
new BunnyZaman[MAX_PLAYERS];
new Sapka[MAX_PLAYERS];
new SapkaTakti[MAX_PLAYERS];
new Rag[MAX_PLAYERS];
new RagTakti[MAX_PLAYERS];
new Gozluk[MAX_PLAYERS];
new GozlukTakti[MAX_PLAYERS];
new AsansorDurum[MAX_PLAYERS];
new Float:AracininCani[MAX_PLAYERS];
new Otelde[MAX_PLAYERS];
new TaserElinde[MAX_PLAYERS];
new KemerTakti[MAX_PLAYERS];
new AnimYapiyor[MAX_PLAYERS];
new SigaraIciyor[MAX_PLAYERS];
new SigaraKalanHak[MAX_PLAYERS];
new BarDurum[MAX_PLAYERS];
new GozuBaglandi[MAX_PLAYERS];
new GozunuBaglayacakKisiID[MAX_PLAYERS];
new BalikTutuyor[MAX_PLAYERS];
new BalikSure[MAX_PLAYERS];
new RaporGonderdi[MAX_PLAYERS];
new Durum911[MAX_PLAYERS];
new CalanAracID[MAX_PLAYERS];
new AracKaydetmeDurumu[MAX_VEHICLES];
new gLastCar[MAX_PLAYERS];
new KontrolDurum[MAX_PLAYERS];
new IsTowTrucker[MAX_PLAYERS];
new AracCekiyor[MAX_PLAYERS];
new Sarkidinliyor[MAX_PLAYERS];
new Sarkinumarasi[MAX_PLAYERS];
new KnockedDown[MAX_PLAYERS];
new IlkDegisiklik[MAX_PLAYERS];
new EvlenmeTeklifi[MAX_PLAYERS];
new BosanmaTeklifi[MAX_PLAYERS];
new PolisLamba[2][MAX_VEHICLES];
new ChosenSkin[MAX_PLAYERS];
new SkinUcret[MAX_PLAYERS];
new AracNeon[2][MAX_VEHICLES];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new TamirEdiyor[MAX_PLAYERS];
new TamirSuresi[MAX_VEHICLES];
new TamirArac[MAX_PLAYERS];
new KavgaKisi[MAX_PLAYERS];
new AracTamirOluyor[MAX_VEHICLES];
new AracOncedenTamirEdiliyordu[MAX_VEHICLES];
new	ModifiyeYapiyor[MAX_PLAYERS];
new	ModifiyeTip[MAX_PLAYERS];
new	ModifiyeZaman[MAX_PLAYERS];
new	ModifiyeObje[MAX_PLAYERS];
new	ModifiyeObje2[MAX_PLAYERS];
new	ModifiyeArac[MAX_PLAYERS];
new ModifiyeUcret[MAX_PLAYERS];
new HataSayisi[MAX_PLAYERS];
new BankaDurum[MAX_PLAYERS];
new ATMDurum[MAX_PLAYERS];
new UrunDurum[MAX_PLAYERS];
new MateryalDurum[MAX_PLAYERS];
new DovmeDurum[MAX_PLAYERS];
new DovmecininID[MAX_PLAYERS];
new ParaGidecekKisi[MAX_PLAYERS];
new kapipd;
new kapi1;
new BenchAvail[10] = 0;
new Bar:BenzinGosterge[MAX_PLAYERS] = {INVALID_BAR_ID, ...};
new BenchPresses[MAX_PLAYERS];
new VerilicekKas[MAX_PLAYERS];
new BenchPressID[MAX_PLAYERS];
new BenchPressTime[MAX_PLAYERS];
new Arac[MAX_PLAYERS];
new Tuzak[MAX_PLAYERS];
new Clicked[MAX_PLAYERS];
new Sira[MAX_PLAYERS];
new AracRenk1[MAX_PLAYERS];
new AracRenk2[MAX_PLAYERS];
new SatilikAracID[MAX_PLAYERS];
new SatilikAracUcret[MAX_PLAYERS];
new SatilikAracDurum[MAX_PLAYERS];
new SatilikAraciAlacagiKisi[MAX_PLAYERS];
new MaskeKullaniyor[MAX_PLAYERS];
new OtobusTurunda[MAX_PLAYERS];
new YerTemizlemeTurunda[MAX_PLAYERS];
new TirTurunda[MAX_PLAYERS];
new GemiTurunda[MAX_PLAYERS];
new TasidigiYuk[MAX_PLAYERS];
new TasidigiYukZaman[MAX_PLAYERS];
new SpecID[MAX_PLAYERS];
new SpecType[MAX_PLAYERS];
new CKEdiyor[MAX_PLAYERS];
new CKEdecegiKisi[MAX_PLAYERS];
new AracPickup;
new TalkingLive[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TaxiCall = 999;
new TransportDriver[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TaxiDrivers = 0;
new TransportCost[MAX_PLAYERS];
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new OkDurumu[MAX_PLAYERS];
new PlayerOnMission[MAX_PLAYERS];
new Float: Pos1[MAX_PLAYERS][4];
new KiyafetAliyor[MAX_PLAYERS];
new KiyafetSecimi[MAX_PLAYERS];
new SeatTaken[4][MAX_VEHICLES];
new IsikDurum[MAX_VEHICLES];
new skinlist = mS_INVALID_LISTID;
new skineslist = mS_INVALID_LISTID;
new skineblist = mS_INVALID_LISTID;
new skinbslist = mS_INVALID_LISTID;
new skinbblist = mS_INVALID_LISTID;
new AlarmDurum[MAX_VEHICLES];
new Text:kalansn[MAX_PLAYERS];
new sayi[MAX_PLAYERS] = 0;
new KaputDurum[MAX_VEHICLES];
new BagajDurum[MAX_VEHICLES];
new MotorDurumu[MAX_VEHICLES];
new bool:radyocaliyor[MAX_PLAYERS];
new ObjeDurum[MAX_VEHICLES];
new KapiDurum[MAX_VEHICLES];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new realchat = 1;
new gNews[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new AdminDuyma[MAX_PLAYERS];
new FactionDuyma[MAX_PLAYERS];
new ghour = 0;
new shifthour;
new timeshift = -1;
new realtime = 1;
new levelexp = 3;
new SunucuyaGiris = 1;
new RegistrationStep[MAX_PLAYERS];
new TakingDrivingTest[MAX_PLAYERS];
new AmelyatTipi[MAX_PLAYERS];
new AmelyatRequest[MAX_PLAYERS];
new FactionRequest[MAX_PLAYERS];
new FactionRequest2[MAX_PLAYERS];
new Fuel[MAX_VEHICLES];
new OutOfFuel[MAX_VEHICLES];
new Mobile[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new Muted[MAX_PLAYERS];
new ReduceTime[MAX_PLAYERS];
new StartedCall[MAX_PLAYERS];
new SpeakerPhone[MAX_PLAYERS];
new adds = 1;
new addtimer = 60000;
new AdminDuty[MAX_PLAYERS];
new TesterDuty[MAX_PLAYERS];
new PMsEnabled[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new CarWindowStatus[MAX_VEHICLES];
new WantedLevel[MAX_PLAYERS];
new CopOnDuty[MAX_PLAYERS];
new CopOnDutySkin[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerTased[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new DrugsIntake[MAX_PLAYERS];
new TanismaDurum[MAX_PLAYERS];
new EvYazi[1024];
new Text3D:EvTanimi[1204];
new IsyeriYazi[1024];
new Text3D:IsyeriTanimi[1204];
new houselocation[MAX_ZONE_NAME];
new Float:BenchPress[9][4] =
{
	{830.0292,-53.7021,972.8309,177.6617},
	{832.2363,-53.6450,972.8358,180.7951},
	{834.5052,-53.6255,972.8408,179.2284},
	{836.7911,-50.3079,972.6654,270.7227},
	{836.7610,-48.3011,972.6615,272.6027},
	{836.7626,-46.2725,972.6575,269.7827},
	{837.6783,-42.1551,972.6488,97.7374},
	{837.6281,-40.2907,972.6452,88.0240},
	{837.5022,-38.4985,972.6418,88.3373}
};
new Float:BalikTutma[18][3] =
{
	{874.5930,-2870.9507,1.3918},
	{791.5181,-2866.0046,0.1906},
	{713.9128,-2922.5110,1.7225},
	{678.7838,-2869.0278,1.1888},
	{629.1383,-2805.4243,1.5897},
	{719.3848,-2741.2002,1.4848},
	{803.8363,-2707.7097,1.0926},
	{908.7611,-2734.9006,1.9591},
	{954.1893,-2831.5789,1.9093},
	{947.8605,-2902.8279,0.7841},
	{896.7123,-2989.9092,1.9988},
	{839.9252,-3046.8511,0.2721},
	{743.8310,-3081.2751,1.9097},
	{662.7042,-3050.7805,2.1510},
	{561.5416,-3027.2256,0.2083},
	{500.8404,-2952.5623,1.7475},
	{498.5119,-2858.8833,1.2387},
	{433.0510,-2823.9487,1.2822}
};
AntiDeAMX()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}

static bool:OyuncuSilahlari[MAX_PLAYERS][47];
//=================================[ENUMLAR]=================================================

enum pInfo
{
	pSQLid,
	pIsim[32],
	pKey[128],
	pLevel,
	pAdmin,
	IlkGiris,
	OyunDurum,
	pSex,
	pAge,
	Float:pHP,
	Float:pArmour,
	pYiyecekSayisi,
	pIcecekSayisi,
	pBez,
	pOlta,
	pSigara,
	pMask,
	pYiyecek,
	pIcecek,
	pTuvalet,
	pExp,
	pCash,
	pBank,
	pBankNumber,
	pSkin,
	pKiyafet1,
	pKiyafet2,
	pKiyafet3,
	pDogumYeri[128],
	pTenRengi,
 	pSpawn,
 	pMedeniHal,
	pOzellik[128],
 	pEvlendigiKisi[128],
	pNavigasyon,
 	pFS,
	pBoxiSkill,
	pKneeSkill,
	pKungSkill,
	pGrabSkill,
	pElbowSkill,
	pSac,
	pDovme1[32],
	pDovme2[32],
	pDovme3[32],
	pDovme4[32],
	pDovme5[32],
	pDovme6[32],
	pDovme7[32],
	pDovme8[32],
	pDovme9[32],
	pDovme10[32],
	pDovme11[32],
	pDovme12[32],
	pDovme13[32],
	pDil,
	pIngilizce,
	pIngilizceZaman,
	pUnlu,
	pMuzikCalar,
	pItalyanca,
	pItalyancaZaman,
	pRusca,
	pRuscaZaman,
	pFransizca,
	pFransizcaZaman,
	pIspanyolca,
	pIspanyolcaZaman,
	pIbranice,
	pIbraniceZaman,
	pCince,
	pCinceZaman,
	pJaponca,
	pJaponcaZaman,
	pBenzinBidon,
	pSapka,
	pGozluk,
	pRag,
	pOdaNumarasi,
	pOdaKilit,
	pVatno,
	pDrugs,
	pMaterials,
	pJob,
	pPlayingHours,
	pAllowedPayday,
	pPayCheck,
	pFaction,
	pRank,
	pHouseKey,
	pBizKey,
	pBanned,
	pWarnings,
	pCK,
	pCarLic,
	pFlyLic,
	pWepLic,
	pPhoneNumber,
	pPhoneC,
	pTelsiz,
	pFrekans,
	pFrekansAyarlayici,
	pJailed,
	pJailTime,
	pProducts,
	pKasSeviyesi,
	pKasDurumu,
	Float:pNavigasyon1X,
	Float:pNavigasyon1Y,
	Float:pNavigasyon1Z,
	Float:pNavigasyon2X,
	Float:pNavigasyon2Y,
	Float:pNavigasyon2Z,
	Float:pNavigasyon3X,
	Float:pNavigasyon3Y,
	Float:pNavigasyon3Z,
	Float:pSpawnX,
	Float:pSpawnY,
	Float:pSpawnZ,
	pSpawnInt,
	pSpawnW,
	pTester,
};
new PlayerInfo[MAX_PLAYERS][pInfo];

enum Factions
{
	fSQLid,
	fName[50],
	Float:fX,
	Float:fY,
	Float:fZ,
	fBank,
	fRank1[35],
	fRank2[35],
	fRank3[35],
	fRank4[35],
	fRank5[35],
	fRank6[35],
	fRank7[35],
	fRank8[35],
	fRank9[35],
	fRank10[35],
	fSkin1,
	fSkin2,
	fSkin3,
	fSkin4,
	fSkin5,
	fSkin6,
	fSkin7,
	fSkin8,
	fSkin9,
	fSkin10,
	fJoinRank,
	fUseSkins,
	fType,
	fRankAmount,
	fColor[128],
	fUseColor,
};
new DynamicFactions[500][Factions];
/*
enum Web
{
	wName[40],
	wSQLid,
	wLine1[75],
	wLine2[75],
	wLine3[75],
	wLine4[75],
	wLine5[75],
	wLine6[75],
	wLine7[75],
	wLine8[75],
	wLine9[75],
	wLine10[75],
	wLine11[75],
	wLine12[75],
	wLine13[75],
	wLine14[75],
	wLine15[75],
	wSilindi,
};
new WebSites[300][Web];
*/
enum Cars
{
	cSQLid,
	CarModel,
	Float:CarX,
	Float:CarY,
	Float:CarZ,
	Float:CarAngle,
	CarColor1,
	CarColor2,
	FactionCar,
	CarType,
	CarValue,
 	CarOwned,
	CarOwner[MAX_PLAYER_NAME],
	CarDescription[11],
	Float:CarHealth,
	AracPatladi,
	AracKiraZaman,
	cSigorta,
	cKazaSayi,
	ModPaintjob,
	ModSpoiler,
	ModRoof,
	ModLeftSideSkirt,
	ModRightSideSkirt,
	ModExhaust,
	ModWheels,
	ModFrontBumper,
	ModRearBumper,
	ModStereo,
	ModHydraulics,
	ModNitro,
	ModNeon,
	ModAlarm,
	Panels,
	Doors,
	Lights,
	Tires,
};
new DynamicCars[MAX_VEHICLES][Cars];

enum Coords
{
        SPU,
        VehicleID,
        Float:X,
        Float:Y,
        Float:Z,
};

enum Otel
{
	Float:oResepsiyonX,
	Float:oResepsiyonY,
	Float:oResepsiyonZ,
	oResepsiyonPickupID,
	Float:oAsansorX,
	Float:oAsansorY,
	Float:oAsansorZ,
	oAsansorInt,
	oAsansorVW,
	oAsansorPickupID,
};
new DynamicOtel[Otel];

enum CivilianSpawns
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
};
new CivilianSpawn[CivilianSpawns];


enum sInfo
{
	sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
    sPlayer
};
new SpikeInfo[MAX_SPIKESTRIPS][sInfo];


enum wpInfo
{
	Float:wpX,
	Float:wpY,
	Float:wpZ,
	wpModel,
	wpAmmo,
	wpObje
}
new WeaponInfo[250][wpInfo];


enum AracSpawn
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
};
new AracSpawnPos[AracSpawn];

enum GemiSpawn
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
};
new GemiSpawnPos[GemiSpawn];

enum DrivingTestLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new DrivingTestPosition[DrivingTestLocation];

enum BankLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new BankPosition[BankLocation];

enum FlyingTestLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new FlyingTestPosition[FlyingTestLocation];

enum WeaponLicenseLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new WeaponLicensePosition[WeaponLicenseLocation];

enum PoliceArrestLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new PoliceArrestPosition[PoliceArrestLocation];

enum PoliceDutyLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new PoliceDutyPosition[PoliceDutyLocation];

enum DepoPos
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	Silah1,
	Silah2,
	Silah3,
	Silah4,
	Silah5,
	Silah6,
	Silah7,
	Silah8,
	Silah9,
	Silah10,
	Silah11,
	Silah12,
	Silah13,
	Silah14,
	Silah15,
	Silah16,
	Silah17,
	Silah18,
	Silah19,
	Silah20,
	Silah21,
	Silah22,
	Silah23,
	Silah24,
	Silah25,
	Silah26,
	Silah27,
	Silah28,
	Silah29,
	Silah30,
	Silah31,
	Silah32,
	Silah33,
	Silah34,
	Silah35,
	Silah36,
	Silah37,
	Silah38,
	Silah39,
	Silah40,
	Silah41,
	Silah42,
	Silah43,
	Silah44,
	Silah45,
	Silah46,
	Silah47,
	Silah48,
	Silah49,
	Silah50,
	Mermi1,
	Mermi2,
	Mermi3,
	Mermi4,
	Mermi5,
	Mermi6,
	Mermi7,
	Mermi8,
	Mermi9,
	Mermi10,
	Mermi11,
	Mermi12,
	Mermi13,
	Mermi14,
	Mermi15,
	Mermi16,
	Mermi17,
	Mermi18,
	Mermi19,
	Mermi20,
	Mermi21,
	Mermi22,
	Mermi23,
	Mermi24,
	Mermi25,
	Mermi26,
	Mermi27,
	Mermi28,
	Mermi29,
	Mermi30,
	Mermi31,
	Mermi32,
	Mermi33,
	Mermi34,
	Mermi35,
	Mermi36,
	Mermi37,
	Mermi38,
	Mermi39,
	Mermi40,
	Mermi41,
	Mermi42,
	Mermi43,
	Mermi44,
	Mermi45,
	Mermi46,
	Mermi47,
	Mermi48,
	Mermi49,
	Mermi50,
};
new DepoSistemi[DepoPos];

enum FBIDutyLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new FBIDutyPosition[PoliceDutyLocation];

enum PoliceGunLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new PoliceGunPosition[PoliceGunLocation];

enum TaxiJobLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new TaxiJobPosition[TaxiJobLocation];

enum OtobusJobLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new OtobusJobPosition[OtobusJobLocation];

enum CleanerJobLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new CleanerJobPosition[CleanerJobLocation];

enum TruckJobLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new TruckJobPosition[TruckJobLocation];

enum TruckProLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
	Urun,
};
new TruckProPosition[TruckProLocation];

enum ShippingJobLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
};
new ShippingJobPosition[ShippingJobLocation];

enum ShippingMatLocation
{
	Float:X,
	Float:Y,
	Float:Z,
	World,
	Interior,
	Float:Angle,
	PickupID,
	Materyal,
};
new ShippingMatPosition[ShippingMatLocation];

enum SunucuBilgisi
{
	GOOCDurum,
	OOCDurum,
	AracDurum,
};
new SunucuBilgi[SunucuBilgisi];

enum BuildingSystem
{
	SQLid,
	BuildingName[128],
	Float:EnterX,
	Float:EnterY,
	Float:EnterZ,
	EntranceFee,
	EnterWorld,
	EnterInterior,
	Float:EnterAngle,
	Float:ExitX,
	Float:ExitY,
	Float:ExitZ,
	ExitInterior,
	Float:ExitAngle,
	Locked,
	PickupID,
	Silindi,
};
new Building[500][BuildingSystem];

enum BusinessSystem
{
	SQLid,
	BusinessName[128],
	Owner[MAX_PLAYER_NAME],
	Float:EnterX,
	Float:EnterY,
	Float:EnterZ,
	EnterWorld,
	EnterInterior,
	Float:EnterAngle,
	Float:ExitX,
	Float:ExitY,
	Float:ExitZ,
	ExitInterior,
	Float:ExitAngle,
	Owned,
	Enterable,
	BizPrice,
	EntranceCost,
	Till,
	Locked,
	BizType,
	Products,
	PickupID,
}
new Businesses[MAX_BUSINESSES][BusinessSystem];

enum HouseSystem
{
	SQLid,
	Owner[MAX_PLAYER_NAME],
	Float:EnterX,
	Float:EnterY,
	Float:EnterZ,
	EnterWorld,
	EnterInterior,
	Float:EnterAngle,
	Float:ExitX,
	Float:ExitY,
	Float:ExitZ,
	ExitInterior,
	Float:ExitAngle,
	Owned,
	Rentable,
	RentCost,
	HousePrice,
	Materials,
	Drugs,
	Money,
	Locked,
	PickupID,
};
new Houses[MAX_HOUSES][HouseSystem];

enum SAZONE_MAIN
{
	SAZONE_NAME[28],
	Float:SAZONE_AREA[6]
};
static const gSAZones[][SAZONE_MAIN] =
{
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
//=========================================================================================

main()
{
	print("_________________________________________________________________________");
	printf("> Sunucu adý: %s", SERVER_NAME);
	if (!strcmp("Yes", GAMEMODE_USE_VERSION, true))
	{
		printf("> Oyun modu: %s - %s", GAMEMODE,VERSION);
	}
	else
	{
		printf("> Oyun modu: %s", GAMEMODE);
	}
	printf("> Versiyon: %s", VERSION);
	printf("> Harita: %s", MAP_NAME);
	printf("> Ýnternet sitesi: %s", WEBSITE);
	printf("> Geliþtirici: %s", DEVELOPER);
	printf("> Son güncelleme: %s", LAST_UPDATE);
 	printf("> Sunucu þifresi: %s", ShowServerPassword());
	print("_________________________________________________________________________");
}
public OnGameModeInit()
{
skinlist = LoadModelSelectionMenu("tumskinler.txt");
skineblist = LoadModelSelectionMenu("beyazerkek.txt");
skineslist = LoadModelSelectionMenu("siyaherkek.txt");
skinbblist = LoadModelSelectionMenu("beyazbayan.txt");
skinbslist = LoadModelSelectionMenu("siyahbayan.txt");
    SetTimer("Adres_Update", 500, 1);
    SetTimer("PanelGuncelle", 35000, 1);
//lspd
CreateObject(1649,253.00000000,117.30000305,1005.40002441,0.00000000,0.00000000,270.00000000); //object(wglasssmash) (1)
CreateObject(1649,253.10000610,117.19999695,1005.40002441,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (2)
CreateObject(1649,239.60000610,113.40000153,1005.40002441,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (3)
CreateObject(1649,239.60000610,112.69999695,1005.40002441,0.00000000,0.00000000,270.00000000); //object(wglasssmash) (4)
CreateObject(2930,227.50000000,126.90000153,1004.59997559,0.00000000,0.00000000,0.25000000); //object(chinatgate) (1)
CreateObject(14437,227.60000610,126.00000000,1004.09997559,0.00000000,0.00000000,90.00000000); //object(carter-bars) (1)
CreateObject(3944,228.69999695,116.09999847,1001.70001221,0.00000000,0.00000000,90.00000000); //object(bistro_blok) (1)
CreateObject(3944,228.69999695,116.09999847,1005.20001221,0.00000000,0.00000000,90.00000000); //object(bistro_blok) (2)
CreateObject(1806,259.60000610,120.69999695,1002.20001221,0.00000000,0.00000000,120.00000000); //object(med_office_chair) (1)
CreateObject(1806,242.00000000,121.00000000,1002.29998779,0.00000000,0.00000000,200.00000000); //object(med_office_chair) (2)
CreateObject(1806,246.60000610,120.90000153,1002.20001221,0.00000000,0.00000000,180.00000000); //object(med_office_chair) (3)
CreateObject(1806,251.10000610,120.90000153,1002.20001221,0.00000000,0.00000000,140.00000000); //object(med_office_chair) (4)
CreateObject(2190,251.60000610,119.50000000,1003.40002441,0.00000000,0.00000000,188.00000000); //object(pc_1) (1)
CreateObject(2202,240.30000305,121.90000153,1002.29998779,0.00000000,0.00000000,90.00000000); //object(photocopier_2) (1)
CreateObject(2630,261.89999390,108.09999847,1003.59997559,0.00000000,0.00000000,270.00000000); //object(gym_bike) (1)
CreateObject(2630,261.89999390,109.59999847,1003.59997559,0.00000000,0.00000000,270.00000000); //object(gym_bike) (2)
CreateObject(2629,261.89999390,111.19999695,1003.59997559,0.00000000,0.00000000,90.00000000); //object(gym_bench1) (1)
CreateObject(2631,266.39999390,108.00000000,1003.59997559,0.00000000,0.00000000,90.00000000); //object(gym_mat1) (1)
CreateObject(2631,264.20001221,108.00000000,1003.59997559,0.00000000,0.00000000,90.00000000); //object(gym_mat1) (2)
CreateObject(2916,266.79998779,107.69999695,1003.79998779,0.00000000,0.00000000,36.00000000); //object(kmb_dumbbell) (1)
CreateObject(2916,266.29998779,107.59999847,1003.79998779,0.00000000,0.00000000,0.00000000); //object(kmb_dumbbell) (2)
CreateObject(2916,266.39999390,107.90000153,1003.79998779,0.00000000,0.00000000,320.00000000); //object(kmb_dumbbell) (3)
CreateObject(2916,265.89999390,107.90000153,1003.79998779,0.00000000,0.00000000,280.00000000); //object(kmb_dumbbell) (4)
CreateObject(2916,266.79998779,108.19999695,1003.79998779,0.00000000,0.00000000,310.00000000); //object(kmb_dumbbell) (5)
CreateObject(2915,266.39999390,108.30000305,1003.79998779,0.00000000,0.00000000,320.00000000); //object(kmb_dumbbell2) (1)
CreateObject(2916,266.00000000,108.19999695,1003.79998779,0.00000000,0.00000000,18.00000000); //object(kmb_dumbbell) (6)
CreateObject(2913,263.79998779,107.50000000,1003.90002441,359.98800659,89.75006104,3.49996948); //object(kmb_bpress) (1)
CreateObject(2913,261.39999390,111.69999695,1004.50000000,359.97686768,269.50045776,90.74981689); //object(kmb_bpress) (2)
CreateObject(2680,227.60000610,126.80000305,1003.29998779,338.01409912,357.84307861,57.19216919); //object(cj_padlock) (1)
CreateObject(2614,268.10000610,109.69999695,1005.90002441,0.00000000,0.00000000,270.00000000); //object(cj_us_flag) (1)
CreateObject(2612,268.79998779,116.09999847,1005.40002441,0.00000000,0.00000000,180.75000000); //object(police_nb2) (1)
CreateObject(14782,269.89999390,119.19999695,1004.59997559,0.00000000,0.00000000,270.00000000); //object(int3int_boxing30) (1)
CreateObject(1581,267.60000610,116.00000000,1005.40002441,0.00000000,0.00000000,179.75000000); //object(keycard) (1)
CreateObject(14782,268.39999390,120.40000153,1004.59997559,0.00000000,0.00000000,0.00000000); //object(int3int_boxing30) (2)
CreateObject(3944,262.10000610,124.69999695,1003.09997559,0.00000000,0.00000000,270.00000000); //object(bistro_blok) (3)
CreateObject(3944,262.50000000,124.80000305,1009.90002441,270.49975586,180.00000000,90.00000000); //object(bistro_blok) (6)
CreateObject(3944,270.60000610,121.69999695,1003.09997559,0.00000000,0.00000000,270.00000000); //object(bistro_blok) (7)
CreateObject(3944,270.60000610,121.69999695,1006.59997559,0.00000000,0.00000000,270.00000000); //object(bistro_blok) (8)
CreateObject(1502,264.50000000,115.80000305,1003.59997559,0.00000000,0.00000000,358.50000000); //object(gen_doorint04) (1)
CreateObject(1502,267.50000000,115.80000305,1003.59997559,0.00000000,0.00000000,180.00000000); //object(gen_doorint04) (2)
CreateObject(1810,264.50000000,119.59999847,1003.59997559,0.00000000,0.00000000,130.00000000); //object(cj_foldchair) (1)
CreateObject(1810,264.50000000,118.69999695,1003.59997559,0.00000000,0.00000000,100.00000000); //object(cj_foldchair) (2)
CreateObject(1810,268.60000610,116.59999847,1003.59997559,0.00000000,0.00000000,180.00000000); //object(cj_foldchair) (3)
CreateObject(1810,267.70001221,116.80000305,1003.59997559,0.00000000,0.00000000,120.00000000); //object(cj_foldchair) (4)
CreateObject(1810,264.60000610,117.50000000,1003.59997559,0.00000000,0.00000000,110.00000000); //object(cj_foldchair) (5)
CreateObject(1502,266.89999390,112.59999847,1003.59997559,0.00000000,0.00000000,179.75000000); //object(gen_doorint04) (3)
CreateObject(2952,263.29998779,112.59999847,1003.59997559,0.00000000,0.00000000,90.00000000); //object(kmb_gimpdoor) (5)
CreateObject(2952,267.89999390,112.50000000,1003.59997559,0.00000000,0.00000000,90.00000000); //object(kmb_gimpdoor) (6)
CreateObject(1502,271.50000000,112.50000000,1003.59997559,0.00000000,0.00000000,179.25000000); //object(gen_doorint04) (4)
CreateObject(1495,239.60000610,116.09999847,1002.20001221,0.00000000,0.00000000,89.50000000); //object(gen_doorext01) (1)
CreateObject(1495,239.60000610,119.09999847,1002.20001221,0.00000000,0.00000000,269.50000000); //object(gen_doorext01) (2)
CreateObject(1495,253.19999695,110.59999847,1002.20001221,0.00000000,0.00000000,269.50000000); //object(gen_doorext01) (3)
CreateObject(1495,253.19999695,107.59999847,1002.20001221,0.00000000,0.00000000,89.50000000); //object(gen_doorext01) (4)
CreateObject(1649,242.00000000,119.69999695,1005.59997559,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (5)
CreateObject(1649,246.39999390,119.69999695,1005.59997559,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (6)
CreateObject(1649,250.80000305,119.69999695,1005.59997559,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (7)
CreateObject(1649,250.80000305,119.69999695,1005.59997559,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (8)
CreateObject(1649,246.39999390,119.69999695,1005.59997559,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (9)
CreateObject(1649,242.00000000,119.69999695,1005.59997559,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (10)
//lspd



	MySQLConnect(MYSQL_HOST,MYSQL_USER,MYSQL_PASS,MYSQL_DB);
	AntiDeAMX();
//===========================================[TextDrawLAR]===========================================
	for(new i; i < MAX_PLAYERS; i++)
	{
	    /*lbt1 = TextDrawCreate(-1.000000,2.000000,"---");
		lbb1 = TextDrawCreate(0.000000,380.000000,"---");
		TextDrawUseBox(lbt1,1);
		TextDrawBoxColor(lbt1,0x000000ff);
		TextDrawTextSize(lbt1,640.000000,-35.000000);
		TextDrawUseBox(lbb1,1);
		TextDrawBoxColor(lbb1,0x000000ff);
		TextDrawTextSize(lbb1,638.000000,-35.000000);
		TextDrawAlignment(lbt1,0);
		TextDrawAlignment(lbb1,0);
		TextDrawBackgroundColor(lbt1,0x000000ff);
		TextDrawBackgroundColor(lbb1,0x000000ff);
		TextDrawFont(lbt1,3);
		TextDrawLetterSize(lbt1,1.000000,8.000000);
		TextDrawFont(lbb1,3);
		TextDrawLetterSize(lbb1,0.899999,8.000000);
		TextDrawColor(lbt1,0x000000ff);
		TextDrawColor(lbb1,0x000000ff);
		TextDrawSetOutline(lbt1,1);
		TextDrawSetOutline(lbb1,1);
		TextDrawSetProportional(lbt1,1);
		TextDrawSetProportional(lbb1,1);
		TextDrawSetShadow(lbt1,1);
		TextDrawSetShadow(lbb1,1);*/
		aracbilgi[i] = TextDrawCreate(509, 176, "ARAC BILGI");
		TextDrawAlignment(aracbilgi[i], 1);
		TextDrawFont(aracbilgi[i], 3);
		TextDrawLetterSize(aracbilgi[i], 0.5, 0.5);
		TextDrawColor(aracbilgi[i], 0x0000E9FF);
		arachiz[i] = TextDrawCreate(495, 203, "HIZ :");
		TextDrawAlignment(arachiz[i], 1);
		TextDrawFont(arachiz[i], 3);
		TextDrawLetterSize(arachiz[i], 0.5, 0.5);
		TextDrawColor(arachiz[i], 0x0000E9FF);
		/*deneme = TextDrawCreate(532, 204, "%d");
		TextDrawAlignment(deneme, 1);
		TextDrawFont(deneme, 3);
		TextDrawLetterSize(deneme, 0.5, 0.5);
		TextDrawColor(deneme, 0x0000E9FF);*/
		aracbenzint[i] = TextDrawCreate(499, 226, "BENZIN");
		TextDrawAlignment(aracbenzint[i], 1);
		TextDrawFont(aracbenzint[i], 3);
		TextDrawLetterSize(aracbenzint[i], 0.5, 0.5);
		TextDrawColor(aracbenzint[i], 0x0000E9FF);
		/*deneme = TextDrawCreate(556, 227, "%d");
		TextDrawAlignment(deneme, 1);
		TextDrawFont(deneme, 3);
		TextDrawLetterSize(deneme, 0.5, 0.5);
		TextDrawColor(deneme, 0x0000E9FF);*/
		arachasar[i] = TextDrawCreate(521, 250, "HASAR");
		TextDrawAlignment(arachasar[i], 1);
		TextDrawFont(arachasar[i], 3);
		TextDrawLetterSize(arachasar[i], 0.5, 0.5);
		TextDrawColor(arachasar[i], 0x0000E9FF);
	}
	
	for(new i=0; i<MAX_PLAYERS; i++){
   	Adres[i] = TextDrawCreate(430.750000, 430.000000, "_");
   	TextDrawFont(Adres[i], 1);
   	TextDrawLetterSize(Adres[i], 0.550000, 1.349999);
   	TextDrawColor(Adres[i], -1);
   	TextDrawSetProportional(Adres[i], 1);
   	TextDrawSetShadow(Adres[i], 1);
   	TextDrawTextSize(Adres[i], 607.000000, -1.000000);}
	
	CreatePickup(1239, 1, 1797.3883,-1578.6326,14.0825, 0);

//================================[ARAÇ AYARLARI]==============================
	for(new c=0;c<MAX_VEHICLES;c++)
	{
        AracKaydetmeDurumu[c] = 0;
		Fuel[c] = GasMax;
		CarWindowStatus[c] = 1;
		IsikDurum[c] = 0;
		AlarmDurum[c] = 0;
		KaputDurum[c] = 0;
		BagajDurum[c] = 0;
		MotorDurumu[c] = 0;
		if(MotorsuzArac(c))
		{
		    MotorDurumu[c] = 1;
		}
		KapiDurum[c] = 0;
		ObjeDurum[c] = 0;
	}
//===============================[EK AYARLAR]================================
	ShowPlayerMarkers(0);
	EnableStuntBonusForAll(0);
    DisableInteriorEnterExits();
    AllowInteriorWeapons(1);
	AllowAdminTeleport(1);
	ShowNameTags(0);
	new sendcmd[128];
//=======================[SUNUCU BÝLGÝLERÝ]==============================
	if (!strcmp("Yes", GAMEMODE_USE_VERSION, true))
	{
		format(sendcmd, sizeof(sendcmd), "%s %s", GAMEMODE,VERSION);
		SetGameModeText(sendcmd);
	}
	else
	{
		SetGameModeText(GAMEMODE);
	}
	format(sendcmd, sizeof(sendcmd), "hostname %s", SERVER_NAME);
	SendRconCommand(sendcmd);
	format(sendcmd, sizeof(sendcmd), "mapname %s", MAP_NAME);
	SendRconCommand(sendcmd);
	format(sendcmd, sizeof(sendcmd), "weburl %s", WEBSITE);
	SendRconCommand(sendcmd);
	if (strlen(PASSWORD) != 0)
	{
		format(sendcmd, sizeof(sendcmd), "password %s", PASSWORD);
		SendRconCommand(sendcmd);
	}
//========================================[SUNUCU BÝLGÝ YÜKLEMESÝ]==========================================
	LoadScript();
//===================================[SUNUCU SAATÝ]====================================
	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
//===================================[ZAMANLAYICILAR]===============================================
	SetTimer("UpdateData", 5000, 1);
	SetTimer("SaveServer", 1800000, 1);
	SetTimer("Update", 300000, 1);
	SetTimer("UpdateMoney", 1000, 1);
	SetTimer("PickupGametexts", 1000, 1);
	SetTimer("FuelTimer", 15000, 1);
	SetTimer("JailTimer", 1000, 1);
	SetTimer("OtherTimer", 1000, 1);
	SetTimer("StreamPickups",1000,1);
	SetTimer("AracBilgiYukle",5000,0);
	return 1;
}

public OnGameModeExit()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerDataSave(i);
		}
	}
 	for(new i; i < sizeof(Building); i++)
	{
 		BinaKaydet(i);
	}
 	for(new i; i < sizeof(DynamicFactions); i++)
	{
 		FactionKaydet(i);
	}
 	for(new i; i < sizeof(Houses); i++)
	{
	    EvKaydet(i);
	}
 	for(new i; i < sizeof(Businesses); i++)
	{
	    IsyeriKaydet(i);
	}
 	for(new i; i < sizeof(DynamicCars); i++)
	{
	    AracKaydet(i);
	}
	OtelKaydet();
	MeslekKaydet();
	DepoKaydet();
	LokasyonKaydet();
	LokasyonKaydet2();
	LokasyonKaydet3();
	for(new playerid; playerid < MAX_PLAYERS; playerid++)
	{
		TextDrawHideForAll(aracbilgi[playerid]);
		TextDrawDestroy(aracbilgi[playerid]);
		TextDrawHideForAll(aracbenzint[playerid]);
		TextDrawDestroy(aracbenzint[playerid]);
		TextDrawHideForAll(arachiz[playerid]);
		TextDrawDestroy(arachiz[playerid]);
		TextDrawHideForAll(arachasar[playerid]);
		TextDrawDestroy(arachasar[playerid]);
		TextDrawHideForAll(hiza[playerid]);
		TextDrawDestroy(hiza[playerid]);
		TextDrawHideForAll(benzina[playerid]);
		TextDrawDestroy(benzina[playerid]);
		TextDrawHideForAll(hasara[playerid]);
		TextDrawDestroy(hasara[playerid]);
	}

 	mysql_close();
	return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
    if(!IsPlayerNPC(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			SpawnPlayer(playerid);
			return 1;
		}
		else
		{
		    ClearScreen(playerid);
	    	SetPlayerCameraPos(playerid,-2369.7380,1406.2711,118.5225);
			SetPlayerCameraLookAt(playerid,-2643.2627,1909.2942,99.7135);
		 	new first[MAX_PLAYER_NAME], last[MAX_PLAYER_NAME];
			if(RPName(PlayerName(playerid),first,last))
			{
				SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_SPAS12_SHOTGUN,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,100);
			    SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,100);
				SetPlayerColor(playerid,COLOR_WHITE);
				TextDrawShowForPlayer(playerid,lbt1);
				TextDrawShowForPlayer(playerid,lbb1);
				TextDrawShowForPlayer(playerid,SehriAlem1);

				TextDraw3[playerid] = TextDrawCreate(321.000000, 150.000000, "A");
				TextDrawBackgroundColor(TextDraw3[playerid], 255);
				TextDrawFont(TextDraw3[playerid], 1);
				TextDrawLetterSize(TextDraw3[playerid], 0.500000, 1.000000);
				TextDrawColor(TextDraw3[playerid], -1);
				TextDrawSetOutline(TextDraw3[playerid], 0);
				TextDrawSetProportional(TextDraw3[playerid], 1);
				TextDrawSetShadow(TextDraw3[playerid], 1);
				if(SunucuyaGiris == 0)
				{
					HataMesajiGonder(playerid, "Sunucuya giriþ kapatýlmýþtýr.");
					Kick(playerid);
				}
				MySQLCheckConnection();
			    new sqlaccountstatus = MySQLCheckAccount(GetPlayerNameSave(playerid));
			    if(sqlaccountstatus != 0)
				SetPVarInt(playerid, "SQLid", sqlaccountstatus);
				if(GetPVarInt(playerid, "SQLid") != 0)
				{
				    OyunDurumGuncelle(playerid,1);
					new yazi[1204];
					format(yazi,1204,"{6699FF}%s {FFFFFF}isimli karakter sunucu veritabanýnda kayýtlýdýr lütfen giriþ yapýnýz.",GetPlayerNameEx(playerid));
					ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Giriþ Ýþlemi",yazi,"Giriþ yap","Çýkýþ");
					format(yazi, sizeof(yazi), "%s[%d] sunucuya giriþ yaptý. [GÝRÝÞ]", GetPlayerNameEx(playerid), PlayerInfo[playerid][pSQLid]);
					YoneticiMesajiGonder(yazi);
					SetTimerEx("GirisTimer",60000,false,"i",playerid);
				}
				else
				{
				    if(KAYIT == 1)
				    {
				        ShowPlayerDialog(playerid,60,DIALOG_STYLE_MSGBOX,"Kayýt","Karakteriniz sunucu veritabanýnda bulunamadý, kayýt olmak istermisiniz?","Evet","Hayir");
						return 1;
					}
					HataMesajiGonder(playerid,"Sunucu veritabanýnda karakteriniz bulunamadý.");
				    HataMesajiGonder(playerid,"Sunucuya sadece karakter baþvurusu kabul edilmiþ olanlar girebilir.");
					IpucuMesajiGonder(playerid,"Sizde karakter baþvurusu yapmak istiyorsanýz ''{00CCFF}www.47roleplay.com''{FFFFFF}baþvuru yapýnýz.");
					Kick(playerid);
					return 1;
				}
			}
			else
			{
				CezaMesajiGonder(playerid, "Ýsminiz {86D060}Ad_Soyad{E6E6E6} þeklinde olmalýdýr.");
				Kick(playerid);
			}
		}
		return 0;
	}
}
public OnPlayerRequestSpawn(playerid)
{
    if(!IsPlayerNPC(playerid))
	{
		if(gPlayerLogged[playerid] == 1)
		{
			return 1;
		}
		else
		{
			HataMesajiGonder(playerid, "Lütfen þifrenizi giriniz.");
			return 0;
		}
	}
}

public OnPlayerConnect(playerid)
{
	ClearScreen(playerid);
	ResetStats(playerid);
	GenelMesajGonder(playerid,"{3399FF}47RolePlay:{FFFFFF} Sunucu veritabanýna baðlantý saðlanýyor, lütfen bekleyiniz.");
	return 1;
}
public LoadScript()
{
	BinaYukle();
	FactionYukle();
	EvYukle();
	IsyeriYukle();
    AracYukle();
    OtelYukle();
	MeslekYukle();
	SunucuBilgiYukle();
	DepoYukle();
	LokasyonYukle();
	LokasyonYukle2();
	LokasyonYukle3();
	return 1;
}
public ResetStats(playerid)
{
	//============[NORMAL HESAP BÝLGÝLERÝ]=============
	ResetPlayerWantedLevelEx(playerid);
	TirTurunda[playerid] = 0;
	GemiTurunda[playerid] = 0;
	OtobusTurunda[playerid] = 0;
	YerTemizlemeTurunda[playerid] = 0;
	BankaDurum[playerid] = 0;
	Sapka[playerid] = -1;
	SapkaTakti[playerid] = 0;
	FIzliyor[playerid] = 0;
	AlanAdiTip[playerid] = 0;
	Rag[playerid] = -1;
	RagTakti[playerid] = 0;
	Gozluk[playerid] = -1;
	GozlukTakti[playerid] = 0;
	DestekEkip[playerid] = 0;
	AsansorDurum[playerid] = 0;
	UrunDurum[playerid] = 0;
	MateryalDurum[playerid] = 0;
	OMIzleme[playerid] = 0;
	Yerde[playerid] = 0;
	DovmeDurum[playerid] = 0;
	AracCekiyor[playerid] = 0;
	RaporGonderdi[playerid] = 0;
 	SigaraIciyor[playerid] = 0;
 	SigaraKalanHak[playerid] = 0;
 	Koniler[playerid] = 0;
 	GozuBaglandi[playerid] = 0;
	GozunuBaglayacakKisiID[playerid] = -1;
	TanismaDurum[playerid] = 0;
	Barikat[playerid][0] = 0;
	Durum911[playerid] = 0;
	Tuzak[playerid] = 0;
	Yarali[playerid] = 0;
	BarDurum[playerid] = 0;
	ReduceTime[playerid] = 0;
	DrugsIntake[playerid] = 0;
 	HataSayisi[playerid] = 0;
 	Arac[playerid] = 0;
	Sira[playerid] = 0;
	AracRenk1[playerid] = 0;
	AracRenk2[playerid] = 0;
	SatilikAracID[playerid] = 0;
	SatilikAracUcret[playerid] = 0;
	SatilikAracDurum[playerid] = 0;
	SatilikAraciAlacagiKisi[playerid] = 0;
	TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0;
	PlayerTased[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	CopOnDuty[playerid] = 0;
	WantedLevel[playerid] = 0;
	IhtiyacGuncelleme[playerid] = 0;
	WantedPoints[playerid] = 0;
	PMsEnabled[playerid] = 1;
	AdminDuty[playerid] = 0;
	SpeakerPhone[playerid] = 0;
	StartedCall[playerid] = 0;
	TaserElinde[playerid] = 0;
	KemerTakti[playerid] = 0;
 	Silah[playerid] = 0;
 	SilahSira[playerid] = -1;
 	SilahZaman[playerid] = 0;
	Muted[playerid] = 0;
	PhoneOnline[playerid] = 0;
	TakingDrivingTest[playerid] = 0;
	SetPlayerColor(playerid,COLOR_NOTLOGGED);
	PlayerInfo[playerid][pFaction] = 255;
	AmelyatTipi[playerid] = 0;
	AmelyatRequest[playerid] = -1;
	FactionRequest[playerid] = 255;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pBizKey] = 255;
	PlayerInfo[playerid][pBanned] = 0;
	PlayerInfo[playerid][pWarnings] = 0;
	PlayerInfo[playerid][pCK] = 0;
	PlayerInfo[playerid][pHouseKey] = 255;
	PlayerInfo[playerid][pSapka] = 0;
	PlayerInfo[playerid][pGozluk] = 0;
	PlayerInfo[playerid][pRag] = 0;
	gPlayerLogged[playerid] = 0;
	KiyafetSecimi[playerid] = 0;
	RegistrationStep[playerid] = 0;
	TaxiCallTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportDriver[playerid] = 999;
	TransportMoney[playerid] = 0;
	TransportValue[playerid] = 0;
	TransportDuty[playerid] = 0;
	PlayerOnMission[playerid] = 0;
	TaxiAccepted[playerid] = 999;
	TalkingLive[playerid] = 255;
	LiveOffer[playerid] = 999;
	KnockedDown[playerid] = 0;
	AdminDuyma[playerid] = 1;
	FactionDuyma[playerid] = 1;
	Sarkidinliyor[playerid] = 0;
	Sarkinumarasi[playerid] = 0;
	EvlenmeTeklifi[playerid] = -1;
	BosanmaTeklifi[playerid] = 0;
	TamirEdiyor[playerid] = 0;
	TamirArac[playerid] = 0;
	ModifiyeYapiyor[playerid] = 0;
	ModifiyeTip[playerid] = 0;
	ModifiyeZaman[playerid] = 0;
	ModifiyeObje[playerid] = 0;
	ModifiyeObje2[playerid] = 0;
	ModifiyeArac[playerid] = 0;
	ModifiyeUcret[playerid] = 0;
	BalikTutuyor[playerid] = 0;
	BalikSure[playerid] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pTester] = 0;
	PlayerInfo[playerid][IlkGiris] = 0;
	PlayerInfo[playerid][OyunDurum] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pCash] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pBankNumber] = 0;
	PlayerInfo[playerid][pSkin] = 0;
	PlayerInfo[playerid][pKiyafet1] = 0;
	PlayerInfo[playerid][pKiyafet2] = 0;
	PlayerInfo[playerid][pKiyafet3] = 0;
	PlayerInfo[playerid][pTenRengi] = 0;
	PlayerInfo[playerid][pSpawn] = 0;
	PlayerInfo[playerid][pMedeniHal] = 0;
	PlayerInfo[playerid][pNavigasyon] = 0;
	PlayerInfo[playerid][pFS] = 0;
    PlayerInfo[playerid][pBoxiSkill] = 0;
   	PlayerInfo[playerid][pKneeSkill] = 0;
	PlayerInfo[playerid][pKungSkill] = 0;
	PlayerInfo[playerid][pGrabSkill] = 0;
    PlayerInfo[playerid][pElbowSkill] = 0;
	PlayerInfo[playerid][pSac] = 0;
	new vatno = 1000000 + random(9000000);
	PlayerInfo[playerid][pOdaNumarasi] = 0;
	PlayerInfo[playerid][pOdaKilit] = 0;
	PlayerInfo[playerid][pVatno] = vatno;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pMaterials] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPlayingHours] = 0;
	PlayerInfo[playerid][pAllowedPayday] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pWepLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pPhoneNumber] = 0;
	PlayerInfo[playerid][pPhoneC] = 255;
	PlayerInfo[playerid][pTelsiz] = 0;
	PlayerInfo[playerid][pFrekans] = 0;
	PlayerInfo[playerid][pFrekansAyarlayici] = 0;
	Mobile[playerid] = 255;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pProducts] = 0;
	PlayerInfo[playerid][pKasSeviyesi] = 1;
	PlayerInfo[playerid][pKasDurumu] = 0;
	PlayerInfo[playerid][pHP] = 100.0000;
	PlayerInfo[playerid][pArmour] = 0.0000;
	PlayerInfo[playerid][pNavigasyon1X] = 0.0000;
	PlayerInfo[playerid][pNavigasyon1Y] = 0.0000;
	PlayerInfo[playerid][pNavigasyon1Z] = 0.0000;
	PlayerInfo[playerid][pNavigasyon2X] = 0.0000;
	PlayerInfo[playerid][pNavigasyon2Y] = 0.0000;
	PlayerInfo[playerid][pNavigasyon2Z] = 0.0000;
	PlayerInfo[playerid][pNavigasyon3X] = 0.0000;
	PlayerInfo[playerid][pNavigasyon3Y] = 0.0000;
	PlayerInfo[playerid][pNavigasyon3Z] = 0.0000;
	PlayerInfo[playerid][pSpawnX] = 0.0000;
	PlayerInfo[playerid][pSpawnY] = 0.0000;
	PlayerInfo[playerid][pSpawnZ] = 0.0000;
	PlayerInfo[playerid][pSpawnInt] = 0;
	PlayerInfo[playerid][pSpawnW] = 0;
	//================================================
	return 0;
}
public OnPlayerDisconnect(playerid, reason)
{
    TextDrawHideForPlayer(playerid,SehriAlem);
    if(gPlayerLogged[playerid])
	{
	    OyunDurumGuncelle(playerid,0);
	    new Float:can;
		new Float:zirh;
	    GetPlayerHealth(playerid, can);
	    GetPlayerArmour(playerid, zirh);
	    PlayerInfo[playerid][pHP] = can;
	    PlayerInfo[playerid][pArmour] = zirh;
		PlayerInfo[playerid][OyunDurum] = 0;
		OyuncuSilahlariniKaydet(playerid);
		if(CopOnDuty[playerid] == 1)
		{
		    CopOnDuty[playerid] = 1;
		    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
		RemovePlayerAttachedObject(playerid, 0);
		RemovePlayerAttachedObject(playerid, 1);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		RemovePlayerAttachedObject(playerid, 4);
		HideProgressBarForPlayer(playerid, BenzinGosterge[playerid]);
	    DestroyProgressBar(Bar:BenzinGosterge[playerid]);
	    if(GetPVarInt(playerid, "Holding") != 0)
	    {
			PlayerCuffed[GetPVarInt(playerid, "Holding")] = 0;
			KillTimer(GetPVarInt(GetPVarInt(playerid, "Holding"), "CuffTimer"));
			SetPVarInt(GetPVarInt(playerid, "Holding"), "Stopping", 0);
			ClearAnimations(GetPVarInt(playerid, "Holding"));
			SetPVarInt(playerid, "Holding", 0);
	    }
		if(IsTowTrucker[playerid] == 1)
		{
		    IsTowTrucker[playerid] = 0;
  		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			new Float:U;
			new Float:F;
			new Float:T;
			GetPlayerPos(playerid, U,F,T);
			if(PlayerToPoint(15.0,i, U,F,T))
			{
				new var[90];
				switch(reason)
				{
					case 0:
						format(var, 90, "%s sunucudan ayrýldý. Gerekçe: Crash", GetPlayerNameEx2(playerid, i));
					case 1:
						format(var, 90, "%s sunucudan ayrýldý. Gerekçe: Kendi isteði", GetPlayerNameEx2(playerid, i));
					case 2:
						format(var, 90, "%s sunucudan ayrýldý. Gerekçe: Kick veya ban", GetPlayerNameEx2(playerid, i));
				}
				GenelMesajGonder(i, var);
			}
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(GetPVarInt(i, "Holding") == playerid)
		    {
				SetPVarInt(i, "Holding", 0);
		    }
		    if(PlayerInfo[i][pCK] == 4)
		    {
		        PlayerInfo[i][pCK] = 3;
				for(new k = 0; k < MAX_PLAYERS; i++)
				{
				    if(CKEdecegiKisi[k] == i)
				    {
				        CKEdiyor[k] = 1;
				        CKEdecegiKisi[k] = -1;
				    }
				}
		    }
		    if(CKEdiyor[i] == 1)
		    {
		        PlayerInfo[CKEdecegiKisi[i]][pCK] = 3;
		    }
		    if(SatilikAraciAlacagiKisi[i] == playerid)
		    {
		        SatilikAracID[i] = 0;
				SatilikAracUcret[i] = 0;
				SatilikAracDurum[i] = 0;
				SatilikAraciAlacagiKisi[i] = 0;
		    }
		    if(GozunuBaglayacakKisiID[i] == playerid)
		    {
				SetCameraBehindPlayer(i);
				BilgiMesajiGonder(i, "Gözünüzü baðlayan kiþi oyundan çýktýðý için gözünüzün baðý açýldý.");
				GozuBaglandi[i] = 0;
				GozunuBaglayacakKisiID[i] = -1;
		    }
		    if(IsPlayerConnected(i))
		    {
		        if(TaxiAccepted[i] < 999)
		        {
			        if(TaxiAccepted[i] == playerid)
			        {
			            TaxiCallTime[i] = 0;
			            TaxiAccepted[i] = 999;
			            DisablePlayerCheckpoint(i);
			            BilgiMesajiGonder(i, "Taksi çaðýran kiþi sunucudan ayrýldý.");
			        }
		        }
		    }
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    new string[64];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    format(string, sizeof(string), "Musteri taksiden indi.~n~~w~Ucret:~g~%d$",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			    RemoveDriverFromVehicle(playerid);
			}
		}
	    if(TransportDuty[playerid] == 1)
		{
			TaxiDrivers -= 1;
		}
		ModifiyeYapiyor[playerid] = 0;
		ModifiyeTip[playerid] = 0;
		ModifiyeZaman[playerid] = 0;
		ModifiyeObje[playerid] = 0;
		ModifiyeObje2[playerid] = 0;
		ModifiyeArac[playerid] = 0;
		ModifiyeUcret[playerid] = 0;
  		new string[128];
		OnPlayerDataSave(playerid);
		format(string, sizeof(string), "%s[%d] sunucudan ayrýldý.",GetPlayerNameEx(playerid), PlayerInfo[playerid][pSQLid]);
		YoneticiMesajiGonder(string);
		RemovePlayerAttachedObject(playerid, 0);
        RemovePlayerAttachedObject(playerid, 1);
        RemovePlayerAttachedObject(playerid, 2);
        RemovePlayerAttachedObject(playerid, 3);
        RemovePlayerAttachedObject(playerid, 4);
		OnPlayerDataSave(playerid);
		Yarali[playerid] = 0;
		DeleteStrip(playerid);
		if(Koniler[playerid] != 0)
		{
			for(new i = 1; i < 11; i++)
			{
	  			DestroyObject(TrafikKoni[playerid][i]);
				Koniler[playerid] = 0;
			}
		}
		if(Barikat[playerid][0] != 0)
		{
		    DestroyObject(Barikat[playerid][1]);
		    Barikat[playerid][0] = 0;
		}
	}
	return 1;
}
public OnPlayerSpawn(playerid)
{
		if(gPlayerLogged[playerid])
		{
			if(PlayerInfo[playerid][pAdmin] >= 1 && AdminDuty[playerid] == 1)
			{
				SetPlayerColor(playerid,COLOR_ADMINDUTY);
			}
			if(PlayerInfo[playerid][pAdmin] >= 1 && AdminDuty[playerid] == 0)
			{
				SetPlayerColor(playerid,COLOR_WHITE);
			}
			if(PlayerInfo[playerid][pTester] >= 1 && TesterDuty[playerid] == 1)
			{
				SetPlayerColor(playerid,COLOR_TESTERDUTY);
			}
			if(PlayerInfo[playerid][pTester] >= 1 && TesterDuty[playerid] == 0)
			{
				SetPlayerColor(playerid,COLOR_WHITE);
			}
			if(GozuBaglandi[playerid] == 1)
			{
				SetPlayerCameraPos(playerid, 2000,-2000,2000);
				SetPlayerCameraLookAt(playerid, 2000,-2000,2000);
			}
	  		TextDrawHideForPlayer(playerid, lbt1);
	  		TextDrawHideForPlayer(playerid, lbb1);
	  		BenzinGosterge[playerid] = CreateProgressBar(501.00, 103.00, 106.50, 4.19, 0xEEDF00FF, 100.0);
			SetPlayerSkills(playerid);
			if(Olum[playerid] == 1)
			{
			    SetPlayerPos(playerid, OlumX[playerid], OlumY[playerid], OlumZ[playerid]);
			    SetPlayerVirtualWorld(playerid, OlumVW[playerid]);
				SetPlayerInterior(playerid, OlumInt[playerid]);
				if(CopOnDuty[playerid] == 1)
				{
				    SetPlayerSkin(playerid, CopOnDutySkin[playerid]);
				}
				Olum[playerid] = 0;
				OlumX[playerid] = 0;
				OlumY[playerid] = 0;
				OlumZ[playerid] = 0;
				OlumVW[playerid] = 0;
				OlumInt[playerid] = 0;
				TogglePlayerControllable(playerid, 0);
				SetTimer("kalkis",90000,0);
				SetTimer("olmesin",250,1);
				SetTimer("texttimer",6000,1);
				kalkabilir[playerid]=0;
				LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
				if(SapkaTakti[playerid] == 1)
				{
					new skin, cap, ilerleme = 1;
					skin = (GetPlayerSkin(playerid) - 1);
					switch(PlayerInfo[playerid][pSapka])
					{
						case 1:    cap = 18926;
						case 2..9: cap = 18926 + PlayerInfo[playerid][pSapka];
					}
					for(new s = 0; s < sizeof(HataliKiyafetler); s++)
					{
						if(skin == HataliKiyafetler[s])
						{
							HataMesajiGonder(playerid, "Kullandýðýnýz kýyafete þapka takamazsýnýz.");
							ilerleme = 0;
						}
					}
					if(ilerleme == 1)
					{
						SapkaTakti[playerid] = 1;
						SetPlayerAttachedObject(playerid, 2, cap, 2, CapsSkinOffSet[skin][0], CapsSkinOffSet[skin][1], CapsSkinOffSet[skin][2], CapsSkinOffSet[skin][3], CapsSkinOffSet[skin][4], CapsSkinOffSet[skin][5]);
					}
				}
				if(RagTakti[playerid] == 1)
				{
					RagTakti[playerid] = 1;
					if(PlayerInfo[playerid][pRag] ==  0)
					{
						SetPlayerAttachedObject(playerid, 3, 18911, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  1)
					{
						SetPlayerAttachedObject(playerid, 3, 18912, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  2)
					{
						SetPlayerAttachedObject(playerid, 3, 18913, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  3)
					{
						SetPlayerAttachedObject(playerid, 3, 18914, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  4)
					{
						SetPlayerAttachedObject(playerid, 3, 18915, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  5)
					{
						SetPlayerAttachedObject(playerid, 3, 18916, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  6)
					{
						SetPlayerAttachedObject(playerid, 3, 18917, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  7)
					{
						SetPlayerAttachedObject(playerid, 3, 18918, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  8)
					{
						SetPlayerAttachedObject(playerid, 3, 18919, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  9)
					{
						SetPlayerAttachedObject(playerid, 3, 18920, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
				}
				if(GozlukTakti[playerid] == 1)
				{
					new skin = GetPlayerSkin(playerid);
					GozlukTakti[playerid] = 1;
					new glasseid = 19006 + (PlayerInfo[playerid][pGozluk] - 1);
					SetPlayerAttachedObject(playerid, 4, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				}
				return 1;
			}
			SetPlayerSpawn(playerid);
			printf("%s isimli spawn oldu.",GetPlayerNameEx(playerid));
		}
		return 1;
}
public Motor1(playerid)
{
	PlayerActionMessage(playerid, 15.0, "anahtarý kontaðýn içerisinde çevirir.");
	SetTimerEx("Motor2",1500,false,"i",playerid);
}
public Motor2(playerid)
{
	new sonuc = random(9);
    new vehicleid = GetPlayerVehicleID(playerid);
	switch(sonuc)
 	{

		case 0..8:
		{
			TogglePlayerControllable(playerid, 1);
			MotorDurumu[GetPlayerVehicleID(playerid)] = 1;
			SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
		    PlayerDoMessage(playerid, 15.0, "Motor çalýþmýþtýr.");
		}
		case 9:
		{
		    PlayerDoMessage(playerid, 15.0, "Motor çalýþmamýþtýr.");
		}
	}
}
public Alarm(playerid)
{
	new form[128];
	format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(CalanAracID[playerid])-400],DynamicCars[CalanAracID[playerid]][CarDescription]);
	PlayerDoMessage(playerid,15.0,form);
    SetTimerEx("Alarm2",3000,false,"i",playerid);
}
public Alarm2(playerid)
{
	new form[128];
	format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(CalanAracID[playerid])-400],DynamicCars[CalanAracID[playerid]][CarDescription]);
	PlayerDoMessage(playerid,15.0,form);
    SetTimerEx("Alarm3",3000,false,"i",playerid);
}
public Alarm3(playerid)
{
	new form[128];
	format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(CalanAracID[playerid])-400],DynamicCars[CalanAracID[playerid]][CarDescription]);
	PlayerDoMessage(playerid,15.0,form);
	SetTimerEx("Alarm4",3000,false,"i",playerid);
}
public Alarm4(playerid)
{
	new form[128];
	format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(CalanAracID[playerid])-400],DynamicCars[CalanAracID[playerid]][CarDescription]);
	PlayerDoMessage(playerid,15.0,form);
	AlarmDurum[CalanAracID[playerid]] = 0;
	SetVehicleParamsEx(CalanAracID[playerid], MotorDurumu[CalanAracID[playerid]], IsikDurum[CalanAracID[playerid]], AlarmDurum[CalanAracID[playerid]], KapiDurum[CalanAracID[playerid]], KaputDurum[CalanAracID[playerid]], BagajDurum[CalanAracID[playerid]], ObjeDurum[CalanAracID[playerid]]);
}
stock GetString(playerid, var[])
{
	new string[160];
	GetPVarString(playerid, var, string, sizeof(string));
	return string;
}
GetXYInFrontOfVehicle(vehid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetVehiclePos(vehid, x, y, a);
	GetVehicleZAngle(vehid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if (GetPlayerVehicleID(playerid))
	{
		GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
stock SetPlayerToFacePlayer(playerid, targetid)
{
	new	Float:pX;
	new	Float:pY;
	new	Float:pZ;
	new	Float:kX;
	new	Float:kY;
	new	Float:kZ;
	new	Float:ang;
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid))
	{
		return 0;
	}
	GetPlayerPos(targetid, kX, kY, kZ);
	GetPlayerPos(playerid, pX, pY, pZ);
	if( kY > pY )
	{
		ang = (-acos((kX - pX) / floatsqroot((kX - pX)*(kX - pX) + (kY - pY)*(kY - pY))) - 90.0);
    }
	else if( kY < pY && kX < pX )
	{
		ang = (acos((kX - pX) / floatsqroot((kX - pX)*(kX - pX) + (kY - pY)*(kY - pY))) - 450.0);
    }
	else if( kY < pY )
    {
    	ang = (acos((kX - pX) / floatsqroot((kX - pX)*(kX - pX) + (kY - pY)*(kY - pY))) - 90.0);
    }
	if(kX > pX)
	{
		ang = (floatabs(floatabs(ang) + 180.0));
	}
	else
	{
		ang = (floatabs(ang) - 180.0);
	}
	SetPlayerFacingAngle(playerid, ang);
 	return 0;
}
stock OyuncuyuAracaKoy(playerid, vehicleid, seat)
{
	PutPlayerInVehicle(playerid, vehicleid, seat);
	SeatTaken[seat][vehicleid] = 1;
	return 1;
}
stock StartSpectate(playerid, specplayerid)
{
	for(new x=0; x<MAX_PLAYERS; x++)
	{
		if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && SpecID[x] == playerid)
		{
	       AdvanceSpectate(x);
		}
	}
	SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
	TogglePlayerSpectating(playerid, 1);

	if(IsPlayerInAnyVehicle(specplayerid))
	{
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
		SpecID[playerid] = specplayerid;
		SpecType[playerid] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else
	{
		PlayerSpectatePlayer(playerid, specplayerid);
		SpecID[playerid] = specplayerid;
		SpecType[playerid] = ADMIN_SPEC_TYPE_PLAYER;
	}
	return 1;
}
stock StopSpectate(playerid)
{
	TogglePlayerSpectating(playerid, 0);
	SpecID[playerid] = INVALID_PLAYER_ID;
	SpecType[playerid] = ADMIN_SPEC_TYPE_NONE;
	return 1;
}
stock AdvanceSpectate(playerid)
{
    if(BagliOyuncular == 2)
	{
		StopSpectate(playerid);
		return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && SpecID[playerid] != INVALID_PLAYER_ID)
	{
	    for(new x=SpecID[playerid]+1; x<=MAX_PLAYERS; x++)
		{
	    	if(x == MAX_PLAYERS) x = 0;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && SpecID[x] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}
stock ReverseSpectate(playerid)
{
    if(BagliOyuncular() == 2)
	{
		StopSpectate(playerid);
		return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && SpecID[playerid] != INVALID_PLAYER_ID)
	{
	    for(new x=SpecID[playerid]-1; x>=0; x--)
		{
	    	if(x == 0) x = MAX_PLAYERS;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && SpecID[x] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}
forward Duzeltme(playerid);
public Duzeltme(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
}
forward aracspawn(playerid);
public aracspawn(playerid)
{
	new string[128];
	/*format(string, sizeof(string), "{F67A00}%s: {E6E6E6}Bütün araçlar respawn edilmiþtir.", GetPlayerNameEx(playerid));
	TopluMesajGonder(string);*/
	format(string, sizeof(string), "%s[%d] araçlara respawn attý.", GetPlayerNameEx(playerid), PlayerInfo[playerid][pSQLid]);
	YoneticiMesajiGonder(string);
	for(new i=0;i != MAX_VEHICLES;i++)
	{
 		if(IsVehicleOccupied(i) == 0)
   		{
			AracKaydetmeDurumu[i] = 0;
     		SetVehicleToRespawn(i);
     		SetVehicleHealth(i, DynamicCars[i][CarHealth]);
     		UpdateVehicleDamageStatusEx(i, DynamicCars[i][Panels], DynamicCars[i][Doors], DynamicCars[i][Lights], DynamicCars[i][Tires]);
     		AracKaydetmeDurumu[i] = 1;
			MotorDurumu[i] = 0;
			SetVehicleParamsEx(i, MotorDurumu[i], IsikDurum[i], AlarmDurum[i], KapiDurum[i], KaputDurum[i], BagajDurum[i], ObjeDurum[i]);
	    }
	    if(DynamicCars[i][ModNeon] != 0)
		{
			 		DestroyObject(AracNeon[0][i]);
			   		DestroyObject(AracNeon[1][i]);
		}
		if(PolisLamba[0][i] != 0)
		{
				    DestroyObject(PolisLamba[1][i]);
		}
		SetTimerEx("LambalariYukle",10000,false,"i",i);
	}
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:SLN,Float:DL,Float:GN;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, SLN,DL,GN);
	    new Float:Distance = (SLN-PX)*(SLN-PX)+(DL-PY)*(DL-PY)+(GN-PZ)*(GN-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}
forward ClearKnock(playerid);
public ClearKnock(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	KnockedDown[playerid] = 0;
}
forward BoxTrain(playerid);
public BoxTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 772.4446,5.4702,1000.7802);
	SetPlayerFacingAngle(playerid, 89.8261);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,29500);
	SetTimerEx("BoxTrain2", 30000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~l~] ] ]",30000,3);
	return 1;
}
forward BoxTrain2(playerid);
public BoxTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,34500);
	SetTimerEx("BoxTrain3", 35000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ~l~] ]",35000,3);
	return 1;
}
forward BoxTrain3(playerid);
public BoxTrain3(playerid)
{
   	PlayerInfo[playerid][pFS] = 1;
	GivePlayerCash(playerid, -1500);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,36500);
	SetTimerEx("BoxTrain4", 37000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ] ~l~]",37000,3);
	return 1;
}
forward BoxTrain4(playerid);
public BoxTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	BilgiMesajiGonder(playerid, "Antreman bitti.");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Bitti ! ~n~~r~] ] ]",10000,3);
    SetPlayerSkills(playerid);
    PlayerInfo[playerid][pBoxiSkill] = 1;
	return 1;
}
forward KungTrain(playerid);
public KungTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 772.4446,5.4702,1000.7802);
	SetPlayerFacingAngle(playerid, 89.8261);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,29500);
	SetTimerEx("KungTrain2", 30000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~l~] ] ]",30000,3);
	return 1;
}
forward KungTrain2(playerid);
public KungTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,34500);
	SetTimerEx("KungTrain3", 35000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ~l~] ]",35000,3);
	return 1;
}
forward KungTrain3(playerid);
public KungTrain3(playerid)
{
   	PlayerInfo[playerid][pFS] = 2;
	GivePlayerCash(playerid, -2000);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,36500);
	SetTimerEx("KungTrain4", 37000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ] ~l~]",37000,3);
	return 1;
}
forward KungTrain4(playerid);
public KungTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	BilgiMesajiGonder(playerid, "Antreman bitti.");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Bitti ! ~n~~r~] ] ]",10000,3);
    SetPlayerSkills(playerid);
    PlayerInfo[playerid][pKungSkill] = 1;
	return 1;
}
forward GrabTrain(playerid);
public GrabTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 772.4446,5.4702,1000.7802);
	SetPlayerFacingAngle(playerid, 89.8261);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,29500);
	SetTimerEx("GrabTrain2", 30000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~l~] ] ]",30000,3);
	return 1;
}
forward GrabTrain2(playerid);
public GrabTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,34500);
	SetTimerEx("GrabTrain3", 35000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ~l~] ]",35000,3);
	return 1;
}
forward GrabTrain3(playerid);
public GrabTrain3(playerid)
{
   	PlayerInfo[playerid][pFS] = 3;
	GivePlayerCash(playerid, -2500);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,36500);
	SetTimerEx("GrabTrain4", 37000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ] ~l~]",37000,3);
	return 1;
}
forward GrabTrain4(playerid);
public GrabTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	BilgiMesajiGonder(playerid, "Antreman bitti.");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Bitti ! ~n~~r~] ] ]",10000,3);
    SetPlayerSkills(playerid);
    PlayerInfo[playerid][pGrabSkill] = 1;
	return 1;
}
forward KneeTrain(playerid);
public KneeTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 772.4446,5.4702,1000.7802);
	SetPlayerFacingAngle(playerid, 89.8261);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,29500);
	SetTimerEx("KneeTrain2", 30000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~l~] ] ]",30000,3);
	return 1;
}
forward KneeTrain2(playerid);
public KneeTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,34500);
	SetTimerEx("KneeTrain3", 35000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ~l~] ]",35000,3);
	return 1;
}
forward KneeTrain3(playerid);
public KneeTrain3(playerid)
{
    PlayerInfo[playerid][pFS] = 4;
	GivePlayerCash(playerid, -3500);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,36500);
	SetTimerEx("KneeTrain4", 37000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ] ~l~]",37000,3);
	return 1;
}
forward KneeTrain4(playerid);
public KneeTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	BilgiMesajiGonder(playerid, "Antreman bitti.");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Bitti ! ~n~~r~] ] ]",10000,3);
    SetPlayerSkills(playerid);
    PlayerInfo[playerid][pKneeSkill] = 1;
	return 1;
}
forward ElbowTrain(playerid);
public ElbowTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 772.4446,5.4702,1000.7802);
	SetPlayerFacingAngle(playerid, 89.8261);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,29500);
	SetTimerEx("ElbowTrain2", 30000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~l~] ] ]",30000,3);
	return 1;
}
forward ElbowTrain2(playerid);
public ElbowTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,34500);
	SetTimerEx("ElbowTrain3", 35000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ~l~] ]",35000,3);
	return 1;
}
forward ElbowTrain3(playerid);
public ElbowTrain3(playerid)
{
    PlayerInfo[playerid][pFS] = 5;
	GivePlayerCash(playerid, -2500);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,36500);
	SetTimerEx("ElbowTrain4", 37000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Antreman... ~n~~r~] ] ~l~]",37000,3);
	return 1;
}
forward ElbowTrain4(playerid);
public ElbowTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	BilgiMesajiGonder(playerid, "Antreman bitti.");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Bitti ! ~n~~r~] ] ]",10000,3);
    SetPlayerSkills(playerid);
    PlayerInfo[playerid][pElbowSkill] = 1;
	return 1;
}
forward SetPlayerSkills(playerid);
public SetPlayerSkills(playerid)
{
	if(PlayerInfo[playerid][pFS] == 0)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_NORMAL);
	}
	if(PlayerInfo[playerid][pFS] == 1)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_BOXING);
	}
	if(PlayerInfo[playerid][pFS] == 2)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_KUNGFU);
	}
	if(PlayerInfo[playerid][pFS] == 3)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_GRABKICK);
	}
	if(PlayerInfo[playerid][pFS] == 4)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(PlayerInfo[playerid][pFS] == 5)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
	}
	return 1;
}
forward AdamDuzelt(playerid);
public AdamDuzelt(playerid)
{
	TogglePlayerControllable(playerid, 1);
}
forward ReduceTimer(playerid);
public ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}
stock GetWeaponNameEx(id, name[], len)
{
	return format(name,len, "%s", SilahIsimleri[id]);
}
forward RemovePlayerWeapon(playerid, weaponid);
public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	ResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			GivePlayerWeaponEx(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}
forward PolisTakip(playerid);
public PolisTakip(playerid)
{
	new Float:x;
	new Float:y;
	new Float:z;
	new int1;
	new int2;
	new world;
	new car = GetPlayerVehicleID(GetPVarInt(playerid, "Stopping"));
	int1 = GetPlayerInterior(playerid);
	int2 = GetPlayerInterior(GetPVarInt(playerid, "Stopping"));
	world = GetPlayerVirtualWorld(GetPVarInt(playerid, "Stopping"));
	GetPlayerPos(GetPVarInt(playerid, "Stopping"), x,y,z);
	GetXYInFrontOfPlayer(GetPVarInt(playerid, "Stopping"), x, y, 1.5);
	if(IsPlayerInRangeOfPoint(playerid, 3, x,y,z) && GetPVarInt(playerid,"WalkingTo") == 1 && GetPVarInt(playerid, "InCar") == 0)
	{
		ClearAnimations(playerid);
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 4.5, x,y,z))
	{
		if(IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(GetPVarInt(playerid, "Stopping")))
		{
			RemovePlayerFromVehicle(playerid);
			SetPVarInt(playerid, "InCar", 0);
		}
		if(GetPVarInt(playerid, "InCar") == 0)
		{
			SetPlayerToFacePlayer(playerid, GetPVarInt(playerid, "Stopping")),
			SetPVarInt(playerid, "WalkingTo", 1),
			ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
		}
		if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "Stopping")) && GetPVarInt(playerid, "InCar") == 0)
        {
			ClearAnimations(playerid);
			SetPVarInt(playerid, "InCar", 1);
			SendToVeh(playerid, car);
        }
		if(int1 != int2)
		{
			SetPlayerInterior(playerid, int2);
			SetPlayerVirtualWorld(playerid, world);
			SetPlayerPos(playerid, x,y+2,z);
		}
	}
	return 1;
}
forward SendToVeh(playerid, vehicleid);
public SendToVeh(playerid, vehicleid)
{
	new seat;
	if(SeatTaken[1][vehicleid] == 0)
	{
		seat = 1;
	}
	else if(SeatTaken[1][vehicleid] == 1)
	{
		seat = 2;
	}
	if(SeatTaken[2][vehicleid] == 1 && seat == 1)
	{
		seat = 3;
	}
	else if(SeatTaken[3][vehicleid] == 1)
	{
		seat = 4;
	}
	if(seat == 2 || seat == 3 || seat == 1)
	{
		OyuncuyuAracaKoy(playerid, vehicleid, seat);
	}
	if(seat == 4)
	{
		GameTextForPlayer(playerid, "~W~Koltuk icin bekleniyor...", 1000, 1);
	}
	return 1;
}
forward TanismaSistemi(playerid);
public TanismaSistemi(playerid)
{
	for(new forplayerid = 0; forplayerid < MAX_PLAYERS; forplayerid++)
	{
		if(IsPlayerConnected(forplayerid))
		{
		    if(StreamOldu[playerid][forplayerid] == 1)
		    {
				new string[80];
				/*format(query, sizeof(query), "SELECT * FROM `tanis` WHERE `TaniyanKisi` = '%d' AND `TaninanKisi` = '%d'", PlayerInfo[playerid][pSQLid], PlayerInfo[forplayerid][pSQLid]);
				mysql_query(query);
				mysql_store_result();
				mysql_num_rows();*/
				new Float:HP;
				GetPlayerHealth(forplayerid, HP);
				new integerHP = floatround(Float: HP);
				if(mysql_num_rows() >= 1 && PlayerInfo[forplayerid][pUnlu] == 0)
				{
						format(string, sizeof(string), " %s (%d) \n{E6E6E6}HP:%s %i", GetPlayerNameEx(forplayerid), forplayerid, HPRenk(HP), integerHP);
				}
				else
				{
						format(string, sizeof(string), " %s (%d) \n{E6E6E6}HP:%s %i", GetPlayerNameEx(forplayerid), forplayerid, HPRenk(HP), integerHP);
				}
				if(PlayerInfo[forplayerid][pUnlu] == 1)
				{
				    format(string, sizeof(string), "{F6F600} %s (%d) \n{E6E6E6}HP:%s %i", GetPlayerNameEx(forplayerid), forplayerid, HPRenk(HP), integerHP);
				}
				if(MaskeKullaniyor[forplayerid] == 1)
				{
					format(string, sizeof(string), "Maskeli_%d", PlayerInfo[forplayerid][pSQLid]);
				}
				if(KafaYazisiX[playerid][forplayerid] == 0)
				{
					KafaYazisi[playerid][forplayerid] = CreatePlayer3DTextLabel(playerid, string, 0xFFFFFFFF, 0, 0, 0.2, 20.0, forplayerid, INVALID_VEHICLE_ID, 1);
					KafaYazisiX[playerid][forplayerid] = 1;
				}
				if(KafaYazisiX[playerid][forplayerid] == 1)
				{
					DeletePlayer3DTextLabel(playerid, PlayerText3D:KafaYazisi[playerid][forplayerid]);
					KafaYazisi[playerid][forplayerid] = CreatePlayer3DTextLabel(playerid, string, 0xFFFFFFFF, 0, 0, 0.2, 20.0, forplayerid, INVALID_VEHICLE_ID, 1);
				}
			}
			else
			{
				if(KafaYazisiX[playerid][forplayerid] == 1)
				{
				    DeletePlayer3DTextLabel(playerid, PlayerText3D:KafaYazisi[playerid][forplayerid]);
					KafaYazisiX[playerid][forplayerid] = 0;
				}
			}
		}
		else
		{
			if(KafaYazisiX[playerid][forplayerid] == 1)
			{
				DeletePlayer3DTextLabel(playerid, PlayerText3D:KafaYazisi[playerid][forplayerid]);
                KafaYazisiX[playerid][forplayerid] = 0;
			}
		}
	}
}
public OnPlayerStreamIn(playerid, forplayerid)
{
	StreamOldu[playerid][forplayerid] = 1;
}
public OnPlayerStreamOut(playerid, forplayerid)
{
	StreamOldu[playerid][forplayerid] = 0;
}
forward ArkadasEkle(sqlid, sqlid2);
public ArkadasEkle(sqlid, sqlid2)
{
	new yazi[500];
	format(yazi,sizeof(yazi),"INSERT INTO `tanis` (`TaniyanKisi`, `TaninanKisi`) VALUES ('%d', '%d')",sqlid, sqlid2);
	mysql_query(yazi);
    return 1;
}
stock GetName(playerid)
{
	new name[256];
	GetPlayerName(playerid,name,256);
	return name;
}
OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}
LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}
public OnPlayerDeath(playerid, killerid, reason)
{
	new Float:XXZ, Float:YYZ, Float:ZZZ;
	GetPlayerPos(playerid, XXZ, YYZ, ZZZ);
	Olum[playerid] = 1;
	OlumX[playerid] = XXZ;
	OlumY[playerid] = YYZ;
	OlumZ[playerid] = ZZZ;
	OlumVW[playerid] = GetPlayerVirtualWorld(playerid);
	OlumInt[playerid] = GetPlayerInterior(playerid);
	PlayerInfo[playerid][pHP] = 15;
	SetPlayerHealth(playerid,15);
	PlayerInfo[playerid][pArmour] = 0;
	TogglePlayerControllable(playerid, 0);
	OyuncuSilahlariniKaydet(playerid);
	SendClientMessage(playerid, COLOR_RED, "Þuanda öldünüz . 1,5 dakika sonra (/kalk) komutunu kullanarak ayaða kalkabilirsiniz .");
	return 1;
}
public OnVehicleSpawn(vehicleid)
{
    AraciModifiyeEt(vehicleid);
	SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
	if(strcmp(DynamicCars[vehicleid][CarDescription], "", true, 10) == 0)
	{
		SetVehicleNumberPlate(vehicleid,DynamicCars[vehicleid][CarDescription]);
	}
	return 1;
}
forward AracBilgiYukle();
public AracBilgiYukle()
{
	for(new i=0;i != MAX_VEHICLES;i++)
	{
		AracKaydetmeDurumu[i] = 0;
		SetVehicleToRespawn(i);
		SetVehicleHealth(i, DynamicCars[i][CarHealth]);
		UpdateVehicleDamageStatusEx(i, DynamicCars[i][Panels], DynamicCars[i][Doors], DynamicCars[i][Lights], DynamicCars[i][Tires]);
		AracKaydetmeDurumu[i] = 1;
	}
}
forward AraciModifiyeEt(vehicleid);
public AraciModifiyeEt(vehicleid)
{
 	if(DynamicCars[vehicleid][ModPaintjob] < 3)
	{
	    ChangeVehicleColor(vehicleid,1,1);
        ChangeVehiclePaintjob(vehicleid, DynamicCars[vehicleid][ModPaintjob]);
	}
	if(DynamicCars[vehicleid][ModSpoiler] > 0)
	{
		AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModSpoiler]);
	}
	if(DynamicCars[vehicleid][ModRoof] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModRoof]);
	}
	if(DynamicCars[vehicleid][ModLeftSideSkirt] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModLeftSideSkirt]);
	}
	if(DynamicCars[vehicleid][ModRightSideSkirt] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModRightSideSkirt]);
	}
	if(DynamicCars[vehicleid][ModExhaust] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModExhaust]);
	}
	if(DynamicCars[vehicleid][ModWheels] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModWheels]);
	}
	if(DynamicCars[vehicleid][ModFrontBumper] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModFrontBumper]);
	}
	if(DynamicCars[vehicleid][ModRearBumper] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModRearBumper]);
	}
	if(DynamicCars[vehicleid][ModStereo] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModStereo]);
	}
	if(DynamicCars[vehicleid][ModHydraulics] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModHydraulics]);
	}
	if(DynamicCars[vehicleid][ModNitro] > 0)
	{
        AddVehicleComponent(vehicleid, DynamicCars[vehicleid][ModNitro]);
	}
	if(DynamicCars[vehicleid][ModNeon] > 0)
	{
		AracNeon[0][vehicleid] = CreateObject(DynamicCars[vehicleid][ModNeon],0,0,0,0,0,0);
		AracNeon[1][vehicleid] = CreateObject(DynamicCars[vehicleid][ModNeon],0,0,0,0,0,0);
		AttachObjectToVehicle(AracNeon[0][vehicleid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		AttachObjectToVehicle(AracNeon[1][vehicleid], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
}
forward UpdateVehicleDamageStatusEx(vehicleid, panels, doors, lights, tires);
public UpdateVehicleDamageStatusEx(vehicleid, panels, doors, lights, tires)
{
	if(DynamicCars[vehicleid][FactionCar] == 255 && DynamicCars[vehicleid][CarType] == 2 && DynamicCars[vehicleid][CarOwned] == 1)
	{
	    UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
	}
}
public OnVehicleDeath(vehicleid, killerid)
{
    DestroyObject(PolisLamba[1][vehicleid]);
    PolisLamba[0][vehicleid] = 0;
	MotorDurumu[vehicleid] = 0;
	SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
	if(DynamicCars[vehicleid][CarType] == 9)
	{
		new string[256];
		DynamicCars[vehicleid][CarType] = 8;
		format(string, sizeof(string), "Kiralik");
		strmid(DynamicCars[vehicleid][CarOwner], string, 0, strlen(string), 20);
		DynamicCars[vehicleid][AracKiraZaman] = 0;
		return 1;
	}
	DynamicCars[vehicleid][cSigorta]--;
	DynamicCars[vehicleid][cKazaSayi]++;
	if(DynamicCars[vehicleid][AracPatladi] == 0 && DynamicCars[vehicleid][FactionCar] == 255 && DynamicCars[vehicleid][CarType] == 2 && DynamicCars[vehicleid][CarOwned] == 1)
	{
		if(DynamicCars[vehicleid][cSigorta] <= -1)
		{
		    new string[256];
			format(string, sizeof(string), "%s, %d ID'li (%s, %d, %d) aracý patlatarak yok etti.", GetPlayerNameEx(killerid), vehicleid, VehicleName[GetVehicleModel(vehicleid)-400], DynamicCars[vehicleid][CarColor1], DynamicCars[vehicleid][CarColor2]);
			AracLog(string);
			AracSil(vehicleid);
		}
		DynamicCars[vehicleid][AracPatladi] = 1;
	}
	return 1;
}
public OnPlayerText(playerid, text[])
{
	new tmp[256];
	new string[256];
	if(Muted[playerid])
	{
		HataMesajiGonder(playerid, "Yönetici tarafýndan susturulduðunuz için konuþamazsýnýz.");
		return 0;
	}
	if(Yarali[playerid] == 1)
	{
	    format(string, sizeof(string), " (Kýsýk sesle): %s",text);
		ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		TalkLog(string);
		return 0;
	}
	if (strcmp(":)", text, true, 10) == 0)
 	{
		PlayerActionMessage(playerid,15.0,"gülümser.");
	   return 0;
  	}
	if (strcmp(":D", text, true, 10) == 0)
 	{
		PlayerActionMessage(playerid,15.0,"kahkaha atar.");
		return 0;
	}
	/*if (strcmp(":S", text, true, 10) == 0)
 	{
		PlayerActionMessage(playerid,15.0,"yüzünü buruþturur.");
		return 0;
	}
	if (strcmp(":(", text, true, 10) == 0)
 	{
		PlayerDoMessage(playerid,15.0,"Yüzünde üzgün bir ifade oluþmuþtur.");
		return 0;
	}
	if (strcmp(":O", text, true, 10) == 0)
 	{
		PlayerDoMessage(playerid,15.0,"Yüzünde þaþkýn bir ifade oluþmuþtur.");
		return 0;
	}
	if (strcmp(";)", text, true, 10) == 0)
	{
		new Float:xI;
		new Float:yI;
		new Float:zI;
		new yinsancik = GetClosestPlayer(playerid);
		GetPlayerPos(yinsancik, xI, yI, zI);
		if(IsPlayerInRangeOfPoint(playerid, 10 , xI, yI, zI))
		{
			PlayerPlayerActionMessage(playerid,yinsancik,15.0,"göz kýrpar.");
			return 0;
		}
		else
		{
			return 0;
		}
	}*/
	if(Durum911[playerid] == 1)
	{
		if ((strcmp("Polis", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("polis")))
		{
			Durum911[playerid] = 2;
			SendClientMessage(playerid, COLOR_WHITE, "GÖREVLÝ: Polisi seçtiniz, olay ve yer hakkýnda bilgi verin.");
		}
		if ((strcmp("Hastane", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("hastane")))
		{
			Durum911[playerid] = 3;
			SendClientMessage(playerid, COLOR_WHITE, "GÖREVLÝ: Hastaneyi seçtiniz, olay ve yer hakkýnda bilgi verin.");
		}
	}
	if(Durum911[playerid] == 2)
	{
 		new String[512];
		format(String, sizeof(String), "%s", text);
	    SendFactionMessage3(playerid, 0, COLOR_LIGHTYELLOW, String);
		SendClientMessage(playerid, COLOR_WHITE, "GÖREVLÝ: Bilgiler alýnmýþtýr ve gerekli yerlere gönderilmiþtir.");
	    Durum911[playerid] = 0;
	}
	if(Durum911[playerid] == 3)
	{
 		new String[512];
		format(String, sizeof(String), "%s", text);
	    SendFactionMessage3(playerid, 15, COLOR_LIGHTYELLOW, String);
        SendClientMessage(playerid, COLOR_WHITE, "GÖREVLÝ: Bilgiler alýnmýþtýr ve gerekli yerlere gönderilmiþtir.");
	    Durum911[playerid] = 0;
	}
	if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
		if ((strcmp("Tamam", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("tamam")))
		{
		    if(GetPlayerCash(playerid) > SkinUcret[playerid])
			{
  			 	SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				ClearAnimations(playerid);
			    GivePlayerCash(playerid, -SkinUcret[playerid]);
				KiyafetSecimi[playerid] = ChosenSkin[playerid];
				ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Kýyafet Satýcýsý","1. kýyafet\n2. kýyafet\n3. kýyafet" , "Seç", "Kapat");
				SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
			    SelectCharPlace[playerid] = 0;
			    SelectCharID[playerid] = 0;
			    SelectChar[playerid] = 0;
			    IlkDegisiklik[playerid] = 0;
			    KiyafetAliyor[playerid] = 0;
			    return 0;
			}
			else
			{
				HataMesajiGonder(playerid, "Almak istediðiniz kýyafet paranýz yetmemektedir.");
  			 	SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				ClearAnimations(playerid);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
			    SelectCharPlace[playerid] = 0;
			    SelectCharID[playerid] = 0;
			    SelectChar[playerid] = 0;
			    IlkDegisiklik[playerid] = 0;
			    KiyafetAliyor[playerid] = 0;
			    return 0;
   			}
		}
		else if ((strcmp("Cik", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("cik")))
		{
 			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			ClearAnimations(playerid);
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    IlkDegisiklik[playerid] = 0;
		    KiyafetAliyor[playerid] = 0;
		    return 0;
		}
		else
		{
		    HataMesajiGonder(playerid, "Kýyafet alýrken herhangi bir þey yazamazsýnýz.");
			IpucuMesajiGonder(playerid, "Yön tuþlarý ile kýyafetleri deðiþtirebilirsiniz.");
			IpucuMesajiGonder(playerid, "Kýyafeti satýn almak için {86D060}tamam{E6E6E6} yazýnýz.");
		    return 0;
		}
	}
	if(Sapka[playerid] > -1)
	{
	    new idx;
	    tmp = strtok(text, idx);
		if ((strcmp("Tamam", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("tamam")))
		{
		    if(GetPlayerCash(playerid) > 80)
			{
			    SetCameraBehindPlayer(playerid);
			    PlayerInfo[playerid][pSapka] = Sapka[playerid];
				Sapka[playerid] = -1;
				RemovePlayerAttachedObject(playerid, 2);
				TogglePlayerControllable(playerid, 1);
				BilgiMesajiGonder(playerid, "Þapka satýn aldýnýz.");
				return 0;

			}
			else
			{
			    SetCameraBehindPlayer(playerid);
				Sapka[playerid] = -1;
				RemovePlayerAttachedObject(playerid,2);
				TogglePlayerControllable(playerid, 1);
				HataMesajiGonder(playerid, "Þapka almak için yeterli paranýz bulunmamaktadýr. (500$)");
			    return 0;
   			}
		}
		else if ((strcmp("Cik", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("cik")))
		{
		    SetCameraBehindPlayer(playerid);
			Sapka[playerid] = -1;
			RemovePlayerAttachedObject(playerid, 2);
			TogglePlayerControllable(playerid, 1);
		    return 0;
		}
		else
		{
		    HataMesajiGonder(playerid, "Þapka alýrken herhangi bir þey yazamazsýnýz.");
			IpucuMesajiGonder(playerid, "Yön tuþlarý ile þapkalarý deðiþtirebilirsiniz.");
			IpucuMesajiGonder(playerid, "Þapka satýn almak için {86D060}tamam{E6E6E6} yazýnýz.");
		    return 0;
		}
	}
	if(Rag[playerid] > -1)
	{
	    new idx;
	    tmp = strtok(text, idx);
		if ((strcmp("Tamam", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("tamam")))
		{
		    if(GetPlayerCash(playerid) > 60)
			{
			    SetCameraBehindPlayer(playerid);
			    PlayerInfo[playerid][pRag] = Rag[playerid];
				Rag[playerid] = -1;
				RemovePlayerAttachedObject(playerid, 3);
				TogglePlayerControllable(playerid, 1);
				BilgiMesajiGonder(playerid, "Rag satýn aldýnýz.");
                return 0;

			}
			else
			{
			    SetCameraBehindPlayer(playerid);
				Rag[playerid] = -1;
				RemovePlayerAttachedObject(playerid, 3);
				TogglePlayerControllable(playerid, 1);
				HataMesajiGonder(playerid, "Rag almak için yeterli paranýz bulunmamaktadýr. (500$)");
			    return 0;
   			}
		}
		else if ((strcmp("Cik", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("cik")))
		{
		    SetCameraBehindPlayer(playerid);
			Rag[playerid] = -1;
			RemovePlayerAttachedObject(playerid, 3);
			TogglePlayerControllable(playerid, 1);
		    return 0;
		}
		else
		{
		    HataMesajiGonder(playerid, "Rag alýrken herhangi bir þey yazamazsýnýz.");
			IpucuMesajiGonder(playerid, "Yön tuþlarý ile raglarý deðiþtirebilirsiniz.");
			IpucuMesajiGonder(playerid, "Rag satýn almak için {86D060}tamam{E6E6E6} yazýnýz.");
		    return 0;
		}
	}
	if(Gozluk[playerid] > -1)
	{
	    new idx;
	    tmp = strtok(text, idx);
		if ((strcmp("Tamam", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("tamam")))
		{
		    if(GetPlayerCash(playerid) > 50)
			{
			    SetCameraBehindPlayer(playerid);
			    PlayerInfo[playerid][pGozluk] = Gozluk[playerid];
				Gozluk[playerid] = -1;
				RemovePlayerAttachedObject(playerid, 4);
				TogglePlayerControllable(playerid, 1);
				BilgiMesajiGonder(playerid, "Gözlük satýn aldýnýz.");
				return 0;

			}
			else
			{
			    SetCameraBehindPlayer(playerid);
				Gozluk[playerid] = -1;
				RemovePlayerAttachedObject(playerid, 4);
				TogglePlayerControllable(playerid, 1);
				HataMesajiGonder(playerid, "Gözlük almak için yeterli paranýz bulunmamaktadýr. (500$)");
			    return 0;
   			}
		}
		else if ((strcmp("Cik", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("cik")))
		{
		    SetCameraBehindPlayer(playerid);
			Gozluk[playerid] = -1;
			RemovePlayerAttachedObject(playerid, 4);
			TogglePlayerControllable(playerid, 1);
		    return 0;
		}
		else
		{
		    HataMesajiGonder(playerid, "Gözlük alýrken herhangi bir þey yazamazsýnýz.");
			IpucuMesajiGonder(playerid, "Yön tuþlarý ile gözlükleri deðiþtirebilirsiniz.");
			IpucuMesajiGonder(playerid, "Gözlüðü satýn almak için {86D060}tamam{E6E6E6} yazýnýz.");
		    return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			format(string, sizeof(string), "{7B9800}[CANLI YAYIN]{379EF6} %s: %s", GetPlayerNameEx(playerid), text);
			SendClientMessage(i, COLOR_LIGHTBLUE, string);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		format(string, sizeof(string), "[TELEFON] %s --> %s: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(Mobile[playerid]), text);
        TelefonLog(string);
		format(string, sizeof(string), " (Telefon): %s", text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
 	    		new Float:SpeakerX,Float:SpeakerY,Float:SpeakerZ;
			    GetPlayerPos(playerid,SpeakerX,SpeakerY,SpeakerZ);
			    if(!PlayerToPoint(20.0,Mobile[playerid],SpeakerX,SpeakerY,SpeakerZ))
			    {
					format(string, sizeof(string), "%s (Telefon): %s", GetPlayerNameEx(playerid), text);
					SendClientMessage(Mobile[playerid], COLOR_LIGHTGREEN,string);
				}
				if(SpeakerPhone[Mobile[playerid]])
    			{
					format(string, sizeof(string), " (Hoparlor): %s", text);
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			}
		}
  		else
		{
			HataMesajiGonder(playerid, "Hatta kimse bulunmamaktadýr.");
		}
		return 0;
	}
	if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
      	if(!IsPlayerInAnyVehicle(playerid) || IsABike(GetPlayerVehicleID(playerid)))
		{
			format(string, sizeof(string), ": %s", text);
 			ProxDetector(15.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			format(string, sizeof(string), "%s[%d]: %s", GetPlayerNameEx(playerid), playerid, text);
		  	TalkLog(string);
		}
		else
		{
		    if(CarWindowStatus[GetPlayerVehicleID(playerid)] == 1)
		    {
				format(string, sizeof(string), ": %s",text);
				ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "%s[%d]: %s", GetPlayerNameEx(playerid), playerid, text);
			  	TalkLog(string);
			}
			else
			{
				format(string, sizeof(string), ": %s",text);
				ProxDetector(15.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "%s[%d]: %s", GetPlayerNameEx(playerid), playerid, text);
			  	TalkLog(string);
			}
		}
		return 0;
	}
	return 1;
}
public OnPlayerPrivmsg(playerid, recieverid, text[])
{
	new string[248];
	if(PMsEnabled[recieverid] || PlayerInfo[playerid][pAdmin] != 0)
	{
		format(string, sizeof(string), "{555555}(( {FEF801} (Gelen Mesaj) %s (%d): %s  {555555}))", GetPlayerNameEx(playerid), playerid, text);
		SendClientMessage(recieverid,0xF6E400AA,string);
		format(string, sizeof(string), "{555555}(( {CBA91F} (Giden Mesaj) %s (%d): %s  {555555}))", GetPlayerNameEx(recieverid), recieverid, text);
		SendClientMessage(playerid,0xDBB527AA,string);
		format(string, sizeof(string), "%s --> %s: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(recieverid), text);
		PMLog(string);
		for(new a; a < MAX_PLAYERS; a++)
		{
		    if(OMIzleme[a] == 1)
		    {
		        format(string,sizeof(string),"{555555}%s >> %s: %s",GetPlayerNameEx(playerid),GetPlayerNameEx(recieverid),text);
				GenelMesajGonder(a,string);
			}
		}
		return 0;
	}
	else
	{
	    HataMesajiGonder(playerid, "Mesaj atmaya çalýþtýðýnýz kiþi özel mesaj alýmýný engellemiþ.");
	}
	return 0;
}
public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
public OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
forward SQLdenBul(bilgi);
public SQLdenBul(bilgi)
{
	new sonuc;
	/*for(new i; i < MAX_PLAYERS; i++)
	{
		if(bilgi == PlayerInfo[i][pSQLid])
		{
			sonuc = i;
			break;
		}
		else
		{
			sonuc = 9999;
		}
	}*/
	sonuc = bilgi;
	return sonuc;
}
forward BankaParasiniBul(sqlid);
public BankaParasiniBul(sqlid)
{
	new sonuc;
	new query[170];
	format(query, sizeof(query), "SELECT Para2 FROM oyuncular WHERE id = %d", sqlid);
	mysql_query(query);
	mysql_store_result();
	sonuc = mysql_fetch_int();
	mysql_free_result();
	return sonuc;
}
forward BankaNumarasindanBul(bankano);
public BankaNumarasindanBul(bankano)
{
	new sonuc;
	new icerik[130];
	format(icerik,sizeof(icerik),"SELECT id FROM oyuncular WHERE BankaNumarasi = %d",bankano);
	mysql_query(icerik);
	mysql_store_result();
	sonuc = mysql_fetch_int();
	mysql_free_result();
	return sonuc;
}
new BilgiYaziString[512];
dcmd_oyuncuizle(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid) || PlayerInfo[playerid][pTester] >= 1)
	{
	    if(!strlen(params) || !IsNumeric(params)) return KullanimMesajiGonder(playerid, "/oyuncuizle [ID]");
		new specplayerid = SQLdenBul(strval(params));
		new string[100], Float:hp, Float:ar;
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(specplayerid, plocx, plocy, plocz);
		GetPlayerName(specplayerid,string,sizeof(string));
		GetPlayerHealth(specplayerid, hp);	GetPlayerArmour(specplayerid, ar);
		if(PlayerInfo[specplayerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdmin] < 4) return HataMesajiGonder(playerid, "Owner'larý izleyemezsiniz.");
        if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
			if(specplayerid == playerid) return HataMesajiGonder(playerid, "Kendi kendinizi izleyemezsiniz.");
			if(GetPlayerState(specplayerid) != 1 && GetPlayerState(specplayerid) != 2 && GetPlayerState(specplayerid) != 3) return HataMesajiGonder(playerid, "Ýzlemek istediðiniz kiþi spawn olmamýþ durumdadýr.");
				GetPlayerPos(playerid,Pos1[playerid][0],Pos1[playerid][1],Pos1[playerid][2]);
				GetPlayerFacingAngle(playerid,Pos1[playerid][3]);
    			StartSpectate(playerid, specplayerid);
				format(BilgiYaziString, sizeof(BilgiYaziString), "Oyuncu Ýzleme >> Isim: %s | ID: %d | Saglik: %0.1f | Zirh: %0.1f | Para: %d$",string,specplayerid,hp,ar,GetPlayerCash(specplayerid));
				BilgiMesajiGonder(playerid, BilgiYaziString);
				return 1;
		} else return HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
	} else return YetersizYetki(playerid, params);
}
dcmd_aracizle(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
	{
	    if(!strlen(params)) return KullanimMesajiGonder(playerid, "/aracizle [Araç ID]");
		new specvehicleid = strval(params);
		if(specvehicleid < MAX_VEHICLES) {
			GetPlayerPos(playerid,Pos1[playerid][0],Pos1[playerid][1],Pos1[playerid][2]);
			GetPlayerFacingAngle(playerid,Pos1[playerid][3]);
			TogglePlayerSpectating(playerid, 1);
			PlayerSpectateVehicle(playerid, specvehicleid);
			SpecType[playerid] = ADMIN_SPEC_TYPE_VEHICLE;
			return 1;
		} else return HataMesajiGonder(playerid, "Hatalý Araç ID girdiniz.");
	} else return YetersizYetki(playerid, params);
}
dcmd_izlekapat(playerid,params[])
{
	#pragma unused params
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
	{
        if(SpecType[playerid] != ADMIN_SPEC_TYPE_NONE)
		{
			StopSpectate(playerid);
			SetTimerEx("PosAfterSpec",1000,0,"d",playerid);
			return BilgiMesajiGonder(playerid, "Oyuncu izlemeyi býraktýnýz.");
		} else return HataMesajiGonder(playerid, "Herhangi bir oyuncuyu izlemiyorsunuz.");
	} else return YetersizYetki(playerid, params);
}
public OnPlayerCommandText(playerid, cmdtext[])
{
	new idx;
	new tmp[256];
	new cmd[256];
	new string[256];
	new giveplayerid;
	cmd = strtok(cmdtext, idx);
    dcmd(oyuncuizle,10,cmdtext);
	dcmd(aracizle,8,cmdtext);
	dcmd(izlekapat,9,cmdtext);
	if(gPlayerLogged[playerid] == 1)
	{
	if(KiyafetAliyor[playerid] == 1 || Sapka[playerid] > -1 || Rag[playerid] > -1 || Gozluk[playerid] > -1)
	{
		HataMesajiGonder(playerid, "Þuan komut kullanamazsýnýz.");
		return 1;
	}
	if(strcmp(cmd, "/om", true) == 0 || strcmp(cmd, "/pm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/om - /pm [Oyuncu ID] [Mesaj]");
				return 1;
			}
			giveplayerid = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						KullanimMesajiGonder(playerid, "/om - /pm [Oyuncu ID] [Mesaj]");
						return 1;
					}
					if(giveplayerid != playerid)
					{
					    OnPlayerPrivmsg(playerid, giveplayerid, result);
					}
					else
					{
						HataMesajiGonder(playerid, "Kendi kendinize özel mesaj atamazsýnýz.");
					}
					return 1;
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Hatalý oyuncu ID girdiniz.");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd,"/omizle",true) == 0)
	{
	        if(PlayerInfo[playerid][pAdmin] >= 2)
	        {
	            if(OMIzleme[playerid] == 1)
	            {
	                OMIzleme[playerid] = 0;
					BilgiMesajiGonder(playerid,"Özel mesaj izlemeyi kapattýnýz.");
					return 1;
				}
				else if(OMIzleme[playerid] == 0)
				{
				    OMIzleme[playerid] = 1;
				    BilgiMesajiGonder(playerid,"Özel mesaj izlemeyi açtýnýz.");
				    return 1;
				}
			}
			return HataMesajiGonder(playerid,"Hata!");
	}
	
	if(strcmp(cmd,"/ucret",true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] == 1)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					TransportValue[playerid] = 0;
					TransportMoney[playerid] = 0;
					format(string, sizeof(string), "Paydos ettiniz. Kazanç: %d$.", TransportMoney[playerid]);
					BilgiMesajiGonder(playerid, string);
					GivePlayerCash(playerid, TransportMoney[playerid]);
					return 1;
				}
				new playervehicleid = GetPlayerVehicleID(playerid);
				if(IsATaxi(playervehicleid))
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							KullanimMesajiGonder(playerid, "/ucret [Ücret]");
							return 1;
						}
						new moneys;
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 5)
						{
							HataMesajiGonder(playerid, "Ücret $5'dan büyük, $1'dan küçük olamaz.");
							return 1;
						}
					    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
					    BilgiMesajiGonder(playerid, "Ýþbaþý yaptýnýz.");
					}
					else
					{
					    HataMesajiGonder(playerid, "Sürücü koltuðunda deðilsiniz.");
					    return 1;
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Taksinin içinde deðilsiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Taksi þöförü deðilsiniz.");
			}
	    }
	    return 1;
 	}
	if(strcmp(cmdtext, "/kabul taksi", true)==0)
	{
		if(TransportDuty[playerid] != 1)
  		{
    		HataMesajiGonder(playerid, "Ýþbaþýnda deðilsiniz.");
		    return 1;
        }
	    if(TaxiCallTime[playerid] > 0)
	   	{
	    	HataMesajiGonder(playerid, "Daha önceden bir çaðrý kabul etmiþsiniz.");
		    return 1;
	   	}
	    if(TaxiCall < 999)
	    {
	   		if(IsPlayerConnected(TaxiCall))
	      	{
	      		format(string, sizeof(string), "%s adlý kiþinin taksi çaðrsýný kabul ettiniz, kiþi sizi bekliyor.",GetPlayerNameEx2(TaxiCall, playerid));
				BilgiMesajiGonder(playerid, string);
	   			format(string, sizeof(string), "%s adlý taksi þöförü taksi çaðrýnýzý kabul etti, yakýn zamanda gelecektir.",GetPlayerNameEx2(playerid, TaxiCall));
				BilgiMesajiGonder(TaxiCall, string);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_TAKSI0;
				TaxiCallTime[playerid] = 1;
				TaxiAccepted[playerid] = TaxiCall;
				TaxiCall = 999;
				return 1;
			}
	  	}
	   	else
	   	{
	    	HataMesajiGonder(playerid, "Hiç kimse taksi çaðýrmamýþ.");
	    	return 1;
		}
	}
	if(strcmp(cmd, "/9mm", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(mmelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==22)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `9mmm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	mmelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(mmelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `9mm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `9mmm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 22, mmmermisi);
								    mmelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("mmicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "9mm silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "9mm marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "9mm zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/molotof", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(molotofelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==18)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `molotofm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	molotofelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(molotofelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `molotof` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `molotofm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 18, mmmermisi);
								    molotofelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("molotoficin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Molotofunuzun mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Molotofunuz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Molotof zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/sawnoff", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(sawnoffelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==26)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `sawnoffm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	sawnoffelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(sawnoffelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `sawnoff` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `sawnoffm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 26, mmmermisi);
								    sawnoffelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("sawnofficin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Sawnoff silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Sawnoff marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Sawnoff zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/mp5", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(mp5elinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==29)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `mp5m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	mp5elinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(mp5elinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `mp5` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `mp5m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 29, mmmermisi);
								    mp5elinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("mp5icin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "MP5 silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "MP5 marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "MP5 zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/tufek", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(tufekelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==33)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `tufekm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	tufekelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(tufekelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `tufek` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `tufekm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 33, mmmermisi);
								    tufekelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("tufekicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Tüfeðinizin mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Tüfek marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Tüfek zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/roket", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(roketelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==35)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `roketm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	roketelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(roketelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `roket` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `roketm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 35, mmmermisi);
								    roketelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("roketicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Roketinizin mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Roket marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Roket zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/yangin", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(yanginelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==42)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `yanginm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	yanginelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(yanginelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `yangin` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `yanginm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 42, mmmermisi);
								    yanginelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("yanginicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Yangýn tüpünüz boþ .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Yangýn tüpünüz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Yangýn tüpünüz zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/kamera", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(kameraelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==43)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `kameram` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	kameraelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(kameraelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `kamera` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `kameram` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 43, mmmermisi);
								    kameraelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("kameraicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Kameranýz bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Kameranýzýn pili yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Kameranýz zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/spray", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(sprayelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==41)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `spraym` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	sprayelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(sprayelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `spray` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `spraym` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 41, mmmermisi);
								    sprayelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("sprayicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Spreyiniz bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Spreyiniz bitmiþ .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Spreyiniz zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/sopa", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(sopaelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==5)
				        {
       				    	sopaelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(sopaelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `sopa` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 5, mmmermisi);
								    sopaelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Sopanýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Sopanýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Sopa zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/katana", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(katanaelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==8)
				        {
       				    	katanaelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(katanaelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `katana` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 8, mmmermisi);
								    katanaelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Katananýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Katananýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Katana zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/bicak", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(bicakelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==4)
				        {
       				    	bicakelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(bicakelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `bicak` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 4, mmmermisi);
								    bicakelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Býçaðýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Býçaðýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Býçak zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/baston", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(bastonelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==15)
				        {
       				    	bastonelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(bastonelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `baston` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 15, mmmermisi);
								    bastonelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Sopanýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Sopanýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Sopa zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/musta", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(mustaelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==1)
				        {
       				    	mustaelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(mustaelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `musta` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 1, mmmermisi);
								    mustaelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Mustanýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Mustanýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Musta zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/golf", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(golfelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==2)
				        {
       				    	golfelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(golfelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `golf` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 2, mmmermisi);
								    golfelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Golf sopanýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Golf sopanýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Golf Sopasý zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/kurek", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(kurekelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==6)
				        {
       				    	kurekelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(kurekelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `kurek` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 6, mmmermisi);
								    kurekelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Küreðinizin mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Küreðiniz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Küreðiniz zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
		if(strcmp(cmd, "/parasut", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(parasutelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==46)
				        {
       				    	parasutelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(parasutelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `parasut` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 46, mmmermisi);
								    parasutelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Paraþütünüzün mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Paraþütünüz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Paraþütünüz zaten üzerinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
		if(strcmp(cmd, "/cicek", true) == 0)
	{
 				if(Silahelinde[playerid]==1)
 				{
        		    if(cicekelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						//new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==14)
				        {
       				    	cicekelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(cicekelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `cicek` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								mmmermisi = 1;
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 14, mmmermisi);
								    cicekelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Çiçeðinizin mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Çiçeðiniz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Çiçeðiniz zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
				}
 	return 1;
	}
	if(strcmp(cmd, "/spistol", true) == 0)
	{
	            if(Silahelinde[playerid]==1)
 				{
        		    if(spistolelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==23)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `spistolm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	spistolelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(spistolelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `spistol` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `spistolm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 23, mmmermisi);
								   	spistolelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("spistolicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Susturucu silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Susturuculu marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Susturuculu zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
					}
	return 1;
	}
	if(strcmp(cmd, "/shoutgun", true) == 0)
	{
	            if(Silahelinde[playerid]==1)
 				{
        		    if(shoutgunelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==25)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `shoutgunm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	shoutgunelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(shoutgunelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `shoutgun` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `shoutgunm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 25, mmmermisi);
								   	shoutgunelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("shoutgunicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Shoutgun silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Shoutgun marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Shoutgun zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
					}
	return 1;
	}
	if(strcmp(cmd, "/tec9", true) == 0)
	{
	           if(Silahelinde[playerid]==1)
 				{
        		    if(tec9elinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==32)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `tec9m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	tec9elinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(tec9elinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `tec9` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `tec9m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 32, mmmermisi);
								   	tec9elinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("tec9icin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Tec9 silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Tec9 marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Tec9 zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
					}
	return 1;
	}
	if(strcmp(cmd, "/uzi", true) == 0)
	{
	            if(Silahelinde[playerid]==1)
 				{
        		    if(uzielinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==28)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `uzim` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	uzielinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(uzielinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `uzi` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `uzim` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 28, mmmermisi);
								   	uzielinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("uziicin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Uzi silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Uzi marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Uzi zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
					}
	return 1;
	}
	if(strcmp(cmd, "/m4", true) == 0)
	{
	            if(Silahelinde[playerid]==1)
 				{
        		    if(m4elinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==31)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `m4m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	m4elinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(m4elinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `m4` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `m4m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 31, mmmermisi);
								   	m4elinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("m4icin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "M4 silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "M4 marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "M4 zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
					}
	return 1;
	}
	if(strcmp(cmd, "/ak47", true) == 0)
	{
	            if(Silahelinde[playerid]==1)
 				{
        		    if(ak47elinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==30)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `ak47m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	ak47elinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(ak47elinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `ak47` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `ak47m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 30, mmmermisi);
								   	ak47elinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("ak47icin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "AK-47 silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "AK-47 marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "AK-47 zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
					}
	return 1;
	}
	if(strcmp(cmd, "/sniper", true) == 0)
	{
	            if(Silahelinde[playerid]==1)
 				{
        		    if(sniperelinde[playerid]==1)
				    {
				        new wep = GetPlayerWeapon(playerid);
						new ammo2 = GetPlayerAmmo(playerid);
				        if(wep==34)
				        {
				        	new query[128];
							format(query, sizeof(query), "UPDATE `osilah` SET `sniperm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
							mysql_query(query);
       				    	sniperelinde[playerid]=0;
       				    	Silahelinde[playerid]=0;
			    	        ResetPlayerWeapons(playerid);
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Elinizde baþka bir silah varken bu komutu kullanamazsýnýz .");
						}
				    }
				    else
				    {
				        BilgiMesajiGonder(playerid, "Elinizde baþka bir silah var.");
				    }
				}
    			else
    			{
    			    if(Silahelinde[playerid]==0)
						{
					    	if(sniperelinde[playerid]==0)
					    	{
    			    			new query[128], mmvarmi, mmmermisi;
								format(query, sizeof(query), "SELECT `sniper` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmvarmi = mysql_fetch_int();
								mysql_free_result();
								format(query, sizeof(query), "SELECT `sniperm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								mysql_store_result();
								mmmermisi = mysql_fetch_int();
								mysql_free_result();
								if(mmvarmi==1)
								{
								    if(mmmermisi!=0)
								    {
								    GivePlayerWeaponEx(playerid, 34, mmmermisi);
								   	sniperelinde[playerid]=1;
		    						Silahelinde[playerid]=1;
		    						SetTimerEx("snipericin",250,true,"i",playerid);
		    						}
		    						else
		    						{
                                        BilgiMesajiGonder(playerid, "Sniper silahýnýzýn mermisi bulunmuyor .");
		    						}
								}
								else
								{
									BilgiMesajiGonder(playerid, "Sniper marka silahýnýz yok .");
								}
							}
							else
							{
							 BilgiMesajiGonder(playerid, "Sniper zaten elinizde .");
							}
						}
						else
						{
						    BilgiMesajiGonder(playerid, "Zaten elinizde baþka bir silah var.");
	  					}
					}
	return 1;
	}
	if (strcmp("/kalk", cmdtext, true, 10) == 0)
    {
        if(kalkabilir[playerid]==0)
        {
            new string[256];
            format(string, sizeof(string), "Þu anda yerden kalkamazsýnýz .Ayaða kalkmanýz için kalan süre : %d .", 90-sayi[playerid]);
            SendClientMessage(playerid, 0xF46F00FF, string);
        }
        else
        {
            kalkabilir[playerid] = 0;
            TogglePlayerControllable(playerid, 1);
            BilgiMesajiGonder(playerid, "Yerden kalktýnýz.");
            PlayerInfo[playerid][pHP] = 15;
			PlayerInfo[playerid][pArmour] = 0;
        }
        return 1;
    }
    if (strcmp("/otobus", cmdtext, true, 10) == 0)
    {
		if(PlayerInfo[playerid][pJob] == 2)
		{
			new State=GetPlayerState(playerid);
			new playervehicleid = GetPlayerVehicleID(playerid);
			if(IsAOtobus(playervehicleid) && State == PLAYER_STATE_DRIVER)
			{
				if(OtobusTurunda[playerid] == 1)
		   		{
		   			HataMesajiGonder(playerid, "Zaten aktif bir seferdesiniz, önce eski seferinizi bitirmelisiniz.");
		   			return 1;
			 	}
			 	OtobusTurunda[playerid] = 1;
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS0;
				SetPlayerCheckpoint(playerid,1825.0289,-1741.7015,13.1099, 5.0);
				GameTextForPlayer(playerid, "~r~Durak haritada isaretlendi.", 7000, 1);
				return 1;
			}
			else
			{
				HataMesajiGonder(playerid, "Otobüsde deðilsiniz.");
			}
		}
		else
		{
			HataMesajiGonder(playerid, "Otobüs temizleme þöförü deðilsiniz.");
		}
	}/*
    if (strcmp("/yertemizle", cmdtext, true, 10) == 0)
    {
		if(PlayerInfo[playerid][pJob] == 3)
		{
			new State=GetPlayerState(playerid);
			new playervehicleid = GetPlayerVehicleID(playerid);
			if(IsACleaner(playervehicleid) && State == PLAYER_STATE_DRIVER)
			{
				if(YerTemizlemeTurunda[playerid] == 1)
		   		{
		   			HataMesajiGonder(playerid, "Zaten aktif bir seferdesiniz, önce eski seferinizi bitirmelisiniz.");
		   			return 1;
			 	}
			 	YerTemizlemeTurunda[playerid] = 1;
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK0;
				SetPlayerCheckpoint(playerid,-2109.7131,45.7796,34.8892, 5.0);
				GameTextForPlayer(playerid, "~r~Durak haritada isaretlendi.", 7000, 1);
				return 1;
			}
			else
			{
				HataMesajiGonder(playerid, "Yer temizleme aracýnýn içinde deðilsiniz.");
			}
		}
		else
		{
			HataMesajiGonder(playerid, "Yer temizleme þöförü deðilsiniz.");
		}
	}*/
	if(strcmp(cmd, "/tirbasla", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pJob] == 4)
			{
				new State=GetPlayerState(playerid);
				new playervehicleid = GetPlayerVehicleID(playerid);
				if(DynamicCars[playervehicleid][CarType] == 6 && State == PLAYER_STATE_DRIVER)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/tirbasla [Taþýnýlýcak ürün miktarý]");
						return 1;
					}
					new yuk = strval(tmp);
					if(TirTurunda[playerid] == 1)
				   	{
				   		HataMesajiGonder(playerid, "Zaten aktif bir seferdesiniz, önce eski seferinizi bitirmelisiniz.");
				   		return 1;
			 		}
					if(yuk < 0 || yuk > 100)
					{
						HataMesajiGonder(playerid, "Ürün 0'dan küçük, 100'den büyük olamaz.");
						return 1;
					}
					TasidigiYuk[playerid] = yuk;
					TasidigiYukZaman[playerid] = yuk+yuk;
					TirTurunda[playerid] = 1;
					gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK0;
					SetPlayerCheckpoint(playerid,780.0187,-527.6064,15.9579, 5.0);
					IpucuMesajiGonder(playerid, "Haritada iþaretlenen bölgelere gidiniz.");
					return 1;
				}
				else
				{
					HataMesajiGonder(playerid, "Týrda deðilsiniz veya sürücü koltuðunda deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Týr þöförü deðilsiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gemibasla", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pJob] == 5)
			{
				new State=GetPlayerState(playerid);
				new playervehicleid = GetPlayerVehicleID(playerid);
				if(DynamicCars[playervehicleid][CarType] == 7 && State == PLAYER_STATE_DRIVER)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/gemibasla [Taþýnýlýcak materyal miktarý]");
						return 1;
					}
					new yuk = strval(tmp);
					if(GemiTurunda[playerid] == 1)
				   	{
				   		HataMesajiGonder(playerid, "Zaten aktif bir seferdesiniz, önce eski seferinizi bitirmelisiniz.");
				   		return 1;
			 		}
					if(yuk < 0 || yuk > 100)
					{
						HataMesajiGonder(playerid, "Materyal 0'dan küçük, 100'den büyük olamaz.");
						return 1;
					}
					TasidigiYuk[playerid] = yuk;
					TasidigiYukZaman[playerid] = yuk/2;
					if(yuk == 1)
					{
					    TasidigiYukZaman[playerid] = 1;
					}
					GemiTurunda[playerid] = 1;
					gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK0;
					SetPlayerCheckpoint(playerid,2638.7397,-2685.0811,-0.0769, 5.0);
					IpucuMesajiGonder(playerid, "Haritada iþaretlenen bölgelere gidiniz.");
					return 1;
				}
				else
				{
					HataMesajiGonder(playerid, "Gemide deðilsiniz veya sürücü koltuðunda deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Gemi þöförü deðilsiniz.");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/maskegiy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pMask] == 0)
	   	 	{
	   		     HataMesajiGonder(playerid, "Maskeniz bulunmamaktadýr.");
	   		     return 1;
	   		}
			MaskeKullaniyor[playerid] = 1;
			BilgiMesajiGonder(playerid, "Maskenizi giydiniz, çýkartmak için: {86D060}/maskecikar");
		}
		return 1;
	}
	if(strcmp(cmd, "/maskecikar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pMask] == 0)
	    	{
	       		HataMesajiGonder(playerid, "Maskeniz bulunmamaktadýr.");
	        	return 1;
	    	}
	    	if(MaskeKullaniyor[playerid] == 0)
	    	{
	       		HataMesajiGonder(playerid, "Kafanýzda bir maske bulunmuyor.");
	        	return 1;
	    	}
			MaskeKullaniyor[playerid] = 0;
			BilgiMesajiGonder(playerid, "Maskenizi çýkarttýnýz, giymek için: {86D060}/maskegiy");
		}
		return 1;
	}
	if (strcmp(cmd, "/ben", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			KarakterOzellik(playerid,playerid);
		}
		return 1;
	}
    if (strcmp(cmd, "/bak", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/bak [ID]");
				return 1;
			}
   			if (ProxDetectorS(3.0, playerid, giveplayerid))
			{
				giveplayerid = SQLdenBul(strval(tmp));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID && giveplayerid != playerid)
			    	{
						KarakterOzellik(playerid, giveplayerid);
						PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"süzer.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Bakmak istediðiniz kiþiye yeterince yakýn deðilsiniz.");
			}
		}
		return 1;
	}
	
	if (strcmp(cmdtext, "/zar", true) == 0)
 	{
      new zar = random(10);
      if(zar == 0) {PlayerZarMessage(playerid,15.0,"2 gelmiþtir.");}
      else if(zar == 1) {PlayerZarMessage(playerid,15.0,"3 gelmiþtir.");}
      else if(zar == 2) {PlayerZarMessage(playerid,15.0,"4 gelmiþtir.");}
      else if(zar == 3) {PlayerZarMessage(playerid,15.0,"5 gelmiþtir.");}
      else if(zar == 4) {PlayerZarMessage(playerid,15.0,"6 gelmiþtir.");}
      else if(zar == 5) {PlayerZarMessage(playerid,15.0,"7 gelmiþtir.");}
      else if(zar == 6) {PlayerZarMessage(playerid,15.0,"8 gelmiþtir.");}
      else if(zar == 7) {PlayerZarMessage(playerid,15.0,"9 gelmiþtir.");}
      else if(zar == 8) {PlayerZarMessage(playerid,15.0,"10 gelmiþtir.");}
      else if(zar == 9) {PlayerZarMessage(playerid,15.0,"11 gelmiþtir.");}
      else if(zar == 10) {PlayerZarMessage(playerid,15.0,"12 gelmiþtir.");}
      return 1;
   }
   if (strcmp("/zarat2", cmdtext, true, 10) == 0)
   {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"2 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat3", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"3 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat4", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"4 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat5", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"5 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat6", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"6 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat7", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"7 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat8", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"8 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat9", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"9 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat10", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"10 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
    if (strcmp("/zarat11", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"11 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
	if (strcmp("/zarat12", cmdtext, true, 10) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			PlayerZarMessage(playerid,15.0,"12 gelmiþtir.");
        	return 1;
        }
        else
		{
			format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
			HataMesajiGonder(playerid, string);
		}
	}
	
	if(strcmp(cmd,"/zamanbitir",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
	    {
	    	ModifiyeZaman[playerid] = 0;
	    	return 1;
		}
	}
	
 	if(strcmp(cmd, "/setint", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/setint [ID] [Interior ID]");
					return 1;
				}
				new playa;
				new intid;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				intid = strval(tmp);
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						SetPlayerInterior(playa, intid);
						format(string, sizeof(string), "%s adlý oyuncunun interiorunu %d yaptýnýz.",GetPlayerNameEx2(playa, playerid), intid);
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s adlý yönetici interiorunuzu %d yaptý.", GetPlayerNameEx2(playerid, playa),intid);
						BilgiMesajiGonder(playa, string);
					}
				}
			}
			else
			{
				YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/setvw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/setvw [ID] [Virtual World ID]");
					return 1;
				}
				new playa;
				new virid;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				virid = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerVirtualWorld(playa, virid);
						format(string, sizeof(string), "%s adlý oyuncunun virtual worldunu %d yaptýnýz.",GetPlayerNameEx2(playa, playerid), virid);
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s adlý yönetici virtual worldunuzu %d yaptý.", GetPlayerNameEx2(playerid, playa),virid);
						BilgiMesajiGonder(playa, string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/aracyardim", true) == 0)
	{
	    BilgiMesajiGonder(playerid,"[Araç Sistemi Yardýmý]");
	    GenelMesajGonder(playerid,"Motor açmak için{86D060} /motor {E6E6E6}komutu.");
		format(string,sizeof(string),"Emniyet kemeri takmak için{86D060} /ekemer {E6E6E6}komutu.");
		GenelMesajGonder(playerid,string);
		format(string,sizeof(string),"Kask takmak için{86D060} /kask {E6E6E6}komutu.");
		GenelMesajGonder(playerid,string);
		return 1;
	}
	
	if(strcmp(cmd, "/navigasyon", true) == 0)
	{
	 	if(PlayerInfo[playerid][pNavigasyon] == 1)
	    {
			format(string, sizeof(string),"Karakol\nHastane\n1. Ayar Bölgesi\n2. Ayar Bölgesi\n3. Ayar Bölgesi");
			ShowPlayerDialog(playerid, 10,DIALOG_STYLE_LIST,"Navigasyon",string,"Seç","Kapat");
	    }
	    else
	    {
    		HataMesajiGonder(playerid, "Navigasyon aletiniz bulunmamaktadýr.");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/navigasyon1yer", true) == 0)
	{
	 	if(PlayerInfo[playerid][pNavigasyon] == 1)
	    {
			new interior = GetPlayerInterior(playerid);
	        if(interior == 0)
	        {
		        new Float:x,Float:y,Float:z;
		        GetPlayerPos(playerid,x,y,z);
			    PlayerInfo[playerid][pNavigasyon1X] = x;
				PlayerInfo[playerid][pNavigasyon1Y] = y;
				PlayerInfo[playerid][pNavigasyon1Z] = z;
				BilgiMesajiGonder(playerid, "1. navigasyon bölgesi ayarlanmýþtýr.");
			}
		    else
		    {
	    		HataMesajiGonder(playerid, "Ýnteriorlarýn içinde komutu kullanamazsýnýz.");
		    }
	    }
	    else
	    {
    		HataMesajiGonder(playerid, "Navigasyon aletiniz bulunmamaktadýr.");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/navigasyon2yer", true) == 0)
	{
	 	if(PlayerInfo[playerid][pNavigasyon] == 1)
	    {
			new interior = GetPlayerInterior(playerid);
	        if(interior == 0)
	        {
		        new Float:x,Float:y,Float:z;
		        GetPlayerPos(playerid,x,y,z);
			    PlayerInfo[playerid][pNavigasyon2X] = x;
				PlayerInfo[playerid][pNavigasyon2Y] = y;
				PlayerInfo[playerid][pNavigasyon2Z] = z;
				BilgiMesajiGonder(playerid, "2. navigasyon bölgesi ayarlanmýþtýr.");
			}
		    else
		    {
	    		HataMesajiGonder(playerid, "Ýnteriorlarýn içinde komutu kullanamazsýnýz.");
		    }
	    }
	    else
	    {
    		HataMesajiGonder(playerid, "Navigasyon aletiniz bulunmamaktadýr.");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/navigasyon3yer", true) == 0)
	{
	 	if(PlayerInfo[playerid][pNavigasyon] == 1)
	    {
			new interior = GetPlayerInterior(playerid);
	        if(interior == 0)
	        {
		        new Float:x,Float:y,Float:z;
		        GetPlayerPos(playerid,x,y,z);
			    PlayerInfo[playerid][pNavigasyon3X] = x;
				PlayerInfo[playerid][pNavigasyon3Y] = y;
				PlayerInfo[playerid][pNavigasyon3Z] = z;
				BilgiMesajiGonder(playerid, "3. navigasyon bölgesi ayarlanmýþtýr.");
			}
		    else
		    {
	    		HataMesajiGonder(playerid, "Ýnteriorlarýn içinde komutu kullanamazsýnýz.");
		    }
	    }
	    else
	    {
    		HataMesajiGonder(playerid, "Navigasyon aletiniz bulunmamaktadýr.");
	    }
	    return 1;
	}
	
	if(strcmp(cmd, "/fizle",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
	    {
	        if(FIzliyor[playerid] == 1)
	        {
	            FIzliyor[playerid] = 0;
	            BilgiMesajiGonder(playerid,"Faction konuþmalarýný izlemeyi býraktýnýz.");
	            return 1;
	        }
	        else if(FIzliyor[playerid] == 0)
	        {
				FIzliyor[playerid] = 1;
				BilgiMesajiGonder(playerid,"Faction konuþmalarýný izlemeye baþladýnýz.");
				return 1;
			}
		}
	}
	    
	
	if(strcmp(cmd, "/unluyap",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        tmp = strtok(cmdtext,idx);
	        if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid,"/unluyap [ID]");
				return 1;
			}
			new playa = SQLdenBul(strval(tmp));
			if(IsPlayerConnected(playa) && playa != INVALID_PLAYER_ID)
			{
			    if(PlayerInfo[playa][pUnlu] == 1)
			    {
			        PlayerInfo[playa][pUnlu] = 0;
					new yazi[256];
					format(yazi,sizeof(yazi),"%s isimli kiþinin ünlülüðünü aldýnýz.",GetPlayerNameEx(playa));
					BilgiMesajiGonder(playerid, yazi);
					BilgiMesajiGonder(playa,"Artýk ünlü deðilsiniz.");
					return 1;
				}
				else
				{
				    PlayerInfo[playa][pUnlu] = 1;
					new yazi[256];
					format(yazi,sizeof(yazi),"%s isimli kiþiyi ünlü yaptýnýz.",GetPlayerNameEx(playa));
					BilgiMesajiGonder(playerid, yazi);
					BilgiMesajiGonder(playa,"Artýk ünlüsünüz.");
					GenelMesajGonder(playa,"Tüm insanlar sizi artýk tanýyor ve isminiz sarý görünüyor.");
					return 1;
				}
			}
		}
	}
	
 	if(strcmp(cmd, "/kavgateknik", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
			format(string, sizeof(string),"Normal\nBoks stili\nKungfu stili\nKavrama stili\nDirsek ve kavrama stili\nDirsek stili");
            ShowPlayerDialog(playerid, 9,DIALOG_STYLE_LIST,"Kavga Teknikleri",string,"Seç","Kapat");
		}
		return 1;
	}
	if(strcmp(cmd, "/antreman", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!IsPlayerInRangeOfPoint(playerid, 20.0, 835.9296,-43.9522,972.7527))
			{
				HataMesajiGonder(playerid, "Spor salonunda deðilsiniz.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/antreman [Numara]");
				GenelMesajGonder(playerid, "| 1: Boks = $1500 | 2: Kungfu = $2000 |");
				GenelMesajGonder(playerid, "| 3: Kavrama Stili = $2500 | 4: Dirsek ve Kavrama Stili = $3500 |");
				GenelMesajGonder(playerid, "| 5: Dirsek Stili = $1500 |");
				IpucuMesajiGonder(playerid, "Kavga tekniðinizi ayarlamak için: {86D060}/kavgateknik");
				return 1;
			}
			new item = strval(tmp);
			if (item == 1 && GetPlayerCash(playerid) > 1499)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
                SetTimerEx("BoxTrain", 1000, false, "i", playerid);
				PlayerActionMessage(playerid,15.0,"mindere doðru ilerler ve antremana baþlar.");
				return 1;
			}
			else if (item == 2 && GetPlayerCash(playerid) > 1999)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SetTimerEx("KungTrain", 1000, false, "i", playerid);
				PlayerActionMessage(playerid,15.0,"mindere doðru ilerler ve antremana baþlar.");
				return 1;
			}
			else if (item == 3 && GetPlayerCash(playerid) > 2499)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
				SetTimerEx("GrabTrain", 1000, false, "i", playerid);
				PlayerActionMessage(playerid,15.0,"mindere doðru ilerler ve antremana baþlar.");
				return 1;
			}
			else if (item == 4 && GetPlayerCash(playerid) > 3499)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
				SetTimerEx("KneeTrain", 1000, false, "i", playerid);
				PlayerActionMessage(playerid,15.0,"mindere doðru ilerler ve antremana baþlar.");
				return 1;
			}
			else if (item == 5 && GetPlayerCash(playerid) > 1499)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
				SetTimerEx("ElbowTrain", 1000, false, "i", playerid);
				PlayerActionMessage(playerid,15.0,"mindere doðru ilerler ve antremana baþlar.");
				return 1;
			}
	    }
		return 1;
 	}

	if(strcmp(cmd,"/arplk",true) == 0)
	{
	    for(new AracVer; AracVer < MAX_VEHICLES+1; AracVer++)
			{
		 	    new Plaka[64];
			    new CaptchSymb[22][] = {"A","B","C","D","E","F","G","H","I","K","L","M","N","O","P","R","S","T","U","V","Y","Z"};
				new sayiSymb[10][] = {0,1,2,3,4,5,6,7,8,9};
				new Symb1 = random(sizeof(CaptchSymb));
			 	new	Symb2 = random(sizeof(CaptchSymb));
			 	new	Symb3 = random(sizeof(CaptchSymb));
			  	new	Symb4 = random(sizeof(CaptchSymb));
				new SymbS1 = random(sizeof(sayiSymb));
			 	new	SymbS2 = random(sizeof(sayiSymb));
		 		new	SymbS3 = random(sizeof(sayiSymb));
				format(Plaka, sizeof(Plaka), "%d%d%s%s %d%s%s", sayiSymb[SymbS1], sayiSymb[SymbS2],CaptchSymb[Symb1],CaptchSymb[Symb2], sayiSymb[SymbS3], CaptchSymb[Symb3],CaptchSymb[Symb4]);
				SetVehicleNumberPlate(AracVer, Plaka);
				strmid(DynamicCars[AracVer][CarDescription], Plaka, 0, strlen(Plaka), 20);
				AracKaydet(AracVer);
			}
	}

 	if(strcmp(cmd,"/aracplaka",true) == 0)
 	{
 	    if(PlayerInfo[playerid][pFaction] == 11)
 	    {
	  		new bulundu;
		    for(new i = 0; i < MAX_VEHICLES; i++)
			{
			    new Float: cX, Float: cY, Float: cZ;
			    GetVehiclePos(i, cX, cY, cZ);
				if (PlayerToPoint(1.0, playerid,cX, cY, cZ))
				{
				    if(GetPlayerVirtualWorld(playerid) == GetVehicleVirtualWorld(i))
				    {
				        format(string,sizeof(string),"En yakýnýnýzda ki aracýn plakasý: %s",DynamicCars[i][CarDescription]);
				        BilgiMesajiGonder(playerid,string);
				        bulundu = 1;
				        return 1;
				    }
				}
			}
			if(bulundu == 0)
			{
				HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir araç yok.");
			}
			return 1;
		}
 	}
 	    
 	
	if(strcmp(cmd, "/sunucuguncelle", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				GameModeRestart();
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/lideryap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/lideryap [ID] [Oluþum ID]");
					return 1;
				}
				new para1;
				new level;
				para1 = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/lideryap [ID] [Oluþum ID]");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			            if(level < 1 || level > sizeof(DynamicFactions))
			            {
			                HataMesajiGonder(playerid, "Hatalý bir oluþum numarasý girdiniz.");
			                return 1;
			            }
						PlayerInfo[para1][pFaction] = level;
						PlayerInfo[para1][pRank] = 1;
						PlayerInfo[para1][pSpawn] = 1;
						SetPlayerSpawn(para1);
						format(string, sizeof(string), "%s adlý kiþiyi %s adlý organizasyonun lideri yaptýnýz.", GetPlayerNameEx2(para1, playerid),DynamicFactions[level][fName]);
					 	BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s adlý yönetici tarafýndan %s organizasyonun lideri yapýldýnýz.", GetPlayerNameEx2(playerid, para1),DynamicFactions[level][fName]);
						BilgiMesajiGonder(para1, string);
						format(string, sizeof(string), "%s, %s[%d] adlý oyuncuyu %s organizasyonunun lideri yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(para1),PlayerInfo[para1][pSQLid],DynamicFactions[level][fName]);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/faction", true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 255)
	    {
			new string5[512];
			format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Herhangi bir organizasyonda bulunmuyorsunuz.\n $15000 karþýlýðýnda açmak ister misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯");
			ShowPlayerDialog(playerid, 510,DIALOG_STYLE_MSGBOX,"Oluþum",string5,"Ýstiyorum","Istemiyorum");
	    }
	    else
		{
		    if(PlayerInfo[playerid][pRank] == 3 || PlayerInfo[playerid][pRank] == 4 || PlayerInfo[playerid][pRank] == 5 || PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pRank] == 7 || PlayerInfo[playerid][pRank] == 8 || PlayerInfo[playerid][pRank] == 9 || PlayerInfo[playerid][pRank] == 10)
		    {
				HataMesajiGonder(playerid, "Bulunduðunuz oluþumda yetkili deðilsiniz.");
				return 1;
		    }
		    else
		    {
				format(string, sizeof(string),"Ýsim deðiþtir\nRütbe deðiþtir\nPozisyon ayarla\nRütbe sayýsýný ayarla\nGiriþ rütbesini ayarla\nRenk ayarla\nOyuncu davet et\nRütbe ver\nOyuncu at\nFactiona araç al\nFaction aracýnýn yerini deðiþtir\nFaction araçlarýný spawn et\nFaction sil");
				ShowPlayerDialog(playerid, 512,DIALOG_STYLE_LIST,"Oluþum",string,"Seç","Kapat");
		    }
		}
		return 1;
 	}

	if(strcmp(cmd, "/kbildirimekle", true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11|| PlayerInfo[playerid][pFaction] == 10)
	    {
			if (PlayerInfo[playerid][pRank] <= 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/kbildirimekle [SQLID] [Seviye(Maks. 5)] [Suç/Açýklama]");
					return 1;
				}
				new playa;
				new money;
				playa = strval(tmp);
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if(money < 1 || money > 5)
				{
				    HataMesajiGonder(playerid,"Aranma seviyesi maksimim 5, minumum 1 olabilir.");
				    return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
							idx++;
				}
				new offset = idx;
				new result[75];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
						result[idx - offset] = cmdtext[idx];
						idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
						KullanimMesajiGonder(playerid, "/kbildirimekle [ID] [Seviye(Maks. 5)] [Suç/Açýklama]");
						return 1;
				}
				if(strlen(result) > 40)
				{
   					HataMesajiGonder(playerid,"Suç/Açýklama en fazla 40 karakter olabilir.");
   					return 1;
				}
				if(!SQLKontrol(playa))
				{
					HataMesajiGonder(playerid, "Hatalý bir ID girdiniz.");
					return 1;
				}
				if(SicilArat(playa))
				{
				    HataMesajiGonder(playerid, "Bu kiþiye ait bir bildirim bulunuyor.");
					return 1;
				}
				new islem[512];
				format(islem,sizeof(islem),"INSERT INTO `sicil` (`sqlid`,`isim`,`suc`,`seviye`) VALUES ('%d','%s','%s','%d')",playa,SQLIsim(playa),result,money);
				mysql_query(islem);
				format(islem,sizeof(islem),"Bildirim Adý: %s - Açýklama: %s - Aranma Seviyesi: %d",SQLIsim(playa),result,money);
				BilgiMesajiGonder(playerid,islem);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/kbildirimsil", true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11|| PlayerInfo[playerid][pFaction] == 10)
	    {
			if (PlayerInfo[playerid][pRank] <= 3)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/kbildirimsil [SQLID]");
					return 1;
				}
				new sqlid = strval(tmp);
				if(SQLKontrol(sqlid))
				{
				    if(SicilArat(sqlid))
				    {
				    	new yazi[528];
				    	format(yazi,sizeof(yazi),"DELETE FROM `sicil` WHERE `sqlid` = '%d'",sqlid);
				    	mysql_query(yazi);
						format(yazi,sizeof(yazi),"%s isimli bildirimi sildiniz.",SQLIsim(sqlid));
						BilgiMesajiGonder(playerid, yazi);
					}
					else
					{
					    HataMesajiGonder(playerid,"Bu kiþiye ait bir bildirim bulunamadý.");
					    return 1;
					}
				}
				else
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
			}
			else
			{
			    HataMesajiGonder(playerid,"Bu komutu sadece ilk 3 rütbe kullanabilir.");
			    return 1;
			}
		}
		else
		{
		    HataMesajiGonder(playerid,"Bu komutu sadece Polis Departmaný veya F.B.I kullanabilir.");
		    return 1;
		}
	}
	
	if(strcmp(cmd, "/abildirimekle", true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11|| PlayerInfo[playerid][pFaction] == 10)
	    {
			if (PlayerInfo[playerid][pRank] <= 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abildirimekle [Seviye(Maks. 5)] [Suç/Açýklama]");
					return 1;
				}
				new money;
				money = strval(tmp);
				if(money < 1 || money > 5)
				{
				    HataMesajiGonder(playerid,"Aranma seviyesi maksimim 5, minumum 1 olabilir.");
				    return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
							idx++;
				}
				new offset = idx;
				new result[75];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
						result[idx - offset] = cmdtext[idx];
						idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
						KullanimMesajiGonder(playerid, "/abildirimekle [Plaka] [Seviye(Maks. 5)] [Suç/Açýklama]");
						return 1;
				}
				if(strlen(result) > 40)
				{
   					HataMesajiGonder(playerid,"Suç/Açýklama en fazla 40 karakter olabilir.");
   					return 1;
				}
				strmid(ABSuc[playerid], result, 0, strlen(result), 40);
				ABSeviye[playerid] = money;
				ShowPlayerDialog(playerid,543,DIALOG_STYLE_INPUT,"Araç Bildirimi","Lütfen bildirim eklemek istediðiniz aracýn plakasýný girin.","Tamam","Iptal");
				return 1;
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/abildirimsil", true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11|| PlayerInfo[playerid][pFaction] == 10)
	    {
			if (PlayerInfo[playerid][pRank] <= 3)
			{
			    ShowPlayerDialog(playerid,545,DIALOG_STYLE_INPUT,"Araç Bildirimi","Lütfen bildirim silmek istediðiniz aracýn plakasýný girin.","Tamam","Iptal");
				return 1;
			}
			else
			{
			    HataMesajiGonder(playerid,"Bu komutu sadece ilk 3 rütbe kullanabilir.");
			    return 1;
			}
		}
		else
		{
		    HataMesajiGonder(playerid,"Bu komutu sadece Polis Departmaný veya F.B.I kullanabilir.");
		    return 1;
		}
	}
	
	if(strcmp(cmd, "/motor",true) == 0)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid))
		{
		    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
			return 1;
		}
	    if(MotorsuzArac(vehicleid))
	    {
			HataMesajiGonder(playerid, "Ýçerisinde bulunduðunuz aracýn motoru bulunmamaktadýr.");
			return 1;
	    }
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			HataMesajiGonder(playerid, "Sürücü koltuðunda deðilsiniz.");
		    return 1;
		}
	    if(DynamicCars[vehicleid][AracPatladi] == 1)
		{
			HataMesajiGonder(playerid, "Bu araç kullanýlmaz hale gelmiþtir.");
			return 1;
		}
		if(OutOfFuel[GetPlayerVehicleID(playerid)] == 1)
		{
		    HataMesajiGonder(playerid, "Bu aracýn benzini bulunmamaktadýr.");
		    return 1;
		}
		if(MotorDurumu[GetPlayerVehicleID(playerid)] == 1)
		{
			MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
			SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
			PlayerActionMessage(playerid,15.0, "anahtarý saat yönünün tersi yönde çevirir.");
			PlayerDoMessage(playerid, 15.0, "Motor kapanmýþtýr.");
			return 1;
		}
	    if(DynamicCars[GetPlayerVehicleID(playerid)][FactionCar] != 255)
		{
			if(PlayerInfo[playerid][pFaction] != DynamicCars[GetPlayerVehicleID(playerid)][FactionCar])
   			{
				format(string, sizeof(string), "Bu araç içerisinde bulunmadýðýnýz bir organizasyonun aracýdýr. (( %s ))",DynamicFactions[DynamicCars[vehicleid][FactionCar]][fName]);
				HataMesajiGonder(playerid, string);
			    if(DynamicCars[vehicleid][ModAlarm] > 0)
			    {
					new form[128];
					format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription]);
					PlayerDoMessage(playerid,15.0,form);
					CalanAracID[playerid] = GetPlayerVehicleID(playerid);
					SetTimerEx("Alarm",3000,false,"i",playerid);
			    }
			    if(DynamicCars[vehicleid][ModStereo] > 0)
			    {
					AlarmDurum[vehicleid] = 1;
					SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
			    }
				return 1;
   			}
		}
		if(DynamicCars[vehicleid][CarType] == 2 || DynamicCars[vehicleid][CarType] == 9 || DynamicCars[vehicleid][CarOwned] == 1)
		{
		    new oName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, oName, 24);
		 	if(strcmp(DynamicCars[vehicleid][CarOwner],oName,true))
		 	{
			    if(DynamicCars[vehicleid][ModAlarm] > 0)
			    {
					new form[128];
					format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription]);
					PlayerDoMessage(playerid,15.0,form);
					CalanAracID[playerid] = GetPlayerVehicleID(playerid);
					SetTimerEx("Alarm",3000,false,"i",playerid);
			    }
			    if(DynamicCars[vehicleid][ModStereo] > 0)
			    {
					AlarmDurum[vehicleid] = 1;
					SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
			    }
				return HataMesajiGonder(playerid, "Bu aracýn anahtarý sizde bulunmamaktadýr.");
			}
		}
		if(IsAPlane(vehicleid) || IsAHelicopter(vehicleid))
 		{
  			if(PlayerInfo[playerid][pFlyLic] == 0)
			{
  				HataMesajiGonder(playerid, "Uçmayý bilmediðiniz için bu aracý kullanamazsýnýz.");
				return 1;
			}
   		}
		if(DynamicCars[vehicleid][CarType] == 3)
		{
			if(PlayerInfo[playerid][pJob] != 1)
			{
				HataMesajiGonder(playerid, "Taksi þöförü deðilsiniz.");
				return 1;
   			}
   		}
		if(DynamicCars[vehicleid][CarType] == 4)
		{
			if(PlayerInfo[playerid][pJob] != 2)
			{
				HataMesajiGonder(playerid, "Otobüs þöförü deðilsiniz.");
				return 1;
   			}
   		}
		if(DynamicCars[vehicleid][CarType] == 5)
		{
			if(PlayerInfo[playerid][pJob] != 3)
			{
				HataMesajiGonder(playerid, "Yer temizliyicisi deðilsiniz.");
				return 1;
   			}
   		}
		if(DynamicCars[vehicleid][CarType] == 6)
		{
			if(PlayerInfo[playerid][pJob] != 4)
			{
				HataMesajiGonder(playerid, "Týr þöförü deðilsiniz.");
				return 1;
   			}
   		}
		if(DynamicCars[vehicleid][CarType] == 7)
		{
			if(PlayerInfo[playerid][pJob] != 5)
			{
				HataMesajiGonder(playerid, "Gemi þöförü deðilsiniz.");
				return 1;
   			}
   		}
		if(DynamicCars[vehicleid][CarType] == 8)
		{
			HataMesajiGonder(playerid, "Bu aracýn motorunu açabilmek için, aracý kiralamanýz gerekmektedir.");
			return 1;
   		}
		if(IsAOtobus(GetPlayerVehicleID(playerid)) && OtobusTurunda[playerid] == 0)
		{
			HataMesajiGonder(playerid, "Otobüs seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/otobus");
			return 1;
		}
		if(IsACleaner(GetPlayerVehicleID(playerid)) && YerTemizlemeTurunda[playerid] == 0)
		{
			HataMesajiGonder(playerid, "Yer temizleme seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/yertemizle");
			return 1;
		}
		if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 6 && TirTurunda[playerid] == 0)
		{
			HataMesajiGonder(playerid, "Týr seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/tirbasla");
			return 1;
		}
		if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 7 && GemiTurunda[playerid] == 0)
		{
			HataMesajiGonder(playerid, "Gemi seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/gemibasla");
			return 1;
		}
		for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
		{
		    if(ModifiyeYapiyor[oyuncu] == 1)
		    {
		        if(ModifiyeArac[oyuncu] == vehicleid)
		        {
		            HataMesajiGonder(playerid, "Modifiye edilen bir aracýn motorunu çalýþtýramazsýnýz.");
		            return 1;
		        }
		    }
		}
		if(MotorDurumu[GetPlayerVehicleID(playerid)] == 0)
		{
			PlayerActionMessage(playerid,15.0, "anahtarý aracýn kontaðýna takar ve çevirir.");
			SetTimerEx("Motor2",1500,false,"i",playerid);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/ekemer", true) ==0)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsPlayerConnected(playerid))
	    {
			if(IsPlayerInAnyVehicle(playerid))
			{
	     		if(GetVehicleModel(vehicleid) == 448 || GetVehicleModel(vehicleid) == 461 || GetVehicleModel(vehicleid) == 462 || GetVehicleModel(vehicleid) == 463 || GetVehicleModel(vehicleid) == 468 || GetVehicleModel(vehicleid) == 471 || GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || GetVehicleModel(vehicleid) == 521 || GetVehicleModel(vehicleid) == 522 || GetVehicleModel(vehicleid) == 523)
				{
				    HataMesajiGonder(playerid, "Bu araçta emniyet kemeri yok, kask takmak için: {86D060}/kask");
				    return 1;
				}
			    if(KemerTakti[playerid] == 0)
			    {
			        KemerTakti[playerid] = 1;

				}
				else
				{
			        KemerTakti[playerid] = 0;

				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir araçta deðilsiniz.");
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/kask", true) ==0)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsPlayerConnected(playerid))
	    {
			if(IsPlayerInAnyVehicle(playerid))
			{
	     		if(GetVehicleModel(vehicleid) == 448 || GetVehicleModel(vehicleid) == 461 || GetVehicleModel(vehicleid) == 462 || GetVehicleModel(vehicleid) == 463 || GetVehicleModel(vehicleid) == 468 || GetVehicleModel(vehicleid) == 471 || GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || GetVehicleModel(vehicleid) == 521 || GetVehicleModel(vehicleid) == 522 || GetVehicleModel(vehicleid) == 523)
				{
				    if(KemerTakti[playerid] == 0)
				    {
						if(SapkaTakti[playerid] == 1)
						{
							HataMesajiGonder(playerid, "Þapka takerken, kask takamazsýnýz.");
							return 1;
						}
						if(RagTakti[playerid] == 1)
						{
							HataMesajiGonder(playerid, "Rag takerken, kask takamazsýnýz.");
							return 1;
						}
						if(GozlukTakti[playerid] == 1)
						{
							HataMesajiGonder(playerid, "Gözlük takerken, kask takamazsýnýz.");
							return 1;
						}
           				new skin = GetPlayerSkin(playerid);
						SetPlayerAttachedObject(playerid, 0, 18645, 2, KaskPos[skin][0], KaskPos[skin][1], KaskPos[skin][2], KaskPos[skin][3], KaskPos[skin][4], KaskPos[skin][5]);
				        KemerTakti[playerid] = 1;

					}
					else
					{
					    RemovePlayerAttachedObject(playerid, 0);
				        KemerTakti[playerid] = 0;
	      				PlayerActionMessage(playerid, 15.0, "kaskýný çýkartýr.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Bu araçta kask yok, emniyet kemeri takmak için: {86D060}/emniyetkemeri");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Herhangi bir araçta deðilsiniz.");
			}
		}
	    return 1;
	}
	

 	if(strcmp(cmd, "/veritabani", true) == 0)
	{
	    if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 || DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
		{
            if(CopOnDuty[playerid] == 0)
			{
						HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
						return 1;
			}
   			format(string, sizeof(string),"Kiþi Sorgulat\nAraç Sorgulat");
			ShowPlayerDialog(playerid, 540,DIALOG_STYLE_LIST,"Polis veritabaný",string,"Seç","Kapat");
			return 1;
		}
	}
 	if(strcmp(cmd, "/isimdegistir", true) == 0)
	{
		new tmpp[256];
		tmpp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(!strlen(tmpp))
			{
				KullanimMesajiGonder(playerid, "/isimdegistir [ID] [Yeni isim]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmpp));
			tmp = strtok(cmdtext, idx);
			if(IsPlayerConnected(playerid))
			{
		        if(IsPlayerConnected(giveplayerid))
		        {
		            new oyuncuismi[MAX_PLAYER_NAME];
					GetPlayerName(giveplayerid, oyuncuismi, 24);
					format(string, sizeof(string), "%s adlý yönetici isminizi deðiþtirdi. Yeni isminiz: {86D060}%s",GetPlayerNameEx2(playerid, giveplayerid),tmp);
					BilgiMesajiGonder(giveplayerid, string);
					format(string, sizeof(string), "%s adlý oyuncunun ismini deðiþtirdiniz. Yeni ismi: {86D060}%s",GetPlayerNameEx2(giveplayerid, playerid),tmp);
					BilgiMesajiGonder(playerid, string);
					format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun ismini '%s' yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),PlayerInfo[giveplayerid][pSQLid],tmp);
					YoneticiMesajiGonder(string);
					SetPlayerName(giveplayerid, tmp);
					format(string, sizeof(string), "UPDATE `oyuncular` SET `ad` = '%s' WHERE `ad` = '%s'", tmp, oyuncuismi);
				    mysql_query(string);
                    if(PlayerInfo[playerid][pCK] == 3)
                    {
                        PlayerInfo[giveplayerid][pCK] = 1;
                    }
				}
				else
				{
				    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
		}
		else
		{
       		YetersizYetki(playerid, cmdtext);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/sigara", true) == 0)
	{
	    if(PlayerInfo[playerid][pSigara] <= 0)
		{
			HataMesajiGonder(playerid, "Sigaranýz bulunmamaktadýr.");
		    return 1;
		}
		IpucuMesajiGonder(playerid, "Sol Klik (RMB) tuþuna basarak sigaranýzý içebilirsiniz.");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
		PlayerInfo[playerid][pSigara]--;
		SigaraIciyor[playerid] = 1;
		SigaraKalanHak[playerid] = 10;
		PlayerActionMessage(playerid, 15.0, "sigarasýný çýkartýr ve yakarak dudaklarýnýn arasýna sokar.");
		IpucuMesajiGonder(playerid, "Sol klik (RMB) tuþuna basarak sigaranýzý içebilirsiniz.");
		return 1;
	}
	if(strcmp(cmd, "/gozbagla", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/gozbagla [ID]");
				return 1;
			}
			new playa = SQLdenBul(strval(tmp));
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pBez] == 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(GozuBaglandi[playerid] == 1)
			            {
							HataMesajiGonder(playerid, "Gözünüz baðlýyken baþkasýnýn gözünü baðlayamazsýnýz.");
			                return 1;
			            }
			            if(GozuBaglandi[playa] == 1 && GozunuBaglayacakKisiID[playa] == playerid)
			            {
							GozuBaglandi[playa] = 0;
							GozunuBaglayacakKisiID[playa] = -1;
							SetCameraBehindPlayer(playa);
							new stringz[256];
							new string2[256];
							format(stringz, sizeof(stringz), "%s isimli kiþinin gözlerini açtýnýz.", GetPlayerNameEx2(playerid, playa));
							format(string2, sizeof(string2), "%s isimli kiþi gözlerinizi açtý.", GetPlayerNameEx2(playa, playerid));
							BilgiMesajiGonder(playerid, stringz);
							BilgiMesajiGonder(playa, string2);
							PlayerPlayerActionMessage(playerid,playa, 15.0, "yüzündeki bezi çözerek gözlerinin üzerinden alýr.");
							return 1;
			            }
			            else
			            {
							new stringa[256];
							format(stringa, sizeof(stringa), "%s isimli kiþinin gözlerini siz baðlamamýþsýnýz.", GetPlayerNameEx2(playerid, playa));
							HataMesajiGonder(playerid, stringa);
						}
						PlayerPlayerActionMessage(playerid,playa, 15.0, "yüzüne elindeki bezi geçirmeye çalýþýr.");
						format(string, sizeof(string),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi gözünüzü baðlamak istiyor.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playa,playerid));
				  		ShowPlayerDialog(playa, 25,DIALOG_STYLE_MSGBOX,"Göz Baðlama",string,"Olumlu","Olumsuz");
				  		GozunuBaglayacakKisiID[playa] = playerid;
						new strings[128];
						format(strings, sizeof(strings), "%s isimli kiþiye gözünü baðlamayý teklif ettiniz.", GetPlayerNameEx2(playerid, playa));
						BilgiMesajiGonder(playerid, strings);
						return 1;
					}
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Beziniz bulunmamaktadýr.");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/baliktut", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pOlta] == 1)
	        {
	            new vehicleid = GetPlayerVehicleID(playerid);
		        if(GetVehicleModel(vehicleid) == 452 || GetVehicleModel(vehicleid) == 453 || GetVehicleModel(vehicleid) == 454 || GetVehicleModel(vehicleid) == 473 || GetVehicleModel(vehicleid) == 484)
				{
				    if(MotorDurumu[GetPlayerVehicleID(playerid)] == 1)
					{
						new balik = random(9);
						SetPlayerCheckpoint(playerid, BalikTutma[balik][0], BalikTutma[balik][1], BalikTutma[balik][2], 5.0);
                    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_BALIK;
                    	BilgiMesajiGonder(playerid, "Balýk tutmaya baþladýnýz, haritadaki checkpointlere gidin.");
                        return 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Aracýnýzýn motoru açýk deðil.");
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Balýk tutulucak bir araçta deðilsiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Oltanýz bulunmuyor.");
			}
		}
		return 1;
	}
	

	
 	if(strcmp(cmd, "/reklam", true) == 0 || strcmp(cmd, "/rek", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
   			{
				KullanimMesajiGonder(playerid, "/reklam [Reklam yazisi]");
				return 1;
			}
			if(strlen(result) > 50)
			{
			    HataMesajiGonder(playerid,"Reklam içeriði en fazla 50 karakter olabilir.");
			    return 1;
			}
			if (PlayerToPoint(1.0, playerid,1797.3883,-1578.6326,14.0825))
			{
				if ((!adds) && (PlayerInfo[playerid][pAdmin] < 2))
				{
					format(string, sizeof(string), "Tekrar reklam vermek için %d saniye beklemek zorundasýnýz.", (addtimer/1000));
					HataMesajiGonder(playerid, string);
					return 1;
				}
				new payout = idx * 5;
				if(GetPlayerCash(playerid) < payout)
				{
	   				new hatayazisi[128];
				    format(hatayazisi, sizeof(hatayazisi), "Yeterli paranýz bulunmamaktadýr. (%d$)", payout);
   					HataMesajiGonder(playerid, hatayazisi);
       				return 1;
				}
				if(PlayerInfo[playerid][pPhoneNumber] == 0)
		 		{
					HataMesajiGonder(playerid, "Telefonunuz bulunmamaktadýr.");
     				return 1;
				}
   				GivePlayerCash(playerid, - payout);
				format(string, sizeof(string), "[REKLAM]: %s {555555}(( %s - %d))",result,GetPlayerNameEx(playerid),PlayerInfo[playerid][pPhoneNumber]);
				SendClientMessageToAll(COLOR_GREEN,string);
		 		if (PlayerInfo[playerid][pAdmin] < 2)
				{
					SetTimer("AddsOn", addtimer, 0);adds = 0;
				}
				return 1;
			}
			else
			{
   				HataMesajiGonder(playerid,"Reklam verme noktasýnda deðilsiniz.");
   				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd,"/asfd",true) == 0)
	{
	    SetPlayerPos(playerid,3051.40527344,-1983.51953125,12.78375626);
	    return 1;
 	}
	
	if(strcmp(cmd, "/setstat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/setstat [ID] [Numara] [Deðer]");
					GenelMesajGonder(playerid, "1: Seviye | 2: Seviye Atlama Puaný | 3: Cinsiyet | 4: Yaþ | 5: Ten Rengi | 6: Skin");
					GenelMesajGonder(playerid, "7: Ev Anahtar Numarasý | 8: Ýþ Yeri Anahtar Numarasý | 9: Telefon Numarasý | 10: Oluþum Üyeliði");
					GenelMesajGonder(playerid, "11: Oluþum Üyeliði Rütbesi | 12: Oyuncu Parasý | 13: Oyuncunun Bankadaki Parasý");
					GenelMesajGonder(playerid, "14: Kas Seviyesi | 15: Kas Durumu");
				}
				giveplayerid = SQLdenBul(strval(tmp));
	            if(IsPlayerConnected(giveplayerid))
		    	{
		    	    if(giveplayerid != INVALID_PLAYER_ID)
		    	    {
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							KullanimMesajiGonder(playerid, "/setstat [ID] [Numara] [Deðer]");
							GenelMesajGonder(playerid, "1: Seviye | 2: Seviye Atlama Puaný | 3: Cinsiyet | 4: Yaþ | 5: Ten Rengi | 6: Skin");
							GenelMesajGonder(playerid, "7: Ev Anahtar Numarasý | 8: Ýþ Yeri Anahtar Numarasý | 9: Telefon Numarasý | 10: Oluþum Üyeliði");
							GenelMesajGonder(playerid, "11: Oluþum Üyeliði Rütbesi | 12: Oyuncu Parasý | 13: Oyuncunun Bankadaki Parasý");
							GenelMesajGonder(playerid, "14: Kas Seviyesi | 15: Kas Durumu");
							return 1;
						}
						new stat;
						stat = strval(tmp);
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							KullanimMesajiGonder(playerid, "/setstat [ID] [Numara] [Deðer]");
							GenelMesajGonder(playerid, "1: Seviye | 2: Seviye Atlama Puaný | 3: Cinsiyet | 4: Yaþ | 5: Ten Rengi | 6: Skin");
							GenelMesajGonder(playerid, "7: Ev Anahtar Numarasý | 8: Ýþ Yeri Anahtar Numarasý | 9: Telefon Numarasý | 10: Oluþum Üyeliði");
							GenelMesajGonder(playerid, "11: Oluþum Üyeliði Rütbesi | 12: Oyuncu Parasý | 13: Oyuncunun Bankadaki Parasý");
							GenelMesajGonder(playerid, "14: Kas Seviyesi | 15: Kas Durumu");
						}
						new amount;
						amount = strval(tmp);
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun seviyesini '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun seviyesi %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici seviyenizi %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun role play puanýný '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun role play puaný %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici role play puanýnýzý %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
							case 3:
							{
							    new cinsiyet[128];
								if(amount == 1) { cinsiyet = "erkek"; }
								if(amount == 2) { cinsiyet = "kadýn"; }
								PlayerInfo[giveplayerid][pSex] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun cinsiyetini '%s' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], cinsiyet);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun cinsiyeti %s olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), cinsiyet);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici cinsiyetinizi %s olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), cinsiyet);
								BilgiMesajiGonder(giveplayerid, string);
							}
                            case 4:
							{
								PlayerInfo[giveplayerid][pAge] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun yaþýný '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun yaþý %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici yaþýnýzý %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
                            case 5:
							{
							    new tenrengi[128];
								if(amount == 1) { tenrengi = "açýk tenli"; }
								if(amount == 2) { tenrengi = "koyu tenli"; }
								PlayerInfo[giveplayerid][pTenRengi] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun ten rengini '%s' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], tenrengi);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun ten rengi %s olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), tenrengi);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici ten renginizi %s olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), tenrengi);
								BilgiMesajiGonder(giveplayerid, string);
      			 			}
							case 6:
							{
								new level;
								level = strval(tmp);
								if(level > 299 || level < 1)
								{
									HataMesajiGonder(playerid, "Skin 1'den küçük, 299'dan büyük olamaz.");
									return 1;
								}
        						SetPlayerSkin(giveplayerid,amount);
        						PlayerInfo[giveplayerid][pSkin] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun skinini '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun skini %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici skininizi %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pHouseKey] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun ev anahtar numarasýný '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun ev anahtar numarasý %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici ev anahtar numaranýz %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pBizKey] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun iþyeri numarasýný '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun iþyeri numarasý %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici iþyeri numaranýz %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPhoneNumber] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun telefon numarasýný '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun telefon numarasý %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici telefon numaranýzý %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
							case 10:
							{
								if (PlayerInfo[playerid][pAdmin] >= 5)
								{
									PlayerInfo[giveplayerid][pFaction] = amount;
									format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun organizasyonunu '%s' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], DynamicFactions[amount][fName]);
									YoneticiMesajiGonder(string);
									format(string, sizeof(string), "%s adlý oyuncunun organizasyonu %s olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), DynamicFactions[amount][fName]);
									BilgiMesajiGonder(playerid, string);
									format(string, sizeof(string), "%s adlý yönetici organizasyonunuzu %s olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), DynamicFactions[amount][fName]);
									BilgiMesajiGonder(giveplayerid, string);
								}
							}
							case 11:
							{
								if (PlayerInfo[playerid][pAdmin] >= 5)
								{
								    if(PlayerInfo[giveplayerid][pFaction] == 255)
								    {
								        HataMesajiGonder(playerid, "Kiþi herhangi bir organizasyonda deðil.");
								        return 1;
								    }
								    new rutbe[128];
								    if(amount == 1)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank1]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 2)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank2]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 3)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank3]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 4)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank4]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 5)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank5]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 6)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank6]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 7)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank7]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 8)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank8]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 9)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank9]);
								        rutbe = rutbeyazi;
								    }
								    if(amount == 10)
								    {
								        new rutbeyazi[128];
								        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank10]);
								        rutbe = rutbeyazi;
								    }
									PlayerInfo[giveplayerid][pRank] = amount;
									format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun oluþum rütbesini '%s' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], rutbe);
									YoneticiMesajiGonder(string);
									format(string, sizeof(string), "%s adlý oyuncunun oluþum rütbesi %s olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), rutbe);
									BilgiMesajiGonder(playerid, string);
									format(string, sizeof(string), "%s adlý yönetici oluþum rütbenizi %s olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), rutbe);
									BilgiMesajiGonder(giveplayerid, string);
								}
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pCash] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun parasýný '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun parasý %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici paranýzý %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pBank] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun bankadaki parasýný '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun bankadaki parasý %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici bankadaki paranýzý %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
                            }
							case 14:
							{
								PlayerInfo[giveplayerid][pKasSeviyesi] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun kas seviyesini '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun kas seviyesi %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici kas seviyenizi %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
                            }
							case 15:
							{
								PlayerInfo[giveplayerid][pKasDurumu] = amount;
								format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun kas durumunu '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s adlý oyuncunun kas durumu %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s adlý yönetici kas durumunuzu %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
								BilgiMesajiGonder(giveplayerid, string);
                            }
							default:
							{
								HataMesajiGonder(playerid, "Hatalý numara girdiniz.");
							}
						}
					}
				}
			}
			else
			{
      			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/silahal",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			for(new i; i < 251; i++)
			{
				if(PlayerToPoint(3.0,playerid,WeaponInfo[i][wpX],WeaponInfo[i][wpY],WeaponInfo[i][wpZ]))
				{
				    GivePlayerWeapon(playerid, WeaponInfo[i][wpModel], WeaponInfo[i][wpAmmo]);
				    DestroyObject(WeaponInfo[i][wpObje]);
				    BilgiMesajiGonder(playerid,"Yakýnýnýzda bulunan silahý aldýnýz.");
				    WeaponInfo[i][wpModel] = 0;
				    WeaponInfo[i][wpAmmo] = 0;
				    WeaponInfo[i][wpX] = 0.0;
				    WeaponInfo[i][wpY] = 0.0;
				    WeaponInfo[i][wpZ] = 0.0;
				    return 1;
				}
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/silahbirak",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new wid = GetPlayerWeapon(playerid);
			new ammo = GetPlayerAmmo(playerid);
			if(wid == 0)
			{
				HataMesajiGonder(playerid,"Elinizde býrakabileceðiniz bir silah yok.");
				return 1;
			}
		    new Float:xx,Float:yy,Float:zz;
		    GetPlayerPos(playerid, xx,yy,zz);
		    for(new i; i < 251; i++)
		    {
		        if(WeaponInfo[i][wpModel] == 0)
		        {
		    		WeaponInfo[i][wpX] = xx;
		    		WeaponInfo[i][wpY] = yy;
		    		WeaponInfo[i][wpZ] = zz;
		    		WeaponInfo[i][wpAmmo] = ammo;
		    		WeaponInfo[i][wpModel] = wid;
		    		WeaponInfo[i][wpObje] = CreateObject(SilahObjeleri[wid][0],WeaponInfo[i][wpX],WeaponInfo[i][wpY],WeaponInfo[i][wpZ]-1,93.7,120.0,120.0);
		    		BilgiMesajiGonder(playerid,"Elinizde ki silahý býraktýnýz.");
		    		RemovePlayerWeapon(playerid,wid);
		    		return 1;
		    	}
		    }
		}
	}
	
	if(strcmp(cmd,"/olusumlar",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 2)
	    {
		    BilgiMesajiGonder(playerid,"[Oluþum Listesi]");
		    for(new i; i < 501; i++)
		    {
		        if(DynamicFactions[i][fSQLid] != 0)
		        {
		            format(string,sizeof(string),"Oluþum Adý: %s - ID: %d",DynamicFactions[i][fName],i);
					GenelMesajGonder(playerid,string);
				}
			}
		}
	}
	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/setskin [ID] [Skin ID]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
	            if(IsPlayerConnected(giveplayerid))
		    	{
		    	    if(giveplayerid != INVALID_PLAYER_ID)
		    	    {
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							KullanimMesajiGonder(playerid, "/setskin [ID] [Skin ID]");
							return 1;
						}
						new amount;
						amount = strval(tmp);
						new level;
						level = strval(tmp);
						if(level > 299 || level < 1)
						{
							HataMesajiGonder(playerid, "Skin ID 1'den küçük, 299'dan yüksek olamaz.");
							return 1;
						}
        				SetPlayerSkin(giveplayerid,amount);
						PlayerInfo[giveplayerid][pSkin] = amount;
						format(string, 128, "%s, %s[%d] adlý oyuncunun skinini '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pSQLid], amount);
						YoneticiMesajiGonder(string);
						format(string, sizeof(string), "%s adlý oyuncunun skini %d olarak ayarlandý.", GetPlayerNameEx2(giveplayerid, playerid), amount);
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s adlý yönetici skininizi %d olarak ayarladý.", GetPlayerNameEx2(playerid, giveplayerid), amount);
						BilgiMesajiGonder(giveplayerid, string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/spawnet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/spawnet [ID]");
					return 1;
				}
				new playa = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
		   				SetPlayerSpawn(playa);
						format(string, 128, "%s, %s[%d] adlý oyuncuyu spawn etti.",GetPlayerNameEx(playerid), GetPlayerNameEx(playa), PlayerInfo[playa][pSQLid]);
						YoneticiMesajiGonder(string);
						format(string, sizeof(string), "%s adlý oyuncuyu spawn ettiniz.", GetPlayerNameEx2(playa, playerid));
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s adlý yönetici sizi spawn eti.", GetPlayerNameEx2(playerid, playa));
						BilgiMesajiGonder(playa, string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sqlid", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/sqlid [Oyuncu ID]");
					return 1;
				}
				new playa = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						format(string, 128, "%s, %s[%d] adlý oyuncunun ID'sini öðrendi.",GetPlayerNameEx(playerid), GetPlayerNameEx(playa), PlayerInfo[playa][pSQLid]);
						YoneticiMesajiGonder(string);
						format(string, sizeof(string), "%s adlý oyuncunun ID bilgisi: {86D060}%d", GetPlayerNameEx2(playa, playerid), PlayerInfo[playa][pSQLid]);
						BilgiMesajiGonder(playerid, string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/cc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				for(new i = 0; i < 100; i++)
				{
					SendClientMessageToAll(COLOR_WHITE, " ");
				}
				format(string, 128, "%s[%d] bütün konuþmalarý temizledi.",GetPlayerNameEx(playerid), PlayerInfo[playerid][pSQLid]);
				YoneticiMesajiGonder(string);
				return 1;
			}
			else
			{
     			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd,"/aracbenzin",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
	    {
	        new vid = GetPlayerVehicleID(playerid);
	        Fuel[vid] = 100;
	        OutOfFuel[vid] = 0;
	        BilgiMesajiGonder(playerid,"Aracýn benzini dolduruldu.");
	        return 1;
	    }
	}
	
	if(strcmp(cmd, "/oldcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    format(string, sizeof(string), "En son bindiðiniz aracýn ID'si: %d", gLastCar[playerid]);
		    BilgiMesajiGonder(playerid, string);
	    }
	    return 1;
	}
	if (strcmp(cmd, "/masked", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 2)
	        {
				GenelMesajGonder(playerid, "Maskeli oyuncular:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(MaskeKullaniyor[i] == 1)
					    {
							format(string, 256,"Ýsim: %s [ID: %d] ",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
							GenelMesajGonder(playerid, string);
						}
					}
				}
			}
			else
			{
       			YetersizYetki(playerid, cmdtext);
	        }
		}
		return 1;
	}
 	if(strcmp(cmd,"/online",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pFaction] == 255)
			{
				HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
				return 1;
			}
			new teamnumber;
			new ranknumber;
			teamnumber = PlayerInfo[playerid][pFaction];
			ranknumber = PlayerInfo[playerid][pRank];
			format(string, sizeof(string), "[%s - Oluþum aktif listesi]", DynamicFactions[PlayerInfo[playerid][pFaction]][fName]);
	    	BilgiMesajiGonder(playerid, string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					if (PlayerInfo[i][pFaction] == teamnumber)
					{
					    if(ranknumber == 1)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank1]);
						}
					    if(ranknumber == 2)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank2]);
						}
					    if(ranknumber == 3)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank3]);
						}
					    if(ranknumber == 4)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank4]);
						}
					    if(ranknumber == 5)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank5]);
						}
					    if(ranknumber == 6)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank6]);
						}
					    if(ranknumber == 7)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank7]);
						}
					    if(ranknumber == 8)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank8]);
						}
					    if(ranknumber == 9)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank9]);
						}
					    if(ranknumber == 10)
						{
							format(string, sizeof(string), "%s - [Rütbe: %s]",GetPlayerNameEx2(i, playerid), DynamicFactions[teamnumber][fRank10]);
						}
						if(strlen(string) > 1)
						{
							GenelMesajGonder(playerid, string);
						}
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aractamir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(!IsPlayerInAnyVehicle(playerid))
	   			{
			    	HataMesajiGonder(playerid, "Herhangi bir araçta deðilsiniz.");
				    return 1;
				}
				DynamicCars[GetPlayerVehicleID(playerid)][AracPatladi] = 0;
  				DynamicCars[GetPlayerVehicleID(playerid)][CarHealth] = 1000.0;
			    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    BilgiMesajiGonder(playerid, "Araç tamir edildi.");
				format(string, 128, "%s[%d] aracýný tamir etti.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
				YoneticiMesajiGonder(string);
			}
			else
			{
       			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/kayitet", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					OnPlayerDataSave(i);
				}
			}
		 	for(new i; i < sizeof(Building); i++)
			{
		 		BinaKaydet(i);
			}
		 	for(new i; i < sizeof(DynamicFactions); i++)
			{
		 		FactionKaydet(i);
			}
		 	for(new i; i < sizeof(Houses); i++)
			{
			    EvKaydet(i);
			}
		 	for(new i; i < sizeof(Businesses); i++)
			{
			    IsyeriKaydet(i);
			}
		 	for(new i; i < sizeof(DynamicCars); i++)
			{
			    AracKaydet(i);
			}
			OtelKaydet();
			MeslekKaydet();
			DepoKaydet();
			LokasyonKaydet();
			LokasyonKaydet2();
			LokasyonKaydet3();
			BilgiMesajiGonder(playerid, "Bütün veriler MySQL'ye kaydedildi.");
			return 1;
		}
		else
		{
		    YetersizYetki(playerid, cmdtext);
		}
	}
	if(strcmp(cmd, "/agotobusiness", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/agotobusiness [Ýþyeri ID]");
					return 1;
				}
				new id = strval(tmp);
				new form[128];
				SetPlayerPos(playerid,Businesses[id][EnterX],Businesses[id][EnterY],Businesses[id][EnterZ]);
				SetPlayerInterior(playerid,Businesses[id][EnterInterior]);
				SetPlayerVirtualWorld(playerid,Businesses[id][EnterWorld]);
				format(form, sizeof(form), "%d numaralý iþyerine ýþýnlandýnýz.", id);
				BilgiMesajiGonder(playerid, form);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
   	if(strcmp(cmd, "/abusinessproducts", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessproducts [Ýþyeri ID] [Ürün sayýsý]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessproducts [Ýþyeri ID] [Ürün sayýsý]");
					return 1;
				}
				new id2;
				new form[250];
				id2 = strval(tmp);
				Businesses[id][Products] = id2;
				format(form, sizeof form, "%d ID'li iþyerinin ürünlerini %d yaptýnýz.", id,id2);
				BilgiMesajiGonder(playerid, form);
				IsyeriKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
  	if(strcmp(cmd, "/abusinessprice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessprice [Ýþyeri ID] [Ýþyeri fiyatý]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessprice [Ýþyeri ID] [Ýþyeri fiyatý]");
					return 1;
				}
				new id2;
				new form[128];
				id2 = strval(tmp);
				Businesses[id][BizPrice] = id2;
				format(form, sizeof form, "%d ID'li iþyerinin fiyatýný %d yaptýnýz.", id,id2);
				BilgiMesajiGonder(playerid, form);
				Delete3DTextLabel(IsyeriTanimi[id]);
			   	if(Businesses[id][Owned] == 0)
				{
					format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[id][BusinessName],Businesses[id][BizPrice]);
	    			IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
				}
				else
				{
					format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[id][BusinessName],Businesses[id][Owner],Businesses[id][EntranceCost]);
	  				IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
				}
				IsyeriKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
   	if(strcmp(cmd, "/abusinesstype", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinesstype [Ýþyeri ID] [Ýþyeri tipi]");
				    GenelMesajGonder(playerid, "1: Restaurant - 2: Elektronik - 3: 24-7 - 4: Reklamcýlýk þirketi - 5: Kiyafet Saticisi - 6: Bar/Klup");
				    GenelMesajGonder(playerid, "7: Berber - 8: Kayit stüdyosu - 9: Büro");
					return 1;
				}
				new id;
				new form[128];
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinesstype [Ýþyeri ID] [Ýþyeri tipi]");
				    GenelMesajGonder(playerid, "1: Restaurant - 2: Elektronik - 3: 24-7 - 4: Reklamcýlýk þirketi - 5: Kiyafet Saticisi - 6: Bar/Klup");
				    GenelMesajGonder(playerid, "7: Berber - 8: Kayit stüdyosu - 9: Büro");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				if(id2 >= 1 && id2 < 10)
				{
					Businesses[id][BizType] = id2;
					format(form, sizeof form, "%d ID'li iþyerinin tipini %d yaptýnýz.", id,id2);
					BilgiMesajiGonder(playerid, form);
					Delete3DTextLabel(IsyeriTanimi[id]);
				   	if(Businesses[id][Owned] == 0)
				    {
						format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[id][BusinessName],Businesses[id][BizPrice]);
		    			IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
					}
					else
					{
						format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[id][BusinessName],Businesses[id][Owner],Businesses[id][EntranceCost]);
		  				IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
					}
					IsyeriKaydet(id);
				}
				else
				{
					HataMesajiGonder(playerid,"Ýþyeri tipi en az 1 en fazla 9 olabilir.");
					return 1;
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/abusinessentrance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessentrance [Ýþyeri ID]");
					return 1;
				}
				new id = strval(tmp);
				new form[128];
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x, y, z);
				Businesses[id][EnterX] = x;
				Businesses[id][EnterY] = y;
				Businesses[id][EnterZ] = z;
				Businesses[id][EnterWorld] = GetPlayerVirtualWorld(playerid);
				Businesses[id][EnterInterior] = GetPlayerInterior(playerid);
  				new Float:angle;
				GetPlayerFacingAngle(playerid, angle);
				Businesses[id][EnterAngle] = angle;
				MoveStreamPickup(Businesses[id][PickupID],Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]);
				format(form, sizeof(form), "%d ID'li iþyerinin giriþ pozisyonunu ayarladýnýz.", id);
				BilgiMesajiGonder(playerid, form);
				Delete3DTextLabel(Text3D:IsyeriTanimi[id]);
		    	if(Businesses[id][Owned] == 0)
			    {
					format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[id][BusinessName],Businesses[id][BizPrice]);
    				IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
				}
				else
				{
					format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[id][BusinessName],Businesses[id][Owner],Businesses[id][EntranceCost]);
  					IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
				}
				IsyeriKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/abusinessexit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessexit [Ýþyeri ID]");
					return 1;
				}
				new id = strval(tmp);
				new form[128];
  				new Float:angle;
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x, y, z);
				Businesses[id][ExitX] = x;
				Businesses[id][ExitY] = y;
				Businesses[id][ExitZ] = z;
				Businesses[id][ExitInterior] = GetPlayerInterior(playerid);
				GetPlayerFacingAngle(playerid, angle);
				Businesses[id][ExitAngle] = angle;
				IsyeriKaydet(id);
				format(form, sizeof(form), "%d ID'li iþyerinin çýkýþ pozisyonunu ayarladýnýz.", id);
				BilgiMesajiGonder(playerid, form);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/agotohouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/agotohouse [Ev ID]");
					return 1;
				}
				new id = strval(tmp);
				SetPlayerPos(playerid,Houses[id][EnterX],Houses[id][EnterY],Houses[id][EnterZ]);
				SetPlayerInterior(playerid,Houses[id][EnterInterior]);
				SetPlayerVirtualWorld(playerid,Houses[id][EnterWorld]);
				new form[128];
				format(form, sizeof(form), "%d numaralý evin giriþ pozisyonuna ýþýnlandýnýz.", id);
				BilgiMesajiGonder(playerid, form);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/createhouse",true) == 0 || strcmp(cmd, "/ch",true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 4)
	    {
	        new arat[256];
	        format(arat,sizeof(arat),"SELECT * FROM `evler`");
	        mysql_query(arat);
	        mysql_store_result();
	        new id = mysql_num_rows()+1;
	        if(id >= 350)
	        {
				HataMesajiGonder(playerid,"Maksimum ev sayýsýna ulaþýldý.");
				return 1;
			}
			new ekle[528],Float:xX,Float:yY,Float:zZ;
			GetPlayerPos(playerid,xX,yY,zZ);
			format(ekle,sizeof(ekle),"INSERT INTO `evler` (`eX`,`eY`,`eZ`) VALUES ('%f','%f','%f')",xX,yY,zZ);
			mysql_query(ekle);
			strmid(Houses[id][Owner], "", 0, 0, 255);
			Houses[id][EnterX] = xX;
			Houses[id][EnterY] = yY;
			Houses[id][EnterZ] = zZ;
			Houses[id][EnterWorld] = 0;
			Houses[id][EnterInterior] = 0;
			Houses[id][EnterAngle] = 0;
			Houses[id][ExitX] = 0;
			Houses[id][ExitY] = 0;
			Houses[id][ExitZ] = 0;
			Houses[id][ExitInterior] = 0;
			Houses[id][ExitAngle] = 0;
			Houses[id][Owned] = 0;
			Houses[id][Rentable] = 0;
			Houses[id][RentCost] = 0;
			Houses[id][HousePrice] = 0;
			Houses[id][Materials] = 0;
			Houses[id][Drugs] = 0;
			Houses[id][Money] = 0;
			Houses[id][Locked] = 0;
			Houses[id][PickupID] = 1273;
			Houses[id][PickupID] = CreateStreamPickup(1273, 1, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ],PICKUP_RANGE);
			GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
			format(EvYazi, sizeof(EvYazi), "Bu ev satýlýk!\nÜcret: %d$\nAdres: %s %d\nEvi satýn almak için: /satinal",Houses[id][HousePrice],houselocation,id);
  			EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
			format(ekle,sizeof(ekle),"Yeni bir ev eklediniz, ID: %d",id);
			BilgiMesajiGonder(playerid, ekle);
			EvKaydet(id);
			return 1;
		}
	    else
	    {
	        YetersizYetki(playerid, cmdtext);
	    }
	    return 1;
	}
	
	if(strcmp(cmd,"/deletehouse",true) == 0 || strcmp(cmd,"/dh",true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 4)
	    {
	        new id;
		    for(new i = 0; i < sizeof(Houses); i++)
			{
				if (PlayerToPoint(1.0, playerid,Houses[i][EnterX], Houses[i][EnterY], Houses[i][EnterZ]))
				{
				    if(GetPlayerVirtualWorld(playerid) == Houses[i][EnterWorld])
				    {
				        id = i;
				        break;
				    }
				}
			}
			if(id == 0)
			{
				HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir ev yok.");
				return 1;
			}
			else
			{
			    new query[256];
			    Houses[id][SQLid] = 0;
				Houses[id][EnterX] = 0;
				Houses[id][EnterY] = 0;
				Houses[id][EnterZ] = 0;
				Houses[id][EnterWorld] = 0;
				Houses[id][EnterInterior] = 0;
				Houses[id][EnterAngle] = 0;
				Houses[id][ExitX] = 0;
				Houses[id][ExitY] = 0;
				Houses[id][ExitZ] = 0;
				Houses[id][ExitInterior] = 0;
				Houses[id][ExitAngle] = 0;
				Houses[id][Owned] = 0;
				Houses[id][Rentable] = 0;
				Houses[id][RentCost] = 0;
				Houses[id][HousePrice] = 0;
				Houses[id][Materials] = 0;
				Houses[id][Drugs] = 0;
				Houses[id][Money] = 0;
				Houses[id][Locked] = 0;
				DestroyStreamPickup(Houses[id][PickupID]);
				Houses[id][PickupID] = 0;
				format(query,sizeof(query),"DELETE FROM `evler` WHERE `id` = '%d'",id);
	    		mysql_query(query);
	    		return 1;
			}
	    }
	    else
	    {
	        YetersizYetki(playerid, cmdtext);
	    }
		return 1;
	}
	
	if(strcmp(cmd, "/createbusiness",true) == 0 || strcmp(cmd, "/cbs",true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 4)
	    {
	        tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
			    KullanimMesajiGonder(playerid,"/cbs [Ýþyeri Tipi]");
			    GenelMesajGonder(playerid, "1: Restaurant - 2: Elektronik - 3: 24-7 - 4: Reklamcýlýk þirketi - 5: Kiyafet Saticisi - 6: Bar/Klup");
			    GenelMesajGonder(playerid, "7: Berber - 8: Dövme Salonu - 9: Kayit stüdyosu - 10: Büro");
			    return 1;
			}
			new tip = strval(tmp);
			new tipyazi[80];
	        new arat[256];
	        format(arat,sizeof(arat),"SELECT * FROM `isyerleri`");
	        mysql_query(arat);
	        mysql_store_result();
	        new id = mysql_num_rows()+1;
	        if(id >= 300)
	        {
				HataMesajiGonder(playerid,"Maksimum iþ yeri ulaþýldý.");
				return 1;
			}
			if(tip < 1 || tip > 10)
			{
				HataMesajiGonder(playerid,"Hatalý bir iþyeri tipi girdiniz.");
				return 1;
			}
			if(tip == 1) { tipyazi = "Restaurant"; }
			else if(tip == 2) { tipyazi = "Elektronik"; }
			else if(tip == 3) { tipyazi = "24-7"; }
			else if(tip == 4) { tipyazi = "Reklamcýlýk þirketi"; }
			else if(tip == 5) { tipyazi = "Binco"; }
			else if(tip == 6) { tipyazi = "Bar"; }
			else if(tip == 7) { tipyazi = "Berber"; }
			else if(tip == 8) { tipyazi = "Dovme Salonu"; }
			else if(tip == 9) { tipyazi = "Kayit Studyosu"; }
			else if(tip == 10) { tipyazi = "Büro"; }
			new ekle[1028], Float:xX,Float:yY,Float:zZ;
			GetPlayerPos(playerid, xX,yY,zZ);
			format(ekle,sizeof(ekle),"INSERT INTO `isyerleri` (`descr`,`eX`,`eY`,`eZ`,`BizType`) VALUES ('%s','%f','%f','%f','%d')",tipyazi,xX,yY,zZ,tip);
			mysql_query(ekle);
			strmid(Businesses[id][BusinessName], tipyazi, 0, 80, 200);
			strmid(Businesses[idx][Owner], "", 0, 0, 255);
			Businesses[id][EnterX] = xX;
			Businesses[id][EnterY] = yY;
			Businesses[id][EnterZ] = zZ;
			Businesses[id][EnterWorld] = 0;
			Businesses[id][EnterInterior] = 0;
			Businesses[id][EnterAngle] = 0;
			Businesses[id][ExitX] = 0;
			Businesses[id][ExitY] = 0;
			Businesses[id][ExitZ] = 0;
			Businesses[id][ExitInterior] = 0;
			Businesses[id][ExitAngle] = 0;
			Businesses[id][Owned] = 0;
			Businesses[id][Enterable] = 0;
			Businesses[id][BizPrice] = 0;
			Businesses[id][EntranceCost] = 0;
			Businesses[id][Till] = 0;
			Businesses[id][Locked] = 0;
			Businesses[id][BizType] = tip;
			Businesses[id][Products] = 0;
			Businesses[id][PickupID] = 1272;
			Businesses[id][PickupID] = CreateStreamPickup(1272, 1, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ],PICKUP_RANGE);
			format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[id][BusinessName],Businesses[id][BizPrice]);
			IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
			format(ekle,sizeof(ekle),"Yeni bir iþyeri eklediniz, ID: %d",id);
			BilgiMesajiGonder(playerid, ekle);
			return 1;
		}
	    else
	    {
	        YetersizYetki(playerid, cmdtext);
	    }
	    return 1;
	}

	if(strcmp(cmd,"/deletebusiness",true) == 0 || strcmp(cmd,"/dbs",true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 4)
	    {
	        new id;
		    for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(1.0, playerid,Businesses[i][EnterX], Businesses[i][EnterY], Businesses[i][EnterZ]))
				{
				    if(GetPlayerVirtualWorld(playerid) == Businesses[i][EnterWorld])
				    {
				        id = i;
				        break;
				    }
				}
			}
			if(id == 0)
			{
				HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir iþyeri yok.");
				return 1;
			}
			else
			{
			    new query[256];
			    Businesses[id][SQLid] = 0;
			    Businesses[id][EnterX] = 0;
				Businesses[id][EnterY] = 0;
				Businesses[id][EnterZ] = 0;
				Businesses[id][EnterWorld] = 0;
				Businesses[id][EnterInterior] = 0;
				Businesses[id][EnterAngle] = 0;
				Businesses[id][ExitX] = 0;
				Businesses[id][ExitY] = 0;
				Businesses[id][ExitZ] = 0;
				Businesses[id][ExitInterior] = 0;
				Businesses[id][ExitAngle] = 0;
				Businesses[id][Owned] = 0;
				Businesses[id][Enterable] = 0;
				Businesses[id][BizPrice] = 0;
				Businesses[id][EntranceCost] = 0;
				Businesses[id][Till] = 0;
				Businesses[id][Locked] = 0;
				Businesses[id][BizType] = 0;
				Businesses[id][Products] = 0;
				DestroyStreamPickup(Houses[id][PickupID]);
				Businesses[id][PickupID] = 0;
				format(query,sizeof(query),"DELETE FROM `isyerleri` WHERE `id` = '%d'",id);
	    		mysql_query(query);
	    		return 1;
			}
	    }
	    else
	    {
	        YetersizYetki(playerid, cmdtext);
	    }
		return 1;
	}

	if(strcmp(cmd, "/ahouseint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahouseint [Ev ID] [Ýnterior ID]");
					return 1;
				}
				new id;
				new string2[256];
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahouseint [Ev ID] [Interior ID]");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				if(id2 < 1 || id2 > 42)
				{
					HataMesajiGonder(playerid, "Ýnterior 1'den küçük, 42'den büyük olamaz.");
					return 1;
				}
				if(id2 == 1)
				{
					Houses[id][ExitX] = 235.508994;
					Houses[id][ExitY] = 1189.169897;
					Houses[id][ExitZ] = 1080.339966;
					Houses[id][ExitInterior] = 3;
					format(string, sizeof string, "Büyük Ev/2 Salon/3 Yatak Odasý", id,id2);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
 				}
     			else if(id2 == 2)
				{
					Houses[id][ExitX] = 225.756989;
					Houses[id][ExitY] = 1240.000000;
					Houses[id][ExitZ] = 1082.149902;
					Houses[id][ExitInterior] = 2;
					format(string, sizeof string, "Orta Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
 				}
				else if(id2 == 3)
				{
					Houses[id][ExitX] = 223.043991;
					Houses[id][ExitY] = 1289.259888;
					Houses[id][ExitZ] = 1082.199951;
					Houses[id][ExitInterior] = 1;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
 				}
  				else if(id2 == 4)
				{
					Houses[id][ExitX] = 225.630997; Houses[id][ExitY] = 1022.479980; Houses[id][ExitZ] = 1084.069946;
					Houses[id][ExitInterior] = 7;
					format(string, sizeof string, "Çok Büyük Ev/2 Salon/4 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
     			}
     			else if(id2 == 5)
				{
					Houses[id][ExitX] = 295.138977; Houses[id][ExitY] = 1474.469971; Houses[id][ExitZ] = 1080.519897;
					Houses[id][ExitInterior] = 15;
					format(string, sizeof string, "Küçük Ev/1 Salon/2 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
     			}
     			else if(id2 == 6)
				{
					Houses[id][ExitX] = 328.493988; Houses[id][ExitY] = 1480.589966; Houses[id][ExitZ] = 1084.449951;
					Houses[id][ExitInterior] = 15;
					format(string, sizeof string, "Küçük Ev/1 Salon/2 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
     			}
         		else if(id2 == 7)
				{
					Houses[id][ExitX] = 385.803986; Houses[id][ExitY] = 1471.769897; Houses[id][ExitZ] = 1080.209961;
					Houses[id][ExitInterior] = 15;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
     			}
     			else if(id2 == 8)
				{
					Houses[id][ExitX] = 375.971985; Houses[id][ExitY] = 1417.269897; Houses[id][ExitZ] = 1081.409912;
					Houses[id][ExitInterior] = 15;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
     			}
     			else if(id2 == 9)
				{
					Houses[id][ExitX] = 490.810974; Houses[id][ExitY] = 1401.489990; Houses[id][ExitZ] = 1080.339966;
					Houses[id][ExitInterior] = 2;
					format(string, sizeof string, "Büyük Ev/2 Salon/3 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
 				}
 			 	else if(id2 == 10)
				{
					Houses[id][ExitX] = 447.734985; Houses[id][ExitY] = 1400.439941; Houses[id][ExitZ] = 1084.339966;
					Houses[id][ExitInterior] = 2;
					format(string, sizeof string, "Orta Ev/1 Salon/2 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
	 			}
     			else if(id2 == 11)
				{
					Houses[id][ExitX] = 227.722992; Houses[id][ExitY] = 1114.389893; Houses[id][ExitZ] = 1081.189941;
					Houses[id][ExitInterior] = 5;
					format(string, sizeof string, "Büyük Ev/2 Salon/4 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
		 		}
     			else if(id2 == 12)
				{
					Houses[id][ExitX] = 260.983978; Houses[id][ExitY] = 1286.549927; Houses[id][ExitZ] = 1080.299927;
					Houses[id][ExitInterior] = 4;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
     			else if(id2 == 13)
				{
					Houses[id][ExitX] = 221.666992; Houses[id][ExitY] = 1143.389893; Houses[id][ExitZ] = 1082.679932;
					Houses[id][ExitInterior] = 4;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 14)
				{
					Houses[id][ExitX] = 27.132700; Houses[id][ExitY] = 1341.149902; Houses[id][ExitZ] = 1084.449951;
					Houses[id][ExitInterior] = 10;
					format(string, sizeof string, "Orta Ev/2 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 15)
				{
					Houses[id][ExitX] = -262.601990; Houses[id][ExitY] = 1456.619995; Houses[id][ExitZ] = 1084.449951;
					Houses[id][ExitInterior] = 4;
					format(string, sizeof string, "Büyük Ev/2 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 16)
				{
					Houses[id][ExitX] = 22.778299; Houses[id][ExitY] = 1404.959961; Houses[id][ExitZ] = 1084.449951;
					Houses[id][ExitInterior] = 5;
					format(string, sizeof string, "Orta Ev/1 Salon/2 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
     			else if(id2 == 17)
				{
					Houses[id][ExitX] = 140.278000; Houses[id][ExitY] = 1368.979980; Houses[id][ExitZ] = 1083.969971;
					Houses[id][ExitInterior] = 5;
					format(string, sizeof string, "Büyük Ev/2 Salon/4 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 18)
				{
					Houses[id][ExitX] = 234.045990; Houses[id][ExitY] = 1064.879883; Houses[id][ExitZ] = 1084.309937;
					Houses[id][ExitInterior] = 6;
					format(string, sizeof string, "Büyük Ev/2 Salon/3 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
     			else if(id2 == 19)
				{
					Houses[id][ExitX] = -68.294098; Houses[id][ExitY] = 1353.469971; Houses[id][ExitZ] = 1080.279907;
					Houses[id][ExitInterior] = 6;
					format(string, sizeof string, "Küçük Ev/1 Salon", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
		 		}
         		else if(id2 == 20)
				{
					Houses[id][ExitX] = -285.548981; Houses[id][ExitY] = 1470.979980; Houses[id][ExitZ] = 1084.449951;
					Houses[id][ExitInterior] = 15;
					format(string, sizeof string, "1 Yatak Odasý/Oturma Odasý/Mutfak", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
     			else if(id2 == 21)
				{
					Houses[id][ExitX] = -42.581997; Houses[id][ExitY] = 1408.109985; Houses[id][ExitZ] = 1084.449951;
					Houses[id][ExitInterior] = 8;
					format(string, sizeof string, "Küçük Ev/1 Salon", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
     			else if(id2 == 22)
				{
					Houses[id][ExitX] = 83.345093; Houses[id][ExitY] = 1324.439941; Houses[id][ExitZ] = 1083.889893;
					Houses[id][ExitInterior] = 9;
					format(string, sizeof string, "Orta Ev/2 Salon/2 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
     			else if(id2 == 23)
				{
					Houses[id][ExitX] = 260.941986; Houses[id][ExitY] = 1238.509888; Houses[id][ExitZ] = 1084.259888;
					Houses[id][ExitInterior] = 9;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
     			else if(id2 == 24)
				{
					Houses[id][ExitX] = 244.411987; Houses[id][ExitY] = 305.032990; Houses[id][ExitZ] = 999.231995;
					Houses[id][ExitInterior] = 1;
					format(string, sizeof string, "Denise'in Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
     			else if(id2 == 25)
				{
					Houses[id][ExitX] = 271.884979; Houses[id][ExitY] = 306.631989; Houses[id][ExitZ] = 999.325989;
					Houses[id][ExitInterior] = 2;
					format(string, sizeof string, "Katie'nin Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
      		 	else if(id2 == 26)
				{
					Houses[id][ExitX] = 291.282990; Houses[id][ExitY] = 310.031982; Houses[id][ExitZ] = 999.154968;
					Houses[id][ExitInterior] = 3;
					format(string, sizeof string, "Helena'nýn Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
         		else if(id2 == 27)
				{
					Houses[id][ExitX] = 302.181000; Houses[id][ExitY] = 300.722992; Houses[id][ExitZ] = 999.231995;
					Houses[id][ExitInterior] = 4;
					format(string, sizeof string, "Michelle'in Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 28)
				{
					Houses[id][ExitX] = 322.197998; Houses[id][ExitY] = 302.497986; Houses[id][ExitZ] = 999.231995;
					Houses[id][ExitInterior] = 5;
					format(string, sizeof string, "Barbara'nýn Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
         		else if(id2 == 29)
				{
					Houses[id][ExitX] = 346.870025; Houses[id][ExitY] = 309.259033; Houses[id][ExitZ] = 999.155700;
					Houses[id][ExitInterior] = 6;
					format(string, sizeof string, "Millie'nin Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 30)
				{
					Houses[id][ExitX] = 2496.049805; Houses[id][ExitY] = -1693.929932; Houses[id][ExitZ] = 1014.750000;
					Houses[id][ExitInterior] = 3;
					format(string, sizeof string, "Orta Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
     			else if(id2 == 31)
				{
					Houses[id][ExitX] = 1263.079956; Houses[id][ExitY] = -785.308960; Houses[id][ExitZ] = 1091.959961;
					Houses[id][ExitInterior] = 5;
					format(string, sizeof string, "Çok Büyük Ev/Malikane.", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 32)
				{
					Houses[id][ExitX] = 2464.109863; Houses[id][ExitY] = -1698.659912; Houses[id][ExitZ] = 1013.509949;
					Houses[id][ExitInterior] = 2;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Mutfak", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 33)
				{
					Houses[id][ExitX] = 2526.459961; Houses[id][ExitY] = -1679.089966; Houses[id][ExitZ] = 1015.500000;
					Houses[id][ExitInterior] = 1;
					format(string, sizeof string, "Küçük Ev/1 Salon/1 Yatak Odasý", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
     			else if(id2 == 34)
				{
					Houses[id][ExitX] = 2543.659912; Houses[id][ExitY] = -1303.629883; Houses[id][ExitZ] = 1025.069946;
					Houses[id][ExitInterior] = 2;
					format(string, sizeof string, "Big Smoke's Crack Factory", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
				}
     			else if(id2 == 35)
				{
					Houses[id][ExitX] = 744.542969; Houses[id][ExitY] = 1437.669922; Houses[id][ExitZ] = 1102.739990;
					Houses[id][ExitInterior] = 6;
					format(string, sizeof string, "Fanny Batter's Whore House", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
     			else if(id2 == 36)
				{
					Houses[id][ExitX] = 964.106995; Houses[id][ExitY] = -53.205498; Houses[id][ExitZ] = 1001.179993;
					Houses[id][ExitInterior] = 3;
					format(string, sizeof string, "Tiger Skin Rug Brothel", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
     			else if(id2 == 37)
				{
					Houses[id][ExitX] = 2350.339844; Houses[id][ExitY] = -1181.649902; Houses[id][ExitZ] = 1028.000000;
					Houses[id][ExitInterior] = 5;
					format(string, sizeof string, "Burning Desire Gang House", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 38)
				{
					Houses[id][ExitX] = 2807.619873; Houses[id][ExitY] = -1171.899902; Houses[id][ExitZ] = 1025.579956;
					Houses[id][ExitInterior] = 8;
					format(string, sizeof string, "Colonel Furhberger's House", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 39)
				{
					Houses[id][ExitX] = 318.564972; Houses[id][ExitY] = 1118.209961; Houses[id][ExitZ] = 1083.979980;
					Houses[id][ExitInterior] = 5;
					format(string, sizeof string, "Crack Den", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 40)
				{
					Houses[id][ExitX] = 2324.419922; Houses[id][ExitY] = -1147.539917; Houses[id][ExitZ] = 1050.719971;
					Houses[id][ExitInterior] = 12;
					format(string, sizeof string, "Unused Safe House", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
     			else if(id2 == 41)
				{
					Houses[id][ExitX] = 446.622986; Houses[id][ExitY] = 509.318970; Houses[id][ExitZ] = 1001.419983;
					Houses[id][ExitInterior] = 12;
					format(string, sizeof string, "Budget Inn Motel Room", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
			 	}
         		else if(id2 == 42)
				{
					Houses[id][ExitX] = 2216.339844; Houses[id][ExitY] = -1150.509888; Houses[id][ExitZ] = 1025.799927;
					Houses[id][ExitInterior] = 15;
					format(string, sizeof string, "Jefferson Motel", id);
					format(string2, sizeof(string2), "Ev ID: %d - Özellikler: %s", id, string);
					BilgiMesajiGonder(playerid, string2);
		 		}
				if(Houses[id][Owned] == 1)
				{
					Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d",Houses[id][Owner],houselocation, id);
				    EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
				}
				else
				{
					Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu ev satýlýk!\nÜcret: %d$\nAdres: %s %d\nEvi satýn almak için: /satinal",Houses[id][HousePrice],houselocation,id);
				    EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
		 		}
				if(Houses[id][Owned] == 1 && Houses[id][Rentable] == 1)
				{
    				Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d\nKira ücreti: %d$\nOda kiralamak için evikirala !",Houses[id][Owner],houselocation,id,Houses[id][RentCost]);
				    EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
		 		}
				EvKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0 || strcmp(cmd, "//", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] < 1)
			{
    			YetersizYetki(playerid, cmdtext);
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "[/a]dmin [Yöneticiler arasý konuþma]");
				return 1;
			}
    		new admtext[128];
			if(PlayerInfo[playerid][pAdmin] >= 5) { admtext = "Lead Admins"; }
			else if(PlayerInfo[playerid][pAdmin] == 4) { admtext = "Game Admins"; }
			else if(PlayerInfo[playerid][pAdmin] == 3) { admtext = "Game Admins"; }
			else if(PlayerInfo[playerid][pAdmin] == 2) { admtext = "Game Admins"; }
			else if(PlayerInfo[playerid][pAdmin] == 1) { admtext = "Helper"; }
			format(string, sizeof(string), "{33FFFF}%s {FFFFFF}[%s]: %s", GetPlayerNameEx(playerid), admtext, result);
			OzelYoneticiMesajiGonder(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/aooc", true) == 0 || strcmp(cmd, "/ao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] < 2)
			{
    			YetersizYetki(playerid, cmdtext);
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/aooc - /ao [Yönetici duyurusu]");
				return 1;
			}
			format(string, sizeof(string), "[AOOC] {CCCC33}%s: {FFFFFF}%s", GetPlayerNameEx(playerid), result);
			TopluMesajGonder(string);
			format(string, sizeof(string), "%s[%d] yeni bir duyuru yaptý.", GetPlayerNameEx(playerid), PlayerInfo[playerid][pSQLid]);
			YoneticiMesajiGonder(string);
		}
		return 1;
	}
  	if(strcmp(cmd, "/abuildingint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
   			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildingint [Bina ID] [Ýnterior ID]");
					GenelMesajGonder(playerid, "1: Sherman Dam - 2: Planning Department - 3: Ganton Gym - 4: Cobra Gym - 5: Below The Belt Gym");
					GenelMesajGonder(playerid, "6: RC Battlefield - 7-9: Police Departments - 10-12: Schools - 13: 8 Track Stadium");
					GenelMesajGonder(playerid, "14: Bloodbowl Stadium - 15: Dirtbike Stadium - 16: Kickstart Stadium - 17: Vice Stadium");
	    			GenelMesajGonder(playerid, "18: Maddog Mansion - 19: Jefferson Motel - 20: Woozie Office - 21: Johnson House - 22: Purple Pimps");
	                GenelMesajGonder(playerid, "23: Colonel Furhberger's - 24: Unused Safe House - 25: Jizzy's Pleasure Domes - 26: Hastahane");
	      			GenelMesajGonder(playerid, "27: Mahkeme 28: Kilise - 29: Apartman - 30: Hapishane - 31: Sorgu odasý - 32: Banka - 33: Dövüþ Kulübü");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildingint [Bina ID] [Ýnterior ID]");
					GenelMesajGonder(playerid, "1: Sherman Dam - 2: Planning Department - 3: Ganton Gym - 4: Cobra Gym - 5: Below The Belt Gym");
					GenelMesajGonder(playerid, "6: RC Battlefield - 7-9: Police Departments - 10-12: Schools - 13: 8 Track Stadium");
					GenelMesajGonder(playerid, "14: Bloodbowl Stadium - 15: Dirtbike Stadium - 16: Kickstart Stadium - 17: Vice Stadium");
		    		GenelMesajGonder(playerid, "18: Maddog Mansion - 19: Jefferson Motel - 20: Woozie Office - 21: Johnson House - 22: Purple Pimps");
		            GenelMesajGonder(playerid, "23: Colonel Furhberger's - 24: Unused Safe House - 25: Jizzy's Pleasure Domes - 26: Hastahane");
		      		GenelMesajGonder(playerid, "27: Mahkeme 28: Kilise - 29: Apartman - 30: Hapishane - 31: Sorgu odasý - 32: Banka - 33: Dövüþ Kulübü");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				if(id2 < 1 || id2 > 33)
				{
					HataMesajiGonder(playerid, "Ýnterior 1'den küçük, 33'den büyük olamaz.");
					return 1;
				}
				if(id2 == 1)
				{
					Building[id][ExitX] = -959.873962;
					Building[id][ExitY] = 1952.000000;
					Building[id][ExitZ] = 9.044310;
					Building[id][ExitInterior] = 17;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Sherman Dam.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 2)
				{
					Building[id][ExitX] = 388.871979;
					Building[id][ExitY] = 173.804993;
					Building[id][ExitZ] = 1008.389954;
					Building[id][ExitInterior] = 3;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Planning Department.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 3)
				{
					Building[id][ExitX] = 836.3116;
					Building[id][ExitY] = -54.5898;
					Building[id][ExitZ] = 972.6683;
					Building[id][ExitInterior] = 5;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Ganton Gym.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 4)
				{
					Building[id][ExitX] = 774.213989;
					Building[id][ExitY] = -48.924297;
					Building[id][ExitZ] = 1000.687988;
					Building[id][ExitInterior] = 6;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Cobra Gym.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 5)
				{
					Building[id][ExitX] = 773.579956;
					Building[id][ExitY] = -77.096695;
					Building[id][ExitZ] = 1000.687988;
					Building[id][ExitInterior] = 7;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Below The Belt Gym.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 6)
				{
					Building[id][ExitX] = -972.4957;
					Building[id][ExitY] = 1060.983;
					Building[id][ExitZ] = 1345.669;
					Building[id][ExitInterior] = 10;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: RC Battlefield.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 7)
				{
					Building[id][ExitX] = 246.783997;
					Building[id][ExitY] = 63.900200;
					Building[id][ExitZ] = 1003.639954;
					Building[id][ExitInterior] = 6;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: LSPD.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 8)
				{
					Building[id][ExitX] = 246.375992;
					Building[id][ExitY] = 109.245995;
					Building[id][ExitZ] = 1003.279968;
					Building[id][ExitInterior] = 10;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: SFPD.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 9)
				{
					Building[id][ExitX] = 238.661987;
					Building[id][ExitY] = 141.051987;
					Building[id][ExitZ] = 1003.049988;
					Building[id][ExitInterior] = 3;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: LVPD.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 10)
				{
					Building[id][ExitX] = 1494.429932;
					Building[id][ExitY] = 1305.629883;
					Building[id][ExitZ] = 1093.289917;
					Building[id][ExitInterior] = 3;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Bike School.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 11)
				{
					Building[id][ExitX] = -2029.719971;
					Building[id][ExitY] = -115.067993;
					Building[id][ExitZ] = 1035.169922;
					Building[id][ExitInterior] = 3;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Driving School.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 12)
				{
					Building[id][ExitX] = 420.484985;
					Building[id][ExitY] = 2535.589844;
					Building[id][ExitZ] = 10.020289;
					Building[id][ExitInterior] = 10;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: School.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 13)
				{
					Building[id][ExitX] = -1397.782470;
					Building[id][ExitY] = -203.723114;
					Building[id][ExitZ] = 1051.346801;
					Building[id][ExitInterior] = 7;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: 8 Track Stadium.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 14)
				{
					Building[id][ExitX] = -1398.103515;
					Building[id][ExitY] = 933.445434;
					Building[id][ExitZ] = 1041.531250;
					Building[id][ExitInterior] = 15;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Bloodbowl Stadium.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 15)
				{
					Building[id][ExitX] = -1428.809448;
					Building[id][ExitY] = -663.595886;
					Building[id][ExitZ] = 1060.219848;
					Building[id][ExitInterior] = 4;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Dirtbike Stadium.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 16)
				{
					Building[id][ExitX] = -1486.861816;
					Building[id][ExitY] = 1642.145996;
					Building[id][ExitZ] = 1060.671875;
					Building[id][ExitInterior] = 14;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Kickstart Stadium.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 17)
				{
					Building[id][ExitX] = -1401.830000;
					Building[id][ExitY] = 107.051300;
					Building[id][ExitZ] = 1032.273000;
					Building[id][ExitInterior] = 1;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Vice Stadium.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 18)
				{
					Building[id][ExitX] = 1267.663208;
					Building[id][ExitY] = -781.323242;
					Building[id][ExitZ] = 1091.906250;
					Building[id][ExitInterior] = 5;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Maddog Mansion.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 19)
				{
					Building[id][ExitX] = 2215.454833;
					Building[id][ExitY] = -1147.475585;
					Building[id][ExitZ] = 1025.796875;
					Building[id][ExitInterior] = 15;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Jefferson Motel.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 20)
				{
					Building[id][ExitX] = -2159.122802;
					Building[id][ExitY] = 641.517517;
					Building[id][ExitZ] = 1052.381713;
					Building[id][ExitInterior] = 1;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Woozie Office.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 21)
				{
					Building[id][ExitX] = 2496.049804;
					Building[id][ExitY] = -1695.238159;
					Building[id][ExitZ] = 1014.742187;
					Building[id][ExitInterior] = 3;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Johnson House.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 22)
				{
					Building[id][ExitX] = 225.630997;
					Building[id][ExitY] = 1022.479980;
					Building[id][ExitZ] = 1084.069946;
					Building[id][ExitInterior] = 7;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Purple Pimps.", id);
					BilgiMesajiGonder(playerid, string);
     			}
				else if(id2 == 23)
				{
					Building[id][ExitX] = 2807.619873;
					Building[id][ExitY] = -1171.899902;
					Building[id][ExitZ] = 1025.570312;
					Building[id][ExitInterior] = 8;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Colonel Furhberger's.", id);
					BilgiMesajiGonder(playerid, string);
     			}
				else if(id2 == 24)
				{
					Building[id][ExitX] = 2324.419921;
					Building[id][ExitY] = -1145.568359;
					Building[id][ExitZ] = 1050.710083;
					Building[id][ExitInterior] = 12;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Unused Safe House.", id);
					BilgiMesajiGonder(playerid, string);
     			}
      			else if(id2 == 25)
				{
					Building[id][ExitX] = -2640.762939;
					Building[id][ExitY] = 1406.682006;
					Building[id][ExitZ] = 906.460937;
					Building[id][ExitInterior] = 3;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Jizzy's Pleasure Domes.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 26)
				{
					Building[id][ExitX] = 1162.2430;
					Building[id][ExitY] = -1397.6732;
					Building[id][ExitZ] = 8212.6895;
					Building[id][ExitInterior] = 0;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Hastahane.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 27)
				{
					Building[id][ExitX] = 1692.2959;
					Building[id][ExitY] = -1499.2305;
					Building[id][ExitZ] = 2740.5713;
					Building[id][ExitInterior] = 0;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Mahkeme.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 28)
				{
					Building[id][ExitX] = 1964.0355;
					Building[id][ExitY] = -349.8252;
					Building[id][ExitZ] = 1092.9454;
					Building[id][ExitInterior] = 1;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Kilise.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 29)
				{
					Building[id][ExitX] = 1726.18;
					Building[id][ExitY] = -1641.00;
					Building[id][ExitZ] = 20.23;
					Building[id][ExitInterior] = 18;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Apartman.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 30)
				{
					Building[id][ExitX] = 262.8936;
					Building[id][ExitY] = 90.9043;
					Building[id][ExitZ] = 1001.0391;
					Building[id][ExitInterior] = 6;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Hapishane.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 31)
				{
					Building[id][ExitX] = 227.9664;
					Building[id][ExitY] = 182.9780;
					Building[id][ExitZ] = 1016.2355;
					Building[id][ExitInterior] = 6;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Sorgu odasý.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 32)
				{
					Building[id][ExitX] = 2315.952880;
					Building[id][ExitY] = -1.618174;
					Building[id][ExitZ] = 26.742187;
					Building[id][ExitInterior] = 0;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Banka", id);
					BilgiMesajiGonder(playerid, string);
     			}
				else if(id2 == 33)
     			{
     			    Building[id][ExitX] = 1705.6874;
					Building[id][ExitY] = -2122.6040;
					Building[id][ExitZ] = 2321.2974;
					Building[id][ExitInterior] = 0;
					format(string, sizeof string, "Bina ID: %d - Özellikleri: Dövüþ Kulübü", id);
					BilgiMesajiGonder(playerid, string);
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/abusinessint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
   			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessint [Ýþyeri ID] [Ýnterior ID]");
					GenelMesajGonder(playerid, "1: Marcos Bistro - 2: Big Spread Ranch - 3: Burger Shot - 4: Cluckin Bell");
					GenelMesajGonder(playerid, "5: Well Stacked Pizza - 6: Rusty Browns Dohnuts - 7: Jays Diner - 8: Pump Truck Stop Diner");
					GenelMesajGonder(playerid, "9: Alhambra - 10: Mistys - 11: Lil' Probe Inn - 12: Exclusive - 13: Binco");
					GenelMesajGonder(playerid, "14: ProLaps - 15: Suburban - 16: Victim - 17: Zip - 18: Redsands Casino");
					GenelMesajGonder(playerid, "19: Off Track Betting - 20: Sex Shop - 21: Zeros RC Shop - 22-25: Ammunations - 26: Ammu Shooting Range");
					GenelMesajGonder(playerid, "27: Jizzys - 28-33: 24-7's - 34: Berber - 35: Dövmeci Salonu - 36: Özel Interior 1");
					GenelMesajGonder(playerid, "37: Özel Interior 2");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessint [Ýþyeri ID] [Ýnterior ID]");
					GenelMesajGonder(playerid, "1: Marcos Bistro - 2: Big Spread Ranch - 3: Burger Shot - 4: Cluckin Bell");
					GenelMesajGonder(playerid, "5: Well Stacked Pizza - 6: Rusty Browns Dohnuts - 7: Jays Diner - 8: Pump Truck Stop Diner");
					GenelMesajGonder(playerid, "9: Alhambra - 10: Mistys - 11: Lil' Probe Inn - 12: Exclusive - 13: Binco");
					GenelMesajGonder(playerid, "14: ProLaps - 15: Suburban - 16: Victim - 17: Zip - 18: Redsands Casino");
					GenelMesajGonder(playerid, "19: Off Track Betting - 20: Sex Shop - 21: Zeros RC Shop - 22-25: Ammunations - 26: Ammu Shooting Range");
					GenelMesajGonder(playerid, "27: Jizzys - 28-33: 24-7's - 34: Berber - 35: Dövmeci Salonu - 36: Özel Interior 1");
					GenelMesajGonder(playerid, "37: Özel Interior 2");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				if(id2 < 1 || id2 > 37)
				{
					HataMesajiGonder(playerid, "Ýnterior 1'den küçük, 37'den büyük olamaz.");
					return 1;
				}
				if(id2 == 1)
				{
					Businesses[id][ExitX] = -794.8585;
					Businesses[id][ExitY] = 489.2821;
					Businesses[id][ExitZ] = 1376.1953;
					Businesses[id][ExitInterior] = 1;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Marcos Bistro.", id);
					BilgiMesajiGonder(playerid, string);
     			}
				else if(id2 == 2)
				{
					Businesses[id][ExitX] = 1212.2078;
					Businesses[id][ExitY] = -25.8756;
					Businesses[id][ExitZ] = 1000.9531;
					Businesses[id][ExitInterior] = 3;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Big Spread Ranch Strip Club.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 3)
				{
					Businesses[id][ExitX] = 362.8349;
					Businesses[id][ExitY] = -75.1310;
					Businesses[id][ExitZ] = 1001.5078;
					Businesses[id][ExitInterior] = 10;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Burger Shot.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 4)
				{
					Businesses[id][ExitX] = 364.9336;
					Businesses[id][ExitY] = -11.7986;
					Businesses[id][ExitZ] = 1001.8516;
					Businesses[id][ExitInterior] = 9;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Cluckin Bell.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 5)
				{
					Businesses[id][ExitX] = 372.4807;
					Businesses[id][ExitY] = -133.5233;
					Businesses[id][ExitZ] = 1001.49221;
					Businesses[id][ExitInterior] = 5;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Well Stacked Pizza.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 6)
				{
					Businesses[id][ExitX] = 377.0589;
					Businesses[id][ExitY] = -193.3039;
					Businesses[id][ExitZ] = 1000.6328;
					Businesses[id][ExitInterior] = 17;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Rusty Brown Dohnuts.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 7)
				{
					Businesses[id][ExitX] = 460.5500;
					Businesses[id][ExitY] = -88.6975;
					Businesses[id][ExitZ] = 999.5547;
					Businesses[id][ExitInterior] = 4;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Jays Diner.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 8)
				{
					Businesses[id][ExitX] = 681.5283;
					Businesses[id][ExitY] = -451.2896;
					Businesses[id][ExitZ] = -25.6172;
					Businesses[id][ExitInterior] = 1;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Pump Truck Stop Diner.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 9)
				{
					Businesses[id][ExitX] = 493.4507;
					Businesses[id][ExitY] = -24.9228;
					Businesses[id][ExitZ] = 1000.6719;
					Businesses[id][ExitInterior] = 17;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Alhambra.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 10)
				{
					Businesses[id][ExitX] = 501.8817;
					Businesses[id][ExitY] = -67.7547;
					Businesses[id][ExitZ] = 998.7578;
					Businesses[id][ExitInterior] = 11;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Mistys.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 11)
				{
					Businesses[id][ExitX] = -229.2298;
					Businesses[id][ExitY] = 1401.0247;
					Businesses[id][ExitZ] = 27.7656;
					Businesses[id][ExitInterior] = 18;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Lil' Probe Inn.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 12)
				{
					Businesses[id][ExitX] = 204.5305;
					Businesses[id][ExitY] = -168.8596;
					Businesses[id][ExitZ] = 1000.5234;
					Businesses[id][ExitInterior] = 14;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Exclusive.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 13)
				{
					Businesses[id][ExitX] = 207.8202;
					Businesses[id][ExitY] = -111.2653;
					Businesses[id][ExitZ] = 1005.1328;
					Businesses[id][ExitInterior] = 15;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Binco.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 14)
				{
					Businesses[id][ExitX] = 207.0900;
					Businesses[id][ExitY] = -140.3742;
					Businesses[id][ExitZ] = 1003.5078;
					Businesses[id][ExitInterior] = 3;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Prolaps.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 15)
				{
					Businesses[id][ExitX] = 203.8288;
					Businesses[id][ExitY] = -50.6637;
					Businesses[id][ExitZ] = 1001.8047;
					Businesses[id][ExitInterior] = 1;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Suburban.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 16)
				{
					Businesses[id][ExitX] = 227.4768;
					Businesses[id][ExitY] = -8.1893;
					Businesses[id][ExitZ] = 1002.2109;
					Businesses[id][ExitInterior] = 5;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Victim.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 17)
				{
					Businesses[id][ExitX] = 161.5605;
					Businesses[id][ExitY] = -97.1097;
					Businesses[id][ExitZ] = 1001.8047;
					Businesses[id][ExitInterior] = 18;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Zip.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 18)
				{
					Businesses[id][ExitX] = 1132.9381;
					Businesses[id][ExitY] = -15.8310;
					Businesses[id][ExitZ] = 1000.6797;
					Businesses[id][ExitInterior] = 12;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Small Casino in Redsands West.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 19)
				{
					Businesses[id][ExitX] = 834.6671;
					Businesses[id][ExitY] = 7.5150;
					Businesses[id][ExitZ] = 1004.1870;
					Businesses[id][ExitInterior] = 3;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Off Track Betting.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 20)
				{
					Businesses[id][ExitX] = -100.4573;
					Businesses[id][ExitY] = -25.0227;
					Businesses[id][ExitZ] = 1000.7188;
					Businesses[id][ExitInterior] = 3;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Sex Shop.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 21)
				{
					Businesses[id][ExitX] = -2240.9631;
					Businesses[id][ExitY] = 128.3005;
					Businesses[id][ExitZ] = 1035.4141;
					Businesses[id][ExitInterior] = 6;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Zero's RC Shop.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 22)
				{
					Businesses[id][ExitX] = 285.5984;
					Businesses[id][ExitY] = -41.8051;
					Businesses[id][ExitZ] = 1001.5156;
					Businesses[id][ExitInterior] = 1;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Ammunation 1.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 23)
				{
					Businesses[id][ExitX] = 285.8191;
					Businesses[id][ExitY] = -86.7522;
					Businesses[id][ExitZ] = 1001.5229;
					Businesses[id][ExitInterior] = 4;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Ammunation 2.", id);
					BilgiMesajiGonder(playerid, string);
     			}
	 			else if(id2 == 24)
				{
					Businesses[id][ExitX] = 296.9333;
					Businesses[id][ExitY] = -112.0657;
					Businesses[id][ExitZ] = 1001.5156;
					Businesses[id][ExitInterior] = 6;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Ammunation 3.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 25)
				{
					Businesses[id][ExitX] = 316.4867;
					Businesses[id][ExitY] = -170.2950;
					Businesses[id][ExitZ] = 999.5938;
					Businesses[id][ExitInterior] = 6;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Ammunation 4.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 26)
				{
					Businesses[id][ExitX] = 304.4073;
					Businesses[id][ExitY] = -141.9000;
					Businesses[id][ExitZ] = 1004.0625;
					Businesses[id][ExitInterior] = 7;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Ammunation Shooting Range.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 27)
				{
					Businesses[id][ExitX] = -2636.7776;
					Businesses[id][ExitY] = 1402.4587;
					Businesses[id][ExitZ] = 906.4609;
					Businesses[id][ExitInterior] = 3;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Jizzys.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 28)
				{
					Businesses[id][ExitX] = -25.8782;
					Businesses[id][ExitY] = -188.2509;
					Businesses[id][ExitZ] = 1003.5469;
					Businesses[id][ExitInterior] = 17;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: 24-7 1.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 29)
				{
					Businesses[id][ExitX] = 6.1071;
					Businesses[id][ExitY] = -31.7565;
					Businesses[id][ExitZ] = 1003.5494;
					Businesses[id][ExitInterior] = 10;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: 24-7 2.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 30)
				{
					Businesses[id][ExitX] = -31.0686;
					Businesses[id][ExitY] = -92.0095;
					Businesses[id][ExitZ] = 1003.5469;
					Businesses[id][ExitInterior] = 18;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: 24-7 3.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 31)
				{
					Businesses[id][ExitX] = -25.8058;
					Businesses[id][ExitY] = -141.5551;
					Businesses[id][ExitZ] = 1003.5469;
					Businesses[id][ExitInterior] = 16;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: 24-7 4.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 32)
				{
					Businesses[id][ExitX] = -27.3031;
					Businesses[id][ExitY] = -31.7571;
					Businesses[id][ExitZ] = 1003.5573;
					Businesses[id][ExitInterior] = 4;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: 24-7 5.", id);
					BilgiMesajiGonder(playerid, string);
     			}
         		else if(id2 == 33)
				{
					Businesses[id][ExitX] = -27.2408;
					Businesses[id][ExitY] = -58.2635;
					Businesses[id][ExitZ] = 1003.5469;
					Businesses[id][ExitInterior] = 6;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: 24-7 6.", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 34)
				{
					Businesses[id][ExitX] = 411.7029;
					Businesses[id][ExitY] = -23.1594;
					Businesses[id][ExitZ] = 1001.8047;
					Businesses[id][ExitInterior] = 2;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Berber", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 35)
				{
					Businesses[id][ExitX] = -204.4541;
					Businesses[id][ExitY] = -27.3465;
					Businesses[id][ExitZ] = 1002.2734;
					Businesses[id][ExitInterior] = 16;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Dövmeci Salonu", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 36)
				{
					Businesses[id][ExitX] = 5928.5137;
					Businesses[id][ExitY] = -1840.3173;
					Businesses[id][ExitZ] = 38.1967;
					Businesses[id][ExitInterior] = 3;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Özel Interior 1", id);
					BilgiMesajiGonder(playerid, string);
     			}
     			else if(id2 == 37)
				{
					Businesses[id][ExitX] = 2522.0925;
					Businesses[id][ExitY] = -5581.1938;
					Businesses[id][ExitZ] = 23.8398;
					Businesses[id][ExitInterior] = 5;
					format(string, sizeof string, "Ýþyeri ID: %d - Özellikleri: Özel Interior 2", id);
					BilgiMesajiGonder(playerid, string);
     			}
				IsyeriKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/ahouseprice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahouseprice [Ev ID] [Ev ücreti]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahouseprice [Ev ID] [Ev ücreti]");
					return 1;
				}
				new id2;
				new form[128];
				id2 = strval(tmp);
				Houses[id][HousePrice] = id2;
				format(form, sizeof form, "%d ID'li evin ücretini %d yaptýnýz.", id,id2);
				BilgiMesajiGonder(playerid, form);
				if(Houses[id][Owned] == 1)
				{
					Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d",Houses[id][Owner],houselocation, id);
    				EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
				}
				else
				{
		  			Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu ev satýlýk!\nÜcret: %d$\nAdres: %s %d\nEvi satýn almak için: /satinal",Houses[id][HousePrice],houselocation,id);
    				EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
		 		}
				if(Houses[id][Owned] == 1 && Houses[id][Rentable] == 1)
				{
				    Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d\nKira ücreti: %d$\nOda kiralamak için evikirala !",Houses[id][Owner],houselocation,id,Houses[id][RentCost]);
			    	EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
				}
				EvKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/abusinessname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinessname [Ýþyeri ID] [Ýþyeri ismi]");
					return 1;
				}
				new id = strval(tmp);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/abusinessname [Ýþyeri ID] [Ýþyeri ismi]");
					return 1;
				}
				if(strfind( result , "|" , true ) == -1)
    			{
		   			strmid(Businesses[id][BusinessName], (result), 0, strlen((result)), 128);
					format(string, sizeof(string), "%d ID'li iþyerinin ismini %s yaptýnýz.", id,(result));
					BilgiMesajiGonder(playerid, string);
					Delete3DTextLabel(IsyeriTanimi[id]);
			    	if(Businesses[id][Owned] == 0)
				    {
						format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[id][BusinessName],Businesses[id][BizPrice]);
	    				IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
					}
					else
					{
						format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[id][BusinessName],Businesses[id][Owner],Businesses[id][EntranceCost]);
	  					IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
					}
					IsyeriKaydet(id);
				}
				else
				{
				    HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/abusinesssell", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abusinesssell [Ýþyeri ID]");
					return 1;
				}
				new id = strval(tmp);
				new form[128];
				Businesses[id][Owned] = 0;
				Businesses[id][Locked] = 1;
				strmid(Businesses[id][Owner], "None", 0, strlen("None"), 255);
				format(form, sizeof(form), "%d ID'li iþyerini satýlýða çýkarttýnýz.", id);
				BilgiMesajiGonder(playerid, form);
				Delete3DTextLabel(IsyeriTanimi[id]);
		    	if(Businesses[id][Owned] == 0)
			    {
					format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[id][BusinessName],Businesses[id][BizPrice]);
    				IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
				}
				else
				{
					format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[id][BusinessName],Businesses[id][Owner],Businesses[id][EntranceCost]);
  					IsyeriTanimi[id] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[id][EnterX], Businesses[id][EnterY], Businesses[id][EnterZ]+1.0, 25, 0, 1);
				}
				IsyeriKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/ahousesell", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahousesell [Ev ID]");
					return 1;
				}
				new id = strval(tmp);
				new form[128];
				Houses[id][Owned] = 0;
				Houses[id][Locked] = 1;
				strmid(Houses[id][Owner], "None", 0, strlen("None"), 255);
				format(form, sizeof(form), "%d ID'li evi satýlýða çýkarttýnýz.", id);
				BilgiMesajiGonder(playerid, form);
				if(Houses[id][Owned] == 1)
				{
				    Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d",Houses[id][Owner],houselocation, id);
			    	EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
				}
				else
				{
				    Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu ev satýlýk!\nÜcret: %d$\nAdres: %s %d\nEvi satýn almak için: /satinal",Houses[id][HousePrice],houselocation,id);
			    	EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
		 		}
				if(Houses[id][Owned] == 1 && Houses[id][Rentable] == 1)
				{
				    Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d\nKira ücreti: %d$\nOda kiralamak için evikirala !",Houses[id][Owner],houselocation,id,Houses[id][RentCost]);
			    	EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
		 		}
				EvKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ahouseentrance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahouseentrance [Ev ID]");
					return 1;
				}
				new id = strval(tmp);
				new form[128];
  				new Float:angle;
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x, y, z);
				Houses[id][EnterX] = x;
				Houses[id][EnterY] = y;
				Houses[id][EnterZ] = z;
				Houses[id][EnterWorld] = GetPlayerVirtualWorld(playerid);
				Houses[id][EnterInterior] = GetPlayerInterior(playerid);
				GetPlayerFacingAngle(playerid, angle);
				Houses[id][EnterAngle] = angle;
				MoveStreamPickup(Houses[id][PickupID],Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]);
				format(form, sizeof(form), "%d ID'li evin giriþ pozisyonunu ayarladýnýz.", id);
				BilgiMesajiGonder(playerid, form);
				if(Houses[id][Owned] == 1)
				{
				    Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d",Houses[id][Owner],houselocation, id);
			    	EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
				}
				else
				{
				    Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu ev satýlýk!\nÜcret: %d$\nAdres: %s %d\nEvi satýn almak için: /satinal",Houses[id][HousePrice],houselocation,id);
			    	EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
		 		}
				if(Houses[id][Owned] == 1 && Houses[id][Rentable] == 1)
				{
				    Delete3DTextLabel(EvTanimi[id]);
					GetCoords2DZone(Houses[id][EnterX],Houses[id][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d\nKira ücreti: %d$\nOda kiralamak için evikirala !",Houses[id][Owner],houselocation,id,Houses[id][RentCost]);
			    	EvTanimi[id] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[id][EnterX], Houses[id][EnterY], Houses[id][EnterZ]+1.0, 25, 0, 1);
		 		}
				EvKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ahouseexit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahouseexit [Ev ID]");
					return 1;
				}
				new id = strval(tmp);
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x, y, z);
				Houses[id][ExitX] = x;
				Houses[id][ExitY] = y;
				Houses[id][ExitZ] = z;
				Houses[id][ExitInterior] = GetPlayerInterior(playerid);
  				new Float:angle;
				GetPlayerFacingAngle(playerid, angle);
				Houses[id][ExitAngle] = angle;
				EvKaydet(id);
				new form[128];
				format(form, sizeof(form), "%d ID'li evin çýkýþ pozisyonunu ayarladýnýz.", id);
				BilgiMesajiGonder(playerid, form);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/abuildingentrance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildingentrance [Bina ID]");
					return 1;
				}
				new id = strval(tmp);
				if(Building[id][EnterX] == 0.0 && Building[id][EnterY] == 0.0 && Building[id][EnterZ] == 0.0)
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
				new form[128];
  				new Float:angle;
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x, y, z);
				Building[id][EnterX] = x;
				Building[id][EnterY] = y;
				Building[id][EnterZ] = z;
				Building[id][EnterWorld] = GetPlayerVirtualWorld(playerid);
				Building[id][EnterInterior] = GetPlayerInterior(playerid);
				GetPlayerFacingAngle(playerid, angle);
				Building[id][EnterAngle] = angle;
				MoveStreamPickup(Building[id][PickupID],Building[id][EnterX], Building[id][EnterY], Building[id][EnterZ]);
				format(form, sizeof(form), "%d ID'li binanýn giriþ pozisyonunu belirlediniz.", id);
				BilgiMesajiGonder(playerid, form);
				BinaKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/agotobuilding", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/agotobuilding [Bina ID]");
					return 1;
				}
				new id = strval(tmp);
				if(Building[id][EnterX] == 0.0 && Building[id][EnterY] == 0.0 && Building[id][EnterZ] == 0.0)
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
				new form[128];
				SetPlayerPos(playerid,Building[id][EnterX],Building[id][EnterY],Building[id][EnterZ]);
				SetPlayerInterior(playerid,Building[id][EnterInterior]);
				SetPlayerVirtualWorld(playerid,Building[id][EnterWorld]);
				format(form, sizeof(form), "%d ID'li binanýn giriþ pozisyonuna ýþýnlandýnýz.", id);
				BilgiMesajiGonder(playerid, form);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/abuildinglock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildinglock [Bina ID]");
					return 1;
				}
				new id = strval(tmp);
				if(Building[id][EnterX] == 0.0 && Building[id][EnterY] == 0.0 && Building[id][EnterZ] == 0.0)
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
				new form[128];
			    if(Building[id][Locked] == 0)
			    {
			    	Building[id][Locked] = 1;
   					format(form, sizeof(form), "%d ID'li binanýn kapýsýný kilitlediniz.", id);
					BilgiMesajiGonder(playerid, form);
			    }
			    else
			    {
			    	Building[id][Locked] = 0;
   					format(form, sizeof(form), "%d ID'li binanýn kapýsýnýn kilidini açtýnýz.", id);
					BilgiMesajiGonder(playerid, form);
			    }
				BinaKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ahouselock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ahouselock [Ev ID]");
					return 1;
				}
				new id = strval(tmp);
				if(Houses[id][EnterX] == 0.0 && Houses[id][EnterY] == 0.0 && Houses[id][EnterZ] == 0.0)
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
				new form[128];
			    if(Houses[id][Locked] == 0)
			    {
			    	Houses[id][Locked] = 1;
   					format(form, sizeof(form), "%d ID'li evin kapýsýný kilitlediniz.", id);
					BilgiMesajiGonder(playerid, form);
			    }
			    else
			    {
			    	Houses[id][Locked] = 0;
   					format(form, sizeof(form), "%d ID'li evin kapýsýnýn kilidini açtýnýz.", id);
					BilgiMesajiGonder(playerid, form);
			    }
				EvKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/abuildingexit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildingexit [Bina ID]");
					return 1;
				}
				new id = strval(tmp);
				if(Building[id][EnterX] == 0.0 && Building[id][EnterY] == 0.0 && Building[id][EnterZ] == 0.0)
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
				new form[128];
  				new Float:angle;
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x, y, z);
				Building[id][ExitX] = x;
				Building[id][ExitY] = y;
				Building[id][ExitZ] = z;
				Building[id][ExitInterior] = GetPlayerInterior(playerid);
				GetPlayerFacingAngle(playerid, angle);
				Building[id][ExitAngle] = angle;
				format(form, sizeof(form), "%d ID'li binanýn çýkýþ pozisyonunu ayarladýnýz.", id);
				BilgiMesajiGonder(playerid, form);
				BinaKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/abuildingname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildingname [Bina ID] [Bina ismi]");
					return 1;
				}
				new id = strval(tmp);
				if(Building[id][EnterX] == 0.0 && Building[id][EnterY] == 0.0 && Building[id][EnterZ] == 0.0)
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/abuildingname [Bina ID] [Bina ismi]");
					return 1;
				}
				if(strfind( result , "|" , true ) == -1)
    			{
		   			strmid(Building[id][BuildingName], (result), 0, strlen((result)), 128);
					format(string, sizeof(string), "%d ID'li binanýn ismini %s yaptýnýz.", id,(result));
					BilgiMesajiGonder(playerid, string);
					BinaKaydet(id);
				}
				else
				{
				    HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/abuildingfee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildingfee [Bina ID] [Giriþ ücreti]");
					return 1;
				}
				new id;
				id = strval(tmp);
				if(Building[id][EnterX] == 0.0 && Building[id][EnterY] == 0.0 && Building[id][EnterZ] == 0.0)
				{
				    HataMesajiGonder(playerid,"Hatalý bir ID girdiniz.");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/abuildingfee [Bina ID] [Giriþ ücreti]");
					return 1;
				}
				new id2;
				new form[128];
				id2 = strval(tmp);
				Building[id][EntranceFee] = id2;
				format(form, sizeof form, "%d ID'li binanýn giriþ ücretini %d yaptýnýz.", id,id2);
				BilgiMesajiGonder(playerid, form);
				BinaKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/createbuilding", true) == 0 || strcmp(cmd, "/cb",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 4)
	    {
	        new arat[256];
	        format(arat,sizeof(arat),"SELECT * FROM `binalar`");
	        mysql_query(arat);
	        mysql_store_result();
	        new idxx = mysql_num_rows()+1;
	        if(idxx >= 500)
	        {
	            HataMesajiGonder(playerid,"Maksimum bina sayýsýna ulaþýldý.");
	            return 1;
	        }
	        else
	        {
	            new ekle[528], Float:xX, Float:yY, Float:zZ;
	            GetPlayerPos(playerid, xX,yY,zZ);
	            format(ekle,sizeof(ekle),"INSERT INTO `binalar` (`eX`,`eY`,`eZ`) VALUES ('%f','%f','%f')",xX,yY,zZ);
	            mysql_query(ekle);
				format(ekle,sizeof(ekle),"Yeni bir bina oluþturdunuz, ID: %d",idxx);
				BilgiMesajiGonder(playerid,ekle);
				strmid(Building[idxx][BuildingName], "", 0, 0, 255);
				Building[idxx][EnterX] = xX;
				Building[idxx][EnterY] = yY;
				Building[idxx][EnterZ] = zZ;
				Building[idxx][EntranceFee] = 0;
				Building[idxx][EnterWorld] = 0;
				Building[idxx][EnterInterior] = 0;
				Building[idxx][EnterAngle] = 0.0;
				Building[idxx][ExitX] = 0.0;
				Building[idxx][ExitY] = 0.0;
				Building[idxx][ExitZ] = 0.0;
				Building[idxx][ExitInterior] = 0;
				Building[idxx][ExitAngle] = 0.0;
				Building[idxx][Locked] = 0;
				Building[idxx][PickupID] = 1239;
				Building[idxx][PickupID] = CreateStreamPickup(1239, 1, Building[idxx][EnterX], Building[idxx][EnterY], Building[idxx][EnterZ],PICKUP_RANGE);
				BinaKaydet(idxx);
				return 1;
			}
		}
		else
		{
			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}

	if(strcmp(cmd,"/deletebuilding",true) == 0 || strcmp(cmd,"/db",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 4)
	    {
	        new id;
		    for(new i = 0; i < sizeof(Building); i++)
			{
				if (PlayerToPoint(1.0, playerid,Building[i][EnterX], Building[i][EnterY], Building[i][EnterZ]))
				{
				    if(GetPlayerVirtualWorld(playerid) == Building[i][EnterWorld])
				    {
				        id = i;
				        break;
				    }
				}
			}
			if(id == 0)
			{
				HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir Building yok.");
				return 1;
			}
			else
			{
			    new query[256];
			    Building[id][SQLid] = 0;
				strmid(Building[id][BuildingName], "", 0, 0, 255);
				Building[id][EnterX] = 0.00;
				Building[id][EnterY] = 0.00;
				Building[id][EnterZ] = 0.00;
				Building[id][EntranceFee] = 0;
				Building[id][EnterWorld] = 0;
				Building[id][EnterInterior] = 0;
				Building[id][EnterAngle] = 0;
				Building[id][ExitX] = 0.0;
				Building[id][ExitY] = 0.0;
				Building[id][ExitZ] = 0.0;
				Building[id][ExitInterior] = 0;
				Building[id][ExitAngle] = 0.0;
				Building[id][Locked] = 0;
				Building[id][Silindi] = 1;
				DestroyStreamPickup(Building[id][PickupID]);
				format(query,sizeof(query),"DELETE FROM `binalar` WHERE `id` = '%d'",id);
	    		mysql_query(query);
	    		return 1;
			}
	    }
		else
		{
		    YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}

	if(strcmp(cmd, "/agotobank", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]);
			SetPlayerInterior(playerid,BankPosition[Interior]);
			SetPlayerVirtualWorld(playerid,BankPosition[World]);
			SetPlayerFacingAngle(playerid,BankPosition[Angle]);
			BilgiMesajiGonder(playerid, "Bankaya ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
   	if(strcmp(cmd, "/agotodrivingtestpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,DrivingTestPosition[X],DrivingTestPosition[Y],DrivingTestPosition[Z]);
			SetPlayerInterior(playerid,DrivingTestPosition[Interior]);
			SetPlayerVirtualWorld(playerid,DrivingTestPosition[World]);
			SetPlayerFacingAngle(playerid,DrivingTestPosition[Angle]);
			BilgiMesajiGonder(playerid, "Ehliyet testine ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/agotoflyingtestpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,FlyingTestPosition[X],FlyingTestPosition[Y],FlyingTestPosition[Z]);
			SetPlayerInterior(playerid,FlyingTestPosition[Interior]);
			SetPlayerVirtualWorld(playerid,FlyingTestPosition[World]);
			SetPlayerFacingAngle(playerid,FlyingTestPosition[Angle]);
			BilgiMesajiGonder(playerid, "Uçuþ ehliyeti testine ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if(strcmp(cmd, "/agotopolicearrestpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,PoliceArrestPosition[X],PoliceArrestPosition[Y],PoliceArrestPosition[Z]);
			SetPlayerInterior(playerid,PoliceArrestPosition[Interior]);
			SetPlayerVirtualWorld(playerid,PoliceArrestPosition[World]);
			SetPlayerFacingAngle(playerid,PoliceArrestPosition[Angle]);
			BilgiMesajiGonder(playerid, "Polis tutuklama pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/agotopolicedutypos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,PoliceDutyPosition[X],PoliceDutyPosition[Y],PoliceDutyPosition[Z]);
			SetPlayerInterior(playerid,PoliceDutyPosition[Interior]);
			SetPlayerVirtualWorld(playerid,PoliceDutyPosition[World]);
			SetPlayerFacingAngle(playerid,PoliceDutyPosition[Angle]);
			BilgiMesajiGonder(playerid, "Polis iþ baþý pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/agotodepo", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,DepoSistemi[X],DepoSistemi[Y],DepoSistemi[Z]);
			SetPlayerInterior(playerid,DepoSistemi[Interior]);
			SetPlayerVirtualWorld(playerid,DepoSistemi[World]);
			SetPlayerFacingAngle(playerid,DepoSistemi[Angle]);
			BilgiMesajiGonder(playerid, "Depo pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/muzikcalar",true) == 0)
	{
	    if(PlayerInfo[playerid][pMuzikCalar] == 0)
	    {
			HataMesajiGonder(playerid,"Müzik çalarýnýz bulunmamaktadýr.");
			return 1;
		}
	    ShowPlayerDialog(playerid,9549,DIALOG_STYLE_INPUT,"Müzik Çalar","Lütfen Youtube'den dinlemek istediðiniz bir müzik linki girin.","Tamam","Iptal");
		return 1;
	}
	
	if(strcmp(cmd, "/mp3",true) == 0)
	{
	    if(PlayerInfo[playerid][pUnlu] == 1 && PlayerInfo[playerid][pAdmin] >= 2)
	    {
	        ShowPlayerDialog(playerid,9550,DIALOG_STYLE_LIST,"MP3 Çalma Sistemi","Bulunduðum Yerde Çalsýn\nSadece Bana Çalsýn","Tamam","Iptal");
	        return 1;
		}
		else
		{
		    HataMesajiGonder(playerid,"Ünlü veya admin deðilsiniz.");
		    return 1;
		}
	}
	
	if(strcmp(cmd, "/agotofbidutypos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,FBIDutyPosition[X],FBIDutyPosition[Y],FBIDutyPosition[Z]);
			SetPlayerInterior(playerid,FBIDutyPosition[Interior]);
			SetPlayerVirtualWorld(playerid,FBIDutyPosition[World]);
			SetPlayerFacingAngle(playerid,FBIDutyPosition[Angle]);
			BilgiMesajiGonder(playerid, "Polis iþ baþý pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	
  	if(strcmp(cmd, "/agotopolicegunpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,PoliceGunPosition[X],PoliceGunPosition[Y],PoliceGunPosition[Z]);
			SetPlayerInterior(playerid,PoliceGunPosition[Interior]);
			SetPlayerVirtualWorld(playerid,PoliceGunPosition[World]);
			SetPlayerFacingAngle(playerid,PoliceGunPosition[Angle]);
			BilgiMesajiGonder(playerid, "Polis silah alma pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/aracspawnpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			AracSpawnPos[X] = x;
			AracSpawnPos[Y] = y;
			AracSpawnPos[Z] = z;
			AracSpawnPos[World] = GetPlayerVirtualWorld(playerid);
			AracSpawnPos[Interior] = GetPlayerInterior(playerid);
			AracSpawnPos[Angle] = angle;
			LokasyonKaydet2();
			BilgiMesajiGonder(playerid, "Satýlýk araçlarýn spawn olma pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/gemispawnpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			GemiSpawnPos[X] = x;
			GemiSpawnPos[Y] = y;
			GemiSpawnPos[Z] = z;
			GemiSpawnPos[World] = GetPlayerVirtualWorld(playerid);
			GemiSpawnPos[Interior] = GetPlayerInterior(playerid);
			GemiSpawnPos[Angle] = angle;
			LokasyonKaydet3();
			BilgiMesajiGonder(playerid, "Satýlýk gemilerin spawn olma pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/abankpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			BankPosition[X] = x;
			BankPosition[Y] = y;
			BankPosition[Z] = z;
			BankPosition[World] = GetPlayerVirtualWorld(playerid);
			BankPosition[Interior] = GetPlayerInterior(playerid);
			BankPosition[Angle] = angle;
	  		MoveStreamPickup(BankPosition[PickupID],BankPosition[X],BankPosition[Y],BankPosition[Z]);
			LokasyonKaydet();
			BilgiMesajiGonder(playerid, "Banka pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/ataxijobpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			TaxiJobPosition[X] = x;
			TaxiJobPosition[Y] = y;
			TaxiJobPosition[Z] = z;
			TaxiJobPosition[World] = GetPlayerVirtualWorld(playerid);
			TaxiJobPosition[Interior] = GetPlayerInterior(playerid);
			TaxiJobPosition[Angle] = angle;
	  		MoveStreamPickup(TaxiJobPosition[PickupID],TaxiJobPosition[X],TaxiJobPosition[Y],TaxiJobPosition[Z]);
			MeslekKaydet();
			BilgiMesajiGonder(playerid, "Taksicilik mesleði pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/aotobusjobpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			OtobusJobPosition[X] = x;
			OtobusJobPosition[Y] = y;
			OtobusJobPosition[Z] = z;
			OtobusJobPosition[World] = GetPlayerVirtualWorld(playerid);
			OtobusJobPosition[Interior] = GetPlayerInterior(playerid);
			OtobusJobPosition[Angle] = angle;
	  		MoveStreamPickup(OtobusJobPosition[PickupID],OtobusJobPosition[X],OtobusJobPosition[Y],OtobusJobPosition[Z]);
     		MeslekKaydet();
			BilgiMesajiGonder(playerid, "Otobüscülük mesleði pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/acleanerjobpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			CleanerJobPosition[X] = x;
			CleanerJobPosition[Y] = y;
			CleanerJobPosition[Z] = z;
			CleanerJobPosition[World] = GetPlayerVirtualWorld(playerid);
			CleanerJobPosition[Interior] = GetPlayerInterior(playerid);
			CleanerJobPosition[Angle] = angle;
	  		MoveStreamPickup(CleanerJobPosition[PickupID],CleanerJobPosition[X],CleanerJobPosition[Y],CleanerJobPosition[Z]);
			MeslekKaydet();
			BilgiMesajiGonder(playerid, "Yer temizliyiciliði mesleði pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/atruckjobpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			TruckJobPosition[X] = x;
			TruckJobPosition[Y] = y;
			TruckJobPosition[Z] = z;
			TruckJobPosition[World] = GetPlayerVirtualWorld(playerid);
			TruckJobPosition[Interior] = GetPlayerInterior(playerid);
			TruckJobPosition[Angle] = angle;
	  		MoveStreamPickup(TruckJobPosition[PickupID],TruckJobPosition[X],TruckJobPosition[Y],TruckJobPosition[Z]);
			MeslekKaydet();
			BilgiMesajiGonder(playerid, "Týrcýlýk mesleði pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/ashippingjobpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			ShippingJobPosition[X] = x;
			ShippingJobPosition[Y] = y;
			ShippingJobPosition[Z] = z;
			ShippingJobPosition[World] = GetPlayerVirtualWorld(playerid);
			ShippingJobPosition[Interior] = GetPlayerInterior(playerid);
			ShippingJobPosition[Angle] = angle;
	  		MoveStreamPickup(ShippingJobPosition[PickupID],ShippingJobPosition[X],ShippingJobPosition[Y],ShippingJobPosition[Z]);
			MeslekKaydet();
			BilgiMesajiGonder(playerid, "Gemicilik mesleði pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/aotelpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
			DynamicOtel[oResepsiyonX] = x;
			DynamicOtel[oResepsiyonY] = y;
			DynamicOtel[oResepsiyonZ] = z;
	  		MoveStreamPickup(DynamicOtel[oResepsiyonPickupID],DynamicOtel[oResepsiyonX],DynamicOtel[oResepsiyonY],DynamicOtel[oResepsiyonZ]);
			OtelKaydet();
			BilgiMesajiGonder(playerid, "Otel resepsiyonunun pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/aotelasansorpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
			DynamicOtel[oAsansorX] = x;
			DynamicOtel[oAsansorY] = y;
			DynamicOtel[oAsansorZ] = z;
			DynamicOtel[oAsansorInt] = GetPlayerInterior(playerid);
			DynamicOtel[oAsansorVW] = GetPlayerVirtualWorld(playerid);
	  		MoveStreamPickup(DynamicOtel[oAsansorPickupID],DynamicOtel[oAsansorX],DynamicOtel[oAsansorY],DynamicOtel[oAsansorZ]);
			OtelKaydet();
			BilgiMesajiGonder(playerid, "Otel asansörünün pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/agotoweaponlicpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,WeaponLicensePosition[X],WeaponLicensePosition[Y],WeaponLicensePosition[Z]);
			SetPlayerInterior(playerid,WeaponLicensePosition[Interior]);
			SetPlayerVirtualWorld(playerid,WeaponLicensePosition[World]);
			SetPlayerFacingAngle(playerid,WeaponLicensePosition[Angle]);
			BilgiMesajiGonder(playerid, "Silah ruhsatý alma pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/aweaponlicensepos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			WeaponLicensePosition[X] = x;
			WeaponLicensePosition[Y] = y;
			WeaponLicensePosition[Z] = z;
			WeaponLicensePosition[World] = GetPlayerVirtualWorld(playerid);
			WeaponLicensePosition[Interior] = GetPlayerInterior(playerid);
			WeaponLicensePosition[Angle] = angle;
	  		MoveStreamPickup(WeaponLicensePosition[PickupID],WeaponLicensePosition[X],WeaponLicensePosition[Y],WeaponLicensePosition[Z]);
			LokasyonKaydet2();
			BilgiMesajiGonder(playerid, "Silah ruhsatý alma pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/agototruckpropos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,TruckProPosition[X],TruckProPosition[Y],TruckProPosition[Z]);
			SetPlayerInterior(playerid,TruckProPosition[Interior]);
			SetPlayerVirtualWorld(playerid,TruckProPosition[World]);
			SetPlayerFacingAngle(playerid,TruckProPosition[Angle]);
			BilgiMesajiGonder(playerid, "Týrcýlýk ürün alma pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/atruckpropos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			TruckProPosition[X] = x;
			TruckProPosition[Y] = y;
			TruckProPosition[Z] = z;
			TruckProPosition[World] = GetPlayerVirtualWorld(playerid);
			TruckProPosition[Interior] = GetPlayerInterior(playerid);
			TruckProPosition[Angle] = angle;
	  		MoveStreamPickup(TruckProPosition[PickupID],TruckProPosition[X],TruckProPosition[Y],TruckProPosition[Z]);
			LokasyonKaydet3();
			BilgiMesajiGonder(playerid, "Týrcýlýk ürün alma pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/agotoshippingmatpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			SetPlayerPos(playerid,ShippingMatPosition[X],ShippingMatPosition[Y],ShippingMatPosition[Z]);
			SetPlayerInterior(playerid,ShippingMatPosition[Interior]);
			SetPlayerVirtualWorld(playerid,ShippingMatPosition[World]);
			SetPlayerFacingAngle(playerid,ShippingMatPosition[Angle]);
			BilgiMesajiGonder(playerid, "Gemicilik materyal alma pozisyonuna ýþýnlandýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/ashippingmatpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			ShippingMatPosition[X] = x;
			ShippingMatPosition[Y] = y;
			ShippingMatPosition[Z] = z;
			ShippingMatPosition[World] = GetPlayerVirtualWorld(playerid);
			ShippingMatPosition[Interior] = GetPlayerInterior(playerid);
			ShippingMatPosition[Angle] = angle;
	  		MoveStreamPickup(ShippingMatPosition[PickupID],ShippingMatPosition[X],ShippingMatPosition[Y],ShippingMatPosition[Z]);
			LokasyonKaydet3();
			BilgiMesajiGonder(playerid, "Gemicilik materyal alma pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
   	if(strcmp(cmd, "/aflyingtestpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			FlyingTestPosition[X] = x;
			FlyingTestPosition[Y] = y;
			FlyingTestPosition[Z] = z;
			FlyingTestPosition[World] = GetPlayerVirtualWorld(playerid);
			FlyingTestPosition[Interior] = GetPlayerInterior(playerid);
			FlyingTestPosition[Angle] = angle;
	  		MoveStreamPickup(FlyingTestPosition[PickupID],FlyingTestPosition[X],FlyingTestPosition[Y],FlyingTestPosition[Z]);
			LokasyonKaydet();
			BilgiMesajiGonder(playerid, "Uçuþ testi pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/adrivingtestpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			DrivingTestPosition[X] = x;
			DrivingTestPosition[Y] = y;
			DrivingTestPosition[Z] = z;
			DrivingTestPosition[World] = GetPlayerVirtualWorld(playerid);
			DrivingTestPosition[Interior] = GetPlayerInterior(playerid);
			DrivingTestPosition[Angle] = angle;
			MoveStreamPickup(DrivingTestPosition[PickupID],DrivingTestPosition[X],DrivingTestPosition[Y],DrivingTestPosition[Z]);
			LokasyonKaydet();
			BilgiMesajiGonder(playerid, "Ehliyet pozisyonunu ayarladýnýz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if(strcmp(cmd, "/apolicearrestpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			PoliceArrestPosition[X] = x;
			PoliceArrestPosition[Y] = y;
			PoliceArrestPosition[Z] = z;
			PoliceArrestPosition[World] = GetPlayerVirtualWorld(playerid);
			PoliceArrestPosition[Interior] = GetPlayerInterior(playerid);
			PoliceArrestPosition[Angle] = angle;
            MoveStreamPickup(PoliceArrestPosition[PickupID],PoliceArrestPosition[X],PoliceArrestPosition[Y],PoliceArrestPosition[Z]);
			LokasyonKaydet2();
			BilgiMesajiGonder(playerid, "Polis tutuklama pozisyonunu belirlediniz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
  	if(strcmp(cmd, "/apolicedutypos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			PoliceDutyPosition[X] = x;
			PoliceDutyPosition[Y] = y;
			PoliceDutyPosition[Z] = z;
			PoliceDutyPosition[World] = GetPlayerVirtualWorld(playerid);
			PoliceDutyPosition[Interior] = GetPlayerInterior(playerid);
			PoliceDutyPosition[Angle] = angle;
            MoveStreamPickup(PoliceDutyPosition[PickupID],PoliceDutyPosition[X],PoliceDutyPosition[Y],PoliceDutyPosition[Z]);
			LokasyonKaydet2();
			BilgiMesajiGonder(playerid, "Polis iþ baþý pozisyonunu belirlediniz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/depopos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			DepoSistemi[X] = x;
			DepoSistemi[Y] = y;
			DepoSistemi[Z] = z;
			DepoSistemi[World] = GetPlayerVirtualWorld(playerid);
			DepoSistemi[Interior] = GetPlayerInterior(playerid);
			DepoSistemi[Angle] = angle;
			DepoKaydet();
			BilgiMesajiGonder(playerid, "Depo pozisyonunu belirlediniz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	/*
	if(strcmp(cmd, "/depo",true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 2)
	    {
	        if(PlayerToPoint(7.5,playerid,DepoSistemi[X],DepoSistemi[Y],DepoSistemi[Z]))
	        {
		        ShowPlayerDialog(playerid,9819,DIALOG_STYLE_LIST,"Depo Sistemi","Silah Koy\nSilah Al","Tamam","Cik");
		        return 1;
		    }
		    else
		    {
		        HataMesajiGonder(playerid,"Depoda deðilsiniz.");
		        return 1;
		    }
	    }
	    else
	    {
	        HataMesajiGonder(playerid,"Silah satýmý yapan oluþumda deðilsiniz.");
	        return 1;
	    }
	}
	*/
	
	if(strcmp(cmd, "/textkapats",true) == 0)
	{
	    TextDrawHideForPlayer(playerid, SehriAlem);
	    TextDrawHideForPlayer(playerid, SehriAlem1);
	    TextDrawHideForPlayer(playerid, Adres[playerid]);
	}
	if(strcmp(cmd, "/afbidutypos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			FBIDutyPosition[X] = x;
			FBIDutyPosition[Y] = y;
			FBIDutyPosition[Z] = z;
			FBIDutyPosition[World] = GetPlayerVirtualWorld(playerid);
			FBIDutyPosition[Interior] = GetPlayerInterior(playerid);
			FBIDutyPosition[Angle] = angle;
            MoveStreamPickup(FBIDutyPosition[PickupID],FBIDutyPosition[X],FBIDutyPosition[Y],FBIDutyPosition[Z]);
			LokasyonKaydet2();
			BilgiMesajiGonder(playerid, "F.B.I iþ baþý pozisyonunu belirlediniz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	
  	if(strcmp(cmd, "/apolicegunpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
	  		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			PoliceGunPosition[X] = x;
			PoliceGunPosition[Y] = y;
			PoliceGunPosition[Z] = z;
			PoliceGunPosition[World] = GetPlayerVirtualWorld(playerid);
			PoliceGunPosition[Interior] = GetPlayerInterior(playerid);
			PoliceGunPosition[Angle] = angle;
            MoveStreamPickup(PoliceGunPosition[PickupID],PoliceGunPosition[X],PoliceGunPosition[Y],PoliceGunPosition[Z]);
			LokasyonKaydet3();
			BilgiMesajiGonder(playerid, "Polis silah alma pozisyonunu belirlediniz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/acivilianspawn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
	  		new Float:angle;
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			CivilianSpawn[X] = x;
			CivilianSpawn[Y] = y;
			CivilianSpawn[Z] = z;
			CivilianSpawn[World] = GetPlayerVirtualWorld(playerid);
			CivilianSpawn[Interior] = GetPlayerInterior(playerid);
			CivilianSpawn[Angle] = angle;
			LokasyonKaydet();
			BilgiMesajiGonder(playerid, "Sivil insanlarýn spawn pozisyonunu belirlediniz.");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	
 	if(strcmp(cmd, "/afactionspawn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionspawn [Oluþum ID]");
					return 1;
				}
				new id = strval(tmp);
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x, y, z);
				DynamicFactions[id][fX] = x;
				DynamicFactions[id][fY] = y;
				DynamicFactions[id][fZ] = z;
				FactionKaydet(id);
				if(id == 4)
				{
                    MoveStreamPickup(AracPickup,x,y,z);
				}
				format(string, sizeof(string), "%d ID'li organizasyonun spawn pozisyonunu ayarladýnýz.", id);
				BilgiMesajiGonder(playerid, string);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aresetfaction", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/aresetfaction [Oluþum ID]");
					return 1;
				}
				new factionid = strval(tmp);
				new rank;
				format(string, sizeof(string), "Oluþum %d",factionid);
				strmid(DynamicFactions[factionid][fName], string, 0, strlen(string), 255);
				DynamicFactions[factionid][fX] = 0.0;
				DynamicFactions[factionid][fY] = 0.0;
				DynamicFactions[factionid][fZ] = 0.0;
				DynamicFactions[factionid][fBank] = 0;
				rank = 1; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank1], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rutbe %d",rank); strmid(DynamicFactions[factionid][fRank2], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank3], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank4], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank5], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank6], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank7], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank8], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank9], string, 0, strlen(string), 255);
				rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank10], string, 0, strlen(string), 255);
				DynamicFactions[factionid][fType] = 0;
				DynamicFactions[factionid][fSkin1] = 0;
				DynamicFactions[factionid][fSkin2] = 0;
				DynamicFactions[factionid][fSkin3] = 0;
				DynamicFactions[factionid][fSkin4] = 0;
				DynamicFactions[factionid][fSkin5] = 0;
				DynamicFactions[factionid][fSkin6] = 0;
				DynamicFactions[factionid][fSkin7] = 0;
				DynamicFactions[factionid][fSkin8] = 0;
				DynamicFactions[factionid][fSkin9] = 0;
				DynamicFactions[factionid][fSkin10] = 0;
				DynamicFactions[factionid][fJoinRank] = 0;
				DynamicFactions[factionid][fUseSkins] = 0;
				DynamicFactions[factionid][fRankAmount] = 0;
				DynamicFactions[factionid][fUseColor] = 0;
				format(string, sizeof(string), "0xFFFFFFFF");
				strmid(DynamicFactions[factionid][fColor], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%d ID'li organizasyonu sýfýrladýnýz.", factionid);
				BilgiMesajiGonder(playerid, string);
				FactionKaydet(factionid);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	
 	if(strcmp(cmd, "/afactioncolor", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactioncolor [Oluþum ID] [Hex kodlarý]");
					return 1;
				}
				new id = strval(tmp);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/afactioncolor [Oluþum ID] [Hex kodlarý]");
					return 1;
				}
				if(strfind( result , "|" , true ) == -1)
    			{
		   			strmid(DynamicFactions[id][fColor], (result), 0, strlen((result)), 128);
					format(string, sizeof(string), "%d ID'li organizasyonun rengini %s yaptýnýz.", id,(result));
					BilgiMesajiGonder(playerid, string);
					FactionKaydet(id);
				}
				else
				{
				    HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactionname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionname [Oluþum ID] [Oluþum ismi]");
					return 1;
				}
				new id = strval(tmp);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/afactionname [Oluþum ID] [Oluþum ismi]");
					return 1;
				}
				if(strfind( result , "|" , true ) == -1 && strfind( result , "_" , true ) == -1)
    			{
					new query[128];
					format(query, sizeof(query), "SELECT * FROM `factionlar` WHERE `fname` = '%s'", result);
					mysql_query(query);
					mysql_store_result();
				 	if(mysql_num_rows() > 0)
					{
					    HataMesajiGonder(playerid, "Bu isimde bir oluþum bulunmaktadýr.");
					    return 1;
					}
		   			strmid(DynamicFactions[id][fName], (result), 0, strlen((result)), 128);
					format(string, sizeof(string), "%d ID'li organizasyonun ismini %s yaptýnýz.", id,(result));
					BilgiMesajiGonder(playerid, string);
					FactionKaydet(id);
				}
				else
				{
				    HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
  	if(strcmp(cmd, "/agotofaction", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/agotofaction [Oluþum ID]");
					return 1;
				}
				new id = strval(tmp);
				new form[128];
				SetPlayerPos(playerid,DynamicFactions[id][fX],DynamicFactions[id][fY],DynamicFactions[id][fZ]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				format(form, sizeof(form), "%d ID'li organizasyona ýþýnlandýnýz.", id);
				BilgiMesajiGonder(playerid, form);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactiontype", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactiontype [Oluþum ID] [Oluþum tipi]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactiontype [Oluþum ID] [Oluþum tipi]");
					return 1;
				}
				new id2;
				new form[128];
				id2 = strval(tmp);
				DynamicFactions[id][fType] = id2;
				format(form, sizeof form, "%d ID'li organizasyonunun tipini %d yaptýnýz.", id,id2);
				BilgiMesajiGonder(playerid, form);
				FactionKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactionjoinrank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionjoinrank [Oluþum ID] [Organizasyona giriþ rütbesi]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
      				KullanimMesajiGonder(playerid, "/afactionjoinrank [Oluþum ID] [Organizasyona giriþ rütbesi]");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				if(id2 >= 2 && id2 <= 10)
				{
					new form[128];
	  				DynamicFactions[id][fJoinRank] = id2;
					format(form, sizeof form, "%d ID'li organizasyonun giriþ rütbesini %d yaptýnýz.", id,id2);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else
				{
					HataMesajiGonder(playerid, "Rütbe 2'den küçük, 10'dan büyük olamaz");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactionbank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionbank [Oluþum ID] [Oluþum banka parasý]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionbank [Oluþum ID] [Oluþum banka parasý]");
					return 1;
				}
				new id2;
				new form[128];
				id2 = strval(tmp);
				DynamicFactions[id][fBank] = id2;
				format(form, sizeof form, "%d ID'li organizasyonun bankadaki parasýný %d yaptýnýz.", id,id2);
				BilgiMesajiGonder(playerid, form);
				FactionKaydet(id);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactionrankamount", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionrankamount [Oluþum ID] [Oluþum rütbe sayýsý]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionrankamount [Oluþum ID] [Oluþum rütbe sayýsý]");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				if(id2 >= 2 && id2 <= 10)
				{
	  				DynamicFactions[id][fRankAmount] = id2;
					new form[128];
					format(form, sizeof form, "%d ID'li organizasyonun rütbe sayýsýný %d yaptýnýz.", id,id2);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactionrankname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionrankname [Oluþum ID] [Rütbe ID] [Rütbe ismi]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionrankname [Oluþum ID] [Rütbe ID] [Rütbe ismi]");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/afactionrankname [Oluþum ID] [Rütbe ID] [Rütbe ismi]");
					return 1;
				}
  				if(strfind( result , "|" , true ) == -1)
    			{
					if(id2 == 1)
					{
			   			strmid(DynamicFactions[id][fRank1], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
						FactionKaydet(id);
					}
					else if(id2 == 2)
					{
						strmid(DynamicFactions[id][fRank2], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
						FactionKaydet(id);
					}
					else if(id2 == 3)
					{
				   		strmid(DynamicFactions[id][fRank3], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
						FactionKaydet(id);
					}
					else if(id2 == 4)
					{
				   		strmid(DynamicFactions[id][fRank4], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
       					FactionKaydet(id);
					}
					else if(id2 == 5)
					{
				   		strmid(DynamicFactions[id][fRank5], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
       					FactionKaydet(id);
					}
					else if(id2 == 6)
					{
				   		strmid(DynamicFactions[id][fRank6], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
       					FactionKaydet(id);
					}
					else if(id2 == 7)
					{
				  		strmid(DynamicFactions[id][fRank7], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
       					FactionKaydet(id);
					}
					else if(id2 == 8)
					{
				   		strmid(DynamicFactions[id][fRank8], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
       					FactionKaydet(id);
					}
					else if(id2 == 9)
					{
				   		strmid(DynamicFactions[id][fRank9], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
       					FactionKaydet(id);
					}
					else if(id2 == 10)
					{
				   		strmid(DynamicFactions[id][fRank10], (result), 0, strlen((result)), 128);
						format(string, sizeof(string), "%d ID'li organizasyonun %d ID'li rütbesini %s yaptýnýz.", id,id2,result);
						BilgiMesajiGonder(playerid, string);
       					FactionKaydet(id);
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactionskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionskin [Oluþum ID] [Rütbe ID] [Rütbe skini]");
					return 1;
				}
				new id;
				id = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionskin [Oluþum ID] [Rütbe ID] [Rütbe skini]");
					return 1;
				}
				new id2;
				id2 = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionskin [Oluþum ID] [Rütbe ID] [Rütbe skini]");
					return 1;
				}
				new id3;
				id3 = strval(tmp);
				if(id2 == 1)
				{
	  				DynamicFactions[id][fSkin1] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 2)
				{
	  				DynamicFactions[id][fSkin2] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 3)
				{
	  				DynamicFactions[id][fSkin3] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 4)
				{
	  				DynamicFactions[id][fSkin4] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 5)
				{
	  				DynamicFactions[id][fSkin5] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 6)
				{
	  				DynamicFactions[id][fSkin6] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 7)
				{
	  				DynamicFactions[id][fSkin7] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 8)
				{
	  				DynamicFactions[id][fSkin8] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 9)
				{
	  				DynamicFactions[id][fSkin9] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
				else if(id2 == 10)
				{
	  				DynamicFactions[id][fSkin10] = id3;
					new form[128];
					format(form, sizeof form, "%d ID'li factionun %d ID'li rütbesinin skinini %d yaptýnýz.", id,id2,id3);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/afactionusecolor", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionusecolor [Oluþum ID]");
					return 1;
				}
				new id;
				id = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionusecolor [Oluþum ID]");
					return 1;
				}
				if(DynamicFactions[id][fUseColor])
				{
	  				DynamicFactions[id][fUseColor] = 0;
					new form[128];
					format(form, sizeof form, "%d ID'li organizasyonun rengini kapattýnýz.", id);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
					   	if(IsPlayerConnected(i))
				    	{
							if(PlayerInfo[i][pFaction] == id)
							{
								SetPlayerColor(i,COLOR_CIVILIAN);
							}
					   	}
				   	}
				}
				else
				{
	  				DynamicFactions[id][fUseColor] = 1;
					new form[128];
					format(form, sizeof form, "%d ID'li organizasyonun rengini açtýnýz.", id);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
					   	if(IsPlayerConnected(i))
				    	{
							if(PlayerInfo[i][pFaction] == id)
							{
								SetPlayerColor(i,COLOR_CIVILIAN);
							}
					   	}
				   	}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/afactionuseskins", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionuseskins [Oluþum ID]");
					return 1;
				}
				new id;
				id = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionuseskins [Oluþum ID]");
					return 1;
				}
				if(DynamicFactions[id][fUseSkins])
				{
	  				DynamicFactions[id][fUseSkins] = 0;
					new form[128];
					format(form, sizeof form, "%d ID'li organizasyonun skinlerini açtýnýz.", id);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);

				}
				else
				{
	  				DynamicFactions[id][fUseSkins] = 1;
					new form[128];
					format(form, sizeof form, "%d ID'li organizasyonun skinlerini kapattýnýz.", id);
					BilgiMesajiGonder(playerid, form);
					FactionKaydet(id);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
					   	if(IsPlayerConnected(i))
				      	{
							if(PlayerInfo[i][pFaction] == id)
							{
								SetPlayerToFactionSkin(i);
							}
				     	}
				   	}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd,"/raporiptal",true) == 0)
	{
	    if(RaporGonderdi[playerid] != 0)
	    {
	        new id;
	        id = RaporGonderdi[playerid];
	        for(new a; a < MAX_PLAYERS; a++)
	        {
	            if(a > id)
	            {
	                strmid(Rapor[a-1][rAtan],Rapor[a][rAtan],0,30,MAX_PLAYER_NAME);
		        	strmid(Rapor[a-1][rYazi],Rapor[a][rYazi],0,strlen(Rapor[a][rYazi]),60);
					Rapor[a-1][rPID] = Rapor[a][rPID];
					Rapor[a-1][rRapor] = Rapor[a][rRapor];
					if(Rapor[a][rRapor] == 0)
		            {
		                break;
		            }
    			}
		   	}
		   	BilgiMesajiGonder(playerid,"Raporunuz kaldýrýldý.");
		   	return 1;
		}
		else
		{
		    HataMesajiGonder(playerid,"Aktif bir raporunuz yok.");
		    return 1;
		}
	}
	
	if(strcmp(cmd,"/raporkontrol",true) == 0 || strcmp(cmd,"/raporlar",true) == 0)
	{
	    new id;
	    id = Rapor[1][rPID];
	    if(strcmp(Rapor[1][rAtan],GetPlayerNameEx(id),true) == 0 && Rapor[1][rRapor] == 1)
	    {
		    new gonder[1028];
		    format(gonder,sizeof(gonder),"%s isimli yönetici raporunuzu inceliyor.",GetPlayerNameEx(playerid));
		    RaporGonderdi[id] = 0;
		    BilgiMesajiGonder(id,gonder);
		    format(gonder,sizeof(gonder),"{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n\n\
			{F68F00}Ýsim: {E6E6E6}%s \n{F68F00}ID: {E6E6E6}%d \n{F68F00}PlayerID: {E6E6E6}%d \n{F68F00}Rapor: {E6E6E6}%s\
			\n\n{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",GetPlayerNameEx(id),PlayerInfo[id][pSQLid],id,Rapor[1][rYazi]);
		    ShowPlayerDialog(playerid, 544, DIALOG_STYLE_MSGBOX, "Rapor Kontrolü",gonder,"Kapat","");
		    for(new a; a < MAX_RAPOR+1; a++)
		    {
		        if(a != 0 && a != 1)
		        {
		        	strmid(Rapor[a-1][rAtan],Rapor[a][rAtan],0,30,MAX_PLAYER_NAME);
		        	strmid(Rapor[a-1][rYazi],Rapor[a][rYazi],0,strlen(Rapor[a][rYazi]),60);
					Rapor[a-1][rPID] = Rapor[a][rPID];
					Rapor[a-1][rRapor] = Rapor[a][rRapor];
					if(Rapor[a][rRapor] == 0)
		            {
		                break;
		            }
				}
			}
			return 1;
		}
		else
		{
		    if(Rapor[1][rRapor] == 0)
		    {
		        HataMesajiGonder(playerid,"Þuanda hiç rapor yok.");
		        return 1;
			}
			else
			{
				HataMesajiGonder(playerid,"Raporu atan kiþi sunucudan ayrýlmýþ, raporu silindi.");
				for(new a; a < MAX_RAPOR+1; a++)
			    {
			        if(a != 0 && a != 1)
			        {
			        	strmid(Rapor[a-1][rAtan],Rapor[a][rAtan],0,30,MAX_PLAYER_NAME);
			        	strmid(Rapor[a-1][rYazi],Rapor[a][rYazi],0,strlen(Rapor[a][rYazi]),60);
						Rapor[a-1][rPID] = Rapor[a][rPID];
						Rapor[a-1][rRapor] = Rapor[a][rRapor];
						if(Rapor[a][rRapor] == 0)
			            {
			                break;
			            }
					}
				}
				return 1;
			}
		}
	}
	
	if(strcmp(cmd, "/rapor",true) == 0)
	{
	    new id;
	    for(new i; i < MAX_RAPOR+1; i++)
	    {
	        if(Rapor[i][rRapor] == 0 && i != 0)
	        {
	            id = i;
	            break;
	        }
	    }
	    if(id == 0)
	    {
	        HataMesajiGonder(playerid,"Þuanda rapor gönderemiyorsunuz, daha sonra deneyin.");
	        return 1;
	    }
	    else if(id != 0)
	    {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[65];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/rapor [Rapor Ýçeriði]");
					return 1;
				}
				if(Muted[playerid])
				{
					HataMesajiGonder(playerid, "Susturulduðunuz için bu komutu kullanamazsýnýz.");
					return 1;
				}
				if(RaporGonderdi[playerid] != 1)
				{
				    if(strlen(result) <= 60)
				    {
						strmid(Rapor[id][rYazi],result,0,60,128);
						strmid(Rapor[id][rAtan],GetPlayerNameEx(playerid),0,30,MAX_PLAYER_NAME);
						Rapor[id][rRapor] = 1;
						RaporGonderdi[playerid] = id;
						Rapor[id][rPID] = playerid;
						format(string,sizeof(string),"Bir rapor gönderdiniz. Sýranýz: %d",id);
						BilgiMesajiGonder(playerid,string);
						format(string,sizeof(string),"{FF4000}[RAPOR]:(%s(%d))-%s",GetPlayerNameEx(playerid),playerid,result);
						YoneticiMesajiGonder(string);
						return 1;
					}
					else
					{
					    HataMesajiGonder(playerid,"Raporunuz en fazla 60 karakter içerebilir.");
					    return 1;
					}
				}
				else
				{
				    HataMesajiGonder(playerid,"Zaten aktif bir raporunuz var, iptal etmek için: {86D060}/raporiptal{E6E6E6} yazabilirsiniz.");
				    return 1;
				}
		}
	}
	            
	
 	if(strcmp(cmd, "/banaccount", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/banaccount [ID] [Gerekçe]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							KullanimMesajiGonder(playerid, "/banaccount [ID] [Gerekçe]");
							return 1;
						}
						if(PlayerInfo[giveplayerid][pAdmin] >= 5)
						{
							HataMesajiGonder(playerid, "Owner'larý yasaklayamazsýnýz.");
						    return 1;
						}
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							format(string,sizeof(string),"%s,%s tarafýndan sunucudaki karakteri yasaklandý. {CC0000}Gerekçe:{FF0000} %s",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid),result);
							CezaMesajiGonder(i, string);
						}
						AccountBanLog(string);
						PlayerInfo[giveplayerid][pBanned] = 1;
						new oyuncuismi[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, oyuncuismi, 24);
						OnPlayerDataSave(giveplayerid);
						Kick(giveplayerid);
						return 1;
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
			    YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ck", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ck [ID]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(giveplayerid))
			    {
					if(PlayerInfo[giveplayerid][pAdmin] >= 5)
					{
						HataMesajiGonder(playerid, "Owner'larý CK edemezsiniz.");
		    			return 1;
					}
					if(PlayerInfo[giveplayerid][pCK] == 1)
					{
						PlayerInfo[giveplayerid][pCK] = 3;
						BilgiMesajiGonder(playerid,"Yönetici tarafýndan karakterinizin CK iþlemi tamamlandý.");
						BilgiMesajiGonder(playerid,"Karakteriniz kilitleniyor, tekrar kayýt olabilirsiniz.");
						Kick(playerid);
					}
				}
	            else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
   			else
			{
			    YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ban [ID] [Gerekçe]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							KullanimMesajiGonder(playerid, "/ban [ID] [Gerekçe]");
							return 1;
						}
						if(PlayerInfo[giveplayerid][pAdmin] >= 5)
						{
							HataMesajiGonder(playerid, "Owner'larý yasaklayamazsýnýz.");
						    return 1;
						}
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							format(string,sizeof(string),"%s,%s tarafýndan sunucudan yasaklandý. {CC0000}Sebep:{FFFFFF} %s",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid),result);
							CezaMesajiGonder(i, string);
						}
						BanLog(string);
						PlayerInfo[giveplayerid][pBanned] = 1;
						OnPlayerDataSave(giveplayerid);
						Ban(giveplayerid);
						return 1;
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
				YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/afactionkick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/afactionkick [ID] [Gerekçe]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
                            KullanimMesajiGonder(playerid, "/afactionkick [ID] [Gerekçe]");
							return 1;
						}
						new form[128];
						format(form,sizeof(form),"%s sizi organizasyonunuzdan çýkarttý. Gerekçe: %s ",GetPlayerNameEx(playerid),(result));
						BilgiMesajiGonder(giveplayerid, form);
						format(form,sizeof(form),"%s adlý oyuncuyu organizasyonundan çýkarttýnýz. Gerekçe: %s ",GetPlayerNameEx(giveplayerid),(result));
						BilgiMesajiGonder(playerid, form);
						PlayerInfo[giveplayerid][pFaction] = 255;
						PlayerInfo[giveplayerid][pSpawn] = 4;
						SetPlayerSpawn(giveplayerid);
						return 1;
					}
				}
	            else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
				YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/isbasi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 || DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
				if (PlayerToPoint(5.0, playerid,PoliceDutyPosition[X],PoliceDutyPosition[Y],PoliceDutyPosition[Z]) || PlayerToPoint(5.0, playerid,FBIDutyPosition[X],FBIDutyPosition[Y],FBIDutyPosition[Z]))
				{
				    if(GetPlayerVirtualWorld(playerid) == PoliceDutyPosition[World] || GetPlayerVirtualWorld(playerid) == FBIDutyPosition[World])
				    {
						if(CopOnDuty[playerid] == 0)
				        {
							CopOnDuty[playerid] = 1;
							SetPlayerToFactionSkin(playerid);
							if(PlayerInfo[playerid][pFaction] != 2)
							{
        						if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 1)
								{
									new string1[256];
									new string2[256];
									if(PlayerInfo[playerid][pRank] == 1 || PlayerInfo[playerid][pRank] == 2)
									{
										format(string2, sizeof(string2), "\nÖzel Skin");
									}
									format(string1, sizeof(string1), "Skin 1\nSkin 2\nSkin 3\n%s",string2);
									ShowPlayerDialog(playerid, 851, DIALOG_STYLE_LIST, "S.D skin seçimi",string1, "Seç", "Kapat");
								}
								if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 2)
								{
									ShowPlayerDialog(playerid, 852, DIALOG_STYLE_LIST, "S.D skin seçimi","Skin 1\nSkin 2\nSkin 3", "Seç", "Kapat");
								}
								if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 1)
								{
									SetPlayerSkin(playerid, 93);
								}
								if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 2)
								{
									SetPlayerSkin(playerid, 76);
								}
								PlayerActionMessage(playerid,15.0,"polis kimliðini dolaptan alýr.");
								return 1;
							}
							else
							{
							    SetPlayerToFactionSkin(playerid);
							    PlayerActionMessage(playerid,15.0,"M.Ý.T kimliðini dolaptan alýr.");
								return 1;
							}
						}
						else
						{
						    if(PlayerInfo[playerid][pFaction] != 2)
						    {
								CopOnDuty[playerid] = 0;
								ResetPlayerWeapons(playerid);
								SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
								PlayerActionMessage(playerid,15.0,"rozetini dolabýna býrakýr.");
								return 1;
							}
							else
							{
								CopOnDuty[playerid] = 0;
								SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
								PlayerActionMessage(playerid,15.0,"F.B.I kimliðini dolabýna býrakýr.");
								return 1;
							}
						}
					}
				}
    			else
				{
					HataMesajiGonder(playerid, "Soyunma odasýnda deðilsiniz.");
				}
			}
   			else
			{
				HataMesajiGonder(playerid, "Bu komutu devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
	
 	if(strcmp(cmd, "/arananlar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 ||DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
					if(CopOnDuty[playerid] == 0)
					{
						HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
						return 1;
					}
					format(string, sizeof(string),"Sicil Sorgulat\nAraç Sorgulat");
					ShowPlayerDialog(playerid, 540,DIALOG_STYLE_LIST,"Polis veritabaný",string,"Seç","Kapat");
					return 1;
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/kelepcele", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 ||DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/kelepcele [ID]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(PlayerCuffed[giveplayerid] == 1)
					    {
							HataMesajiGonder(playerid, "Kelepçelemek istediðiniz oyuncu zaten kelepçelenmiþ.");
					        return 1;
					    }
					    if(CopOnDuty[playerid] == 0)
						{
							HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
							return 1;
						}
	     				if(GetPVarInt(playerid, "Holding") != 0)
						{
							HataMesajiGonder(playerid, "Birden çok kiþiyi kelepçeleyemezsiniz.");
							return 1;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid)
							{
								HataMesajiGonder(playerid, "Kendi kendinizi kelepçeleyemezsiniz.");
								return 1;
							}
        					format(string, sizeof(string), "%s tarafýndan kelepçelendiniz.", GetPlayerNameEx2(playerid, giveplayerid));
							BilgiMesajiGonder(giveplayerid, string);
							format(string, sizeof(string), "%s adlý kiþiyi kelepçelediniz.", GetPlayerNameEx2(giveplayerid, playerid));
							BilgiMesajiGonder(playerid, string);
							PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"kelepçeler.");
							SetPVarInt(playerid, "Holding", giveplayerid);
							SetPVarInt(giveplayerid, "Stopping", playerid);
							SetPVarInt(giveplayerid, "CuffTimer", SetTimerEx("PolisTakip", 1000, 1, "i", giveplayerid));
							PlayerCuffed[giveplayerid] = 1;
						}
						else
						{
						    HataMesajiGonder(playerid, "Kelepçelemek istediðiniz oyuncunun yakýnýnda olmalýsýnýz.");
						}
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/kelepcecoz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 ||DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/kelepcecoz [ID]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(PlayerCuffed[giveplayerid] == 0)
					    {
					        HataMesajiGonder(playerid, "Oyuncu zaten kelepçeli deðil.");
					        return 1;
					    }
					    if(CopOnDuty[playerid] == 0)
						{
							HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
							return 1;
						}
						if(GetPVarInt(playerid,"Holding") != giveplayerid)
						{
					        HataMesajiGonder(playerid, "Kelepçelemediðiniz oyuncularýn kelepçesini çözemezsiniz.");
					        return 1;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid)
							{
								HataMesajiGonder(playerid, "Kendi kendinizin kelepçesini açamazsýnýz.");
								return 1;
							}
        					format(string, sizeof(string), "Kelepçeleriniz %s tarafýndan açýldý.", GetPlayerNameEx2(playerid, giveplayerid));
							BilgiMesajiGonder(giveplayerid, string);
							format(string, sizeof(string), "%s adlý kiþinin kelepçelerini açtýnýz.", GetPlayerNameEx2(giveplayerid, playerid));
							BilgiMesajiGonder(playerid, string);
							PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"kelepçelerini çözer.");
							KillTimer(GetPVarInt(GetPVarInt(playerid, "Holding"), "CuffTimer"));
							SetPVarInt(GetPVarInt(playerid, "Holding"), "Stopping", 0);
							ClearAnimations(GetPVarInt(playerid, "Holding"));
							SetPVarInt(playerid, "Holding", 0);
							PlayerCuffed[giveplayerid] = 0;
						}
						else
						{
						    HataMesajiGonder(playerid, "Kelepçelemek istediðiniz oyuncunun yakýnýnda olmalýsýnýz.");
						}
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
  	if(strcmp(cmd,"/uzeriniara",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/uzeriniara [ID]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
						{
							HataMesajiGonder(playerid, "Kendi kendinizi arayamazsýnýz.");
							return 1;
						}
					    if(CopOnDuty[playerid] == 0)
						{
							HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
							return 1;
						}
						new string5[512];
						format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi\nüzerinizi aramak istiyor\nne cevap vermek ister misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playerid, giveplayerid));
				  		ShowPlayerDialog(giveplayerid, 975,DIALOG_STYLE_MSGBOX,"Üzerini arama",string5,"Kabul et","Reddet");
						UzeriniArama[giveplayerid] = playerid;
						PlayerPlayerActionMessage(playerid, giveplayerid, 15.0, "üzerini aramaya çalýþýr.");
					}
					else
					{
					    HataMesajiGonder(playerid, "Üstünü aramaya çalýþtýðýnýz kiþiye yakýn olmalýsýnýz.");
					}
				}
			}
	        else
	        {
	            HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
	        }
		}
	    return 1;
 	}
	if(strcmp(cmd, "/elkoy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 || DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
	        {
	            new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					KullanimMesajiGonder(playerid, "/elkoy [Eþya ismi] [ID]");
			  		GenelMesajGonder(playerid, "arabaehliyeti, ucuslisansi, silahlisansi, uyusturucu, materyal, silah");
					return 1;
				}
			    if(strcmp(x_nr,"arabaehliyeti",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/elkoy arabaehliyeti [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "%s adlý kiþinin araba ehliyetine el koydunuz.", GetPlayerNameEx2(giveplayerid, playerid));
						        BilgiMesajiGonder(playerid, string);
						        format(string, sizeof(string), "%s adlý kiþi araç ehliyetinize el koydu.", GetPlayerNameEx2(playerid, giveplayerid));
						        BilgiMesajiGonder(giveplayerid, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    HataMesajiGonder(playerid, "Bu komutu kullanmak için, kiþiye yakýn olmalýsýnýz.");
							}
					    }
					}
					else
					{
					    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
				else if(strcmp(x_nr,"ucuslisansi",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/elkoy ucuslisansi [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "%s adlý kiþinin uçuþ lisansýna el koydunuz.", GetPlayerNameEx2(giveplayerid, playerid));
						        BilgiMesajiGonder(playerid, string);
						        format(string, sizeof(string), "%s adlý kiþi uçuþ lisansýnýza el koydu.", GetPlayerNameEx2(playerid, giveplayerid));
						        BilgiMesajiGonder(giveplayerid, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    HataMesajiGonder(playerid, "Bu komutu kullanmak için, kiþiye yakýn olmalýsýnýz.");
							}
					    }
					}
					else
					{
					    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
				else if(strcmp(x_nr,"silahlisansi",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/elkoy silahlisansi [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "%s adlý kiþinin silah lisansýna el koydunuz.", GetPlayerNameEx2(giveplayerid, playerid));
						        BilgiMesajiGonder(playerid, string);
						        format(string, sizeof(string), "%s adlý kiþi silah lisansýnýza el koydu.", GetPlayerNameEx2(playerid, giveplayerid));
						        BilgiMesajiGonder(giveplayerid, string);
						        PlayerInfo[giveplayerid][pWepLic] = 0;
					        }
							else
							{
							    HataMesajiGonder(playerid, "Bu komutu kullanmak için, kiþiye yakýn olmalýsýnýz.");
							}
					    }
					}
					else
					{
					    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
				else if(strcmp(x_nr,"uyusturucu",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/elkoy uyusturucu [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "%s adlý kiþinin uyuþturucularýna el koydunuz.", GetPlayerNameEx2(giveplayerid, playerid));
						        BilgiMesajiGonder(playerid, string);
						        format(string, sizeof(string), "%s adlý kiþi uyuþturucularýnýza el koydu.", GetPlayerNameEx2(playerid, giveplayerid));
						        BilgiMesajiGonder(giveplayerid, string);
						        PlayerInfo[giveplayerid][pDrugs] = 0;
							}
							else
							{
							    HataMesajiGonder(playerid, "Bu komutu kullanmak için, kiþiye yakýn olmalýsýnýz.");
							}
					    }
					}
					else
					{
					    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
				else if(strcmp(x_nr,"materyal",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/elkoy materyal [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "%s adlý kiþinin materyallerine el koydunuz.", GetPlayerNameEx2(giveplayerid, playerid));
						        BilgiMesajiGonder(playerid, string);
						        format(string, sizeof(string), "%s adlý kiþi materyallerinize el koydu.", GetPlayerNameEx2(playerid, giveplayerid));
						        BilgiMesajiGonder(giveplayerid, string);
						        PlayerInfo[giveplayerid][pMaterials] = 0;
							}
							else
							{
							    HataMesajiGonder(playerid, "Bu komutu kullanmak için, kiþiye yakýn olmalýsýnýz.");
							}
					    }
					}
					else
					{
					    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
				else if(strcmp(x_nr,"silah",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/elkoy silah [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        format(string, sizeof(string), "%s adlý kiþinin silahlarýna el koydunuz.", GetPlayerNameEx2(giveplayerid, playerid));
						        BilgiMesajiGonder(playerid, string);
						        format(string, sizeof(string), "%s adlý kiþi silahlarýnýza el koydu.", GetPlayerNameEx2(playerid, giveplayerid));
						        BilgiMesajiGonder(giveplayerid, string);
						        ResetPlayerWeapons(giveplayerid);
						        new query[128];
								format(query, sizeof(query), "DELETE FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								format(query, sizeof(query), "INSERT INTO `osilah` (`ad`) VALUES ('%s')", GetPlayerNameSave(playerid));
								mysql_query(query);
								format(query, sizeof(query), "DELETE FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
								mysql_query(query);
								format(query, sizeof(query), "INSERT INTO `ssayi` (`ad`) VALUES ('%s')", GetPlayerNameSave(playerid));
								mysql_query(query);
							}
							else
							{
							    HataMesajiGonder(playerid, "Bu komutu kullanmak için, kiþiye yakýn olmalýsýnýz.");
							}
					    }
					}
					else
					{
					    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
				else
				{
	                HataMesajiGonder(playerid, "Hatalý bir eþya ismi girdiniz.");
				}
	        }
	        else
	        {
				HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/destekekip", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 ||DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
			    if(DestekEkip[playerid] == 1)
			    {
					if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
					{
					    for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
						{
							if(DynamicFactions[PlayerInfo[oyuncu][pFaction]][fType] == 1)
							{
							    if(playerid != oyuncu)
							    {
							        DestekEkip[playerid] = 0;
									DisablePlayerCheckpoint(oyuncu);
									format(string, sizeof(string), "%s adlý görevli istediði destek ekibi iptal etti.", GetPlayerNameEx2(playerid, oyuncu));
									BilgiMesajiGonder(oyuncu, string);
								}
							}
						}
						BilgiMesajiGonder(playerid, "Ýstediðiniz destek ekibi iptal ettiniz.");
						return 1;
					}
					if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
					{
					    for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
						{
							if(DynamicFactions[PlayerInfo[oyuncu][pFaction]][fType] == 2)
							{
							    if(playerid != oyuncu)
							    {
							        DestekEkip[playerid] = 0;
									DisablePlayerCheckpoint(oyuncu);
									format(string, sizeof(string), "%s adlý görevli istediði destek ekibi iptal etti.", GetPlayerNameEx2(playerid, oyuncu));
									BilgiMesajiGonder(oyuncu, string);
								}
							}
						}
					}
					BilgiMesajiGonder(playerid, "Ýstediðiniz destek ekibi iptal ettiniz.");
					return 1;
			    }
			    new sayac = 0;
				if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
				{
				    for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
					{
						if(DynamicFactions[PlayerInfo[oyuncu][pFaction]][fType] == 1)
						{
						    if(playerid != oyuncu)
						    {
								new Float:pX, Float:pY, Float:pZ;
								GetPlayerPos(playerid, pX, pY, pZ);
								SetPlayerCheckpoint(oyuncu, pX, pY, pZ, 5.0);
								format(string, sizeof(string), "%s adlý görevli bulunduðu yere destek ekip çaðýrýyor.", GetPlayerNameEx2(playerid, oyuncu));
								BilgiMesajiGonder(oyuncu, string);
								DestekEkip[playerid] = 1;
								gPlayerCheckpointStatus[oyuncu] = CHECKPOINT_DESTEKEKIP;
								sayac++;
							}
						}
					}
					if(sayac > 0)
					{
					    BilgiMesajiGonder(playerid, "Destek ekip çaðýrdýnýz.");
					}
					else
					{
						HataMesajiGonder(playerid, "Destek ekip için gelecek aktif kimse bulunmamaktadýr.");
					}
				}
				if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
				{
				    for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
					{
						if(DynamicFactions[PlayerInfo[oyuncu][pFaction]][fType] == 2)
						{
						    if(playerid != oyuncu)
						    {
								new Float:pX, Float:pY, Float:pZ;
								GetPlayerPos(playerid, pX, pY, pZ);
								SetPlayerCheckpoint(oyuncu, pX, pY, pZ, 5.0);
								format(string, sizeof(string), "%s adlý görevli bulunduðu yere destek ekip çaðýrýyor.", GetPlayerNameEx2(playerid, oyuncu));
								BilgiMesajiGonder(oyuncu, string);
								DestekEkip[playerid] = 1;
								gPlayerCheckpointStatus[oyuncu] = CHECKPOINT_DESTEKEKIP;
								sayac++;
							}
						}
					}
					if(sayac > 0)
					{
					    BilgiMesajiGonder(playerid, "Destek ekip çaðýrdýnýz.");
					}
					else
					{
						HataMesajiGonder(playerid, "Destek ekip için gelecek aktif kimse bulunmamaktadýr.");
					}
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/taser", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 ||DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
				if(CopOnDuty[playerid] == 0)
				{
					HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
					return 1;
				}
			    if(SigaraIciyor[playerid] == 1)
			    {
					HataMesajiGonder(playerid, "Zaten elinizde bir þey bulunuyor, önce onu bitirin.");
				    return 1;
			    }
			    if(TaserElinde[playerid] == 1)
			    {
					TaserElinde[playerid] = 0;
  					RemovePlayerAttachedObject(playerid, 1);
  					PlayerActionMessage(playerid, 15.0, "taserini beline asar.");
					return 1;
			    }
				TaserElinde[playerid] = 1;
      			SetPlayerAttachedObject(playerid, 1, 18642, 5, 0.12, 0.02, -0.05, 0, 0, 45,1,1,1);
      			PlayerActionMessage(playerid, 15.0, "belinden taserini alýr.");
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/cezakes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
			{
				if(CopOnDuty[playerid] == 0)
				{
					HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
					return 1;
				}
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/cezakes [ID] [Ücret] [Gerekçe]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/cezakes [ID] [Ücret] [Gerekçe]");
					return 1;
				}
				new moneys;
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 9999)
				{
					HataMesajiGonder(playerid, "Ücret $1'dan küçük, $9999'dan yüksek olamaz.");
					return 1;
				}
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[128];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								KullanimMesajiGonder(playerid, "/cezakes [ID] [Ücret] [Gerekçe]");
								return 1;
							}
							format(string, sizeof(string), "%s adlý oyuncuya %d$ ceza kestiniz. Gerekçe: %s", GetPlayerNameEx2(giveplayerid, playerid), moneys, (result));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý memur size %d$ ceza kesti. Gerekçe: %s", GetPlayerNameEx2(playerid, giveplayerid), moneys, (result));
							BilgiMesajiGonder(giveplayerid, string);
							TicketOffer[giveplayerid] = playerid;
							TicketMoney[giveplayerid] = moneys;
							new string5[512];
							format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi size\n%d$ kadar ceza kesti\nödemek ister misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playerid, giveplayerid), moneys);
				  			ShowPlayerDialog(giveplayerid, 974,DIALOG_STYLE_MSGBOX,"Ceza kesme",string5,"Kabul et","Reddet");
							return 1;
						}
						else
						{
							HataMesajiGonder(playerid, "Yakýnýnýzda kimse bulunmamaktadýr.");
						}
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tutukla", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
			{
		        if(!PlayerToPoint(15.0, playerid, PoliceArrestPosition[X],PoliceArrestPosition[Y],PoliceArrestPosition[Z]) || GetPlayerVirtualWorld(playerid) != PoliceArrestPosition[World])
				{
				    HataMesajiGonder(playerid, "Hapishanenin yanýnda deðilsiniz.");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				new time = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/tutukla [Dakika]");
					return 1;
				}
				new suspect = GetClosestPlayer(playerid);
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
					{
						format(string, sizeof(string), "%s adlý kiþiyi tutukladýnýz.", GetPlayerNameEx2(playerid, suspect));
						BilgiMesajiGonder(playerid, string);
						ResetPlayerWeapons(suspect);
					    SetPlayerInterior(suspect, 6);
						SetPlayerPos(suspect, 264.4079,77.6206,1001.0391);
						PlayerInfo[suspect][pJailTime] = time;
						format(string, sizeof(string), "Tutukladýnýz ! Süre: %d dakika.", PlayerInfo[suspect][pJailTime]);
						BilgiMesajiGonder(suspect, string);
						format(string, sizeof(string), "PolisCmd : %s adlý memur, %s adlý suçluyu tutukladý. Süre: %d dakika.",GetPlayerNameEx(playerid), GetPlayerNameEx(suspect), time);
		    			SendFactionTypeMessage(1, COLOR_LSPD, string);
						PlayerInfo[suspect][pJailed] = 1;
						WantedPoints[suspect] = 0;
						ResetPlayerWantedLevelEx(suspect);
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Yakýnýnýzda kimse bulunmamaktadýr.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/megafon", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new tmpcar = GetPlayerVehicleID(playerid);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			new string2[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "[/m]egafon [Megafon duyurusu]");
				return 1;
			}
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
			    	HataMesajiGonder(playerid, "Bu komutu aracýn içerisinde kullanabilirsiniz.");
					return 1;
			    }
				if(CopOnDuty[playerid] == 0)
				{
					HataMesajiGonder(playerid, "Ýþ baþýnda deðilken bu komutu kullanamazsýnýz.");
					return 1;
				}
				if(DynamicCars[tmpcar][FactionCar] != PlayerInfo[playerid][pFaction])
				{
					HataMesajiGonder(playerid, "Þuan oluþum aracýnýn içerisinde deðilsiniz.");
					return 1;
				}
				format(string, sizeof(string), "[MEGAFON] (( ");
				format(string2, sizeof(string2), " )): %s", result);
				ProxDetector2(60.0, playerid, string,string2,COLOR_LSPD,COLOR_LSPD,COLOR_LSPD,COLOR_LSPD,COLOR_LSPD);
				return 1;
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/radyo", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
	   	if (DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 || DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2 || DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 3)
   		{
		    if(IsPlayerConnected(playerid))
		    {
				new wstring[128];
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "[/r]adyo [Radyo yazýsý]");
					return 1;
				}
				if(Muted[playerid])
				{
					HataMesajiGonder(playerid, "Susturulduðunuz için bu komutu kullanamazsýnýz.");
					return 1;
				}
				format(wstring, sizeof(wstring), ": %s, tamam.",result);
				SendFactionMessage(playerid, PlayerInfo[playerid][pFaction], COLOR_YELLOW, wstring);
				format(string, sizeof(string), "[DEVLET TELSÝZ][%s] %s%s",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], GetPlayerNameEx(playerid), wstring);
				FactionChatLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/telsiz", true) == 0 || strcmp(cmd, "/t", true) == 0)
	{
		if(PlayerInfo[playerid][pTelsiz] == 0)
		{
	     	HataMesajiGonder(playerid, "Telsiziniz bulunmamaktadýr, elektronikçiden alabilirsiniz.");
			return 1;
		}
		if(PlayerInfo[playerid][pFrekans] == 0)
		{
		    HataMesajiGonder(playerid, "Frekansýnýz ayarlanmamýþ, ayarlamak için: {86D060}/frekans.");
			return 1;
		}
		if(Muted[playerid])
		{
			HataMesajiGonder(playerid, "Susturulduðunuz için bu komutu kullanamazsýnýz.");
			return 1;
		}
        else
        {
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pFrekans] == PlayerInfo[playerid][pFrekans])
					{
					    if(gPlayerLogged[playerid] == 1)
					    {
							format(string, 256, "[TELSÝZ] (( %s )): %s", GetPlayerNameEx2(playerid, i), cmdtext[3]);
							SendClientMessage(i, COLOR_LIGHTRED, string);
							format(string, sizeof(string), "[ÖZEL TELSÝZ] %s: %s", GetPlayerNameEx(playerid), cmdtext[3]);
							FactionChatLog(string);
						}
					}
				}
			}
		}
		new string2[128];
		format(string, sizeof(string), "[TELSÝZ] (( ");
		format(string2, sizeof(string2), " )): %s", cmdtext[3]);
		ProxDetector2(15.0, playerid, string,string2,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return 1;
	}
	if (strcmp("/frekans", cmd, true) == 0)
	{
        if(PlayerInfo[playerid][pFrekansAyarlayici] == 0)
		{
	     	HataMesajiGonder(playerid, "Frekans ayarlayýcýnýz bulunmamaktadýr, elektronikçiden alabilirsiniz.");
			return 1;
		}
        if(PlayerInfo[playerid][pTelsiz] == 0)
		{
	     	HataMesajiGonder(playerid, "Telsiziniz bulunmamaktadýr, elektronikçiden alabilirsiniz.");
			return 1;
		}
		new id;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			KullanimMesajiGonder(playerid, "/frekans [Frekans numarasý]");
			return 1;
		}
		id = strval(tmp);
		if(id > 9999 || id < 1000)
		{
			HataMesajiGonder(playerid, "Frekans 1000'den küçük, 9999'dan büyük olamaz.");
		}
		else
		{
			PlayerInfo[playerid][pFrekans] = id;
			format(string, 256, "Frekansýnýz %d olarak ayarlandý.", id);
			BilgiMesajiGonder(playerid, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/departman", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "[/d]epartman [Departman yazýsý]");
				return 1;
			}
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
			{
				format(string, sizeof(string), " [%s]: %s",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], result);
				SendFactionMessage(playerid, 0, COLOR_FACTIONCHAT, string);
				SendFactionMessage(playerid, 1, COLOR_FACTIONCHAT, string);
				SendFactionMessage(playerid, 2, COLOR_FACTIONCHAT, string);
				format(string, sizeof(string), "[DEPARTMAN TELSÝZ][%s] %s: %s",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], GetPlayerNameEx(playerid), result);
				FactionChatLog(string);
            }
			else if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
				format(string, sizeof(string), " [%s]: %s",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], result);
				SendFactionMessage(playerid, 0, COLOR_FACTIONCHAT, string);
				SendFactionMessage(playerid, 1, COLOR_FACTIONCHAT, string);
				SendFactionMessage(playerid, 2, COLOR_FACTIONCHAT, string);
				format(string, sizeof(string), "[DEPARTMAN TELSÝZ][%s] %s: %s",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], GetPlayerNameEx(playerid), result);
				FactionChatLog(string);
            }
			else if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 3)
			{
				format(string, sizeof(string), " [%s]: %s, tamam.",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], result);
				SendFactionMessage(playerid, 0, COLOR_FACTIONCHAT, string);
				SendFactionMessage(playerid, 1, COLOR_FACTIONCHAT, string);
				SendFactionMessage(playerid, 2, COLOR_FACTIONCHAT, string);
				format(string, sizeof(string), "[DEPARTMAN TELSÝZ][%s] %s: %s",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], GetPlayerNameEx(playerid), result);
				FactionChatLog(string);
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/f", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new wstring[128];
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "[/f]action [Oluþum yazýsý]");
				return 1;
			}
			if(Muted[playerid])
			{
				HataMesajiGonder(playerid, "Susturulduðunuz için bu komutu kullanamazsýnýz.");
				return 1;
			}
			if(FactionDuyma[playerid] == 0)
			{
				HataMesajiGonder(playerid, "Oluþum konuþmalarýný duymuyorken bir þeyler yazamassnýz.");
				return 1;
			}
			if(PlayerInfo[playerid][pFaction] != 255)
			{
				format(wstring, sizeof(wstring), ": %s",result);
				SendFactionMessage2(playerid, PlayerInfo[playerid][pFaction], COLOR_FACTIONCHAT, wstring);
				format(string, sizeof(string), "[OOC][%s] %s%s",DynamicFactions[PlayerInfo[playerid][pFaction]][fName], GetPlayerNameEx(playerid), wstring);
				FactionChatLog(string);
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
			}
		}
		return 1;
	}
	
   	if(strcmp(cmd, "/evlenmeteklifi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/evlenmeteklifi [ID]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
			if(PlayerInfo[giveplayerid][pMedeniHal] == 1)
			{
				HataMesajiGonder(playerid, "Evli birine evlenme teklifi edemezsiniz.");
				return 1;
			}
			if (PlayerInfo[playerid][pSex] == 1 && PlayerInfo[giveplayerid][pSex] == 2 || PlayerInfo[playerid][pSex] == 2 && PlayerInfo[giveplayerid][pSex] == 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
    				if(giveplayerid != INVALID_PLAYER_ID)
				    {
        				new form[128];
						EvlenmeTeklifi[giveplayerid] = playerid;
						format(form,sizeof(form),"%s size evlenme teklifi ediyor.",GetPlayerNameEx2(playerid, giveplayerid));
						BilgiMesajiGonder(giveplayerid, form);
						format(form,sizeof(form),"%s adlý oyuncuya evlenme teklifi ettiniz.",GetPlayerNameEx2(giveplayerid, playerid));
						BilgiMesajiGonder(playerid, form);
						new string5[512];
						format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi size\nevlenme teklifi ediyor\nevlenmek ister misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playerid, giveplayerid));
				  		ShowPlayerDialog(giveplayerid, 971,DIALOG_STYLE_MSGBOX,"Evlenme teklifi",string5,"Kabul et","Reddet");
					}
					return 1;
				}
				else
				{
				    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Sadece karþý cinslere evlenme teklifi edebilirsiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/bosanmateklifi",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMedeniHal] < 1)
			{
			    HataMesajiGonder(playerid, "Evli deðilken boþanamazsýnýz.");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/bosanmateklifi [ID]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
						{
							HataMesajiGonder(playerid, "Kendi kendinize boþanma teklifi gönderemessiniz");
							return 1;
						}
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						new sendername[128];
						new giveplayer[128];
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pEvlendigiKisi]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "%s adlý kiþiye boþanma teklif ettiniz.", GetPlayerNameEx2(giveplayerid, playerid));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý kiþi size boþanma teklif etti.", GetPlayerNameEx2(playerid, giveplayerid));
							BilgiMesajiGonder(giveplayerid, string);
					        BosanmaTeklifi[giveplayerid] = playerid;
							new string5[512];
							format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi size\nboþanma teklifi ediyor\nboþanmak ister misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playerid, giveplayerid));
				  			ShowPlayerDialog(giveplayerid, 972,DIALOG_STYLE_MSGBOX,"Boþanma teklifi",string5,"Kabul et","Reddet");
					        return 1;
						}
						else
						{
						    HataMesajiGonder(playerid, "Sadece evli olduðunuz kiþiler ile boþanabilirsiniz.");
						}
					}
					else
					{
					    HataMesajiGonder(playerid, "Boþanmaya çalýþtýðýnýz kiþi yakýnýnýzda deðil.");
					}
			    }
			}
			else
			{
			    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/kick [ID] [Gerekçe]");
					return 1;
				}
				giveplayerid = SQLdenBul(strval(tmp));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							KullanimMesajiGonder(playerid, "/kick [ID] [Gerekçe]");
							return 1;
						}
						if(PlayerInfo[giveplayerid][pAdmin] >= 5)
						{
							HataMesajiGonder(playerid, "Owner'larý kickleyemezsiniz.");
			    			return 1;
						}
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							format(string,sizeof(string),"%s,%s tarafýndan sunucudan atýldý. {CC0000}Gerekçe:{FFFFFF} %s",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid),result);
							CezaMesajiGonder(i, string);
						}
 						Kick(giveplayerid);
						KickLog(string);
						return 1;
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
				YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext,"/aserverinfo",true)==0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new form[128];
			BilgiMesajiGonder(playerid, "Sunucu istatistikleri:");
			format(form, sizeof form, "Toplam Objeler: %d", GetObjectCount());
			GenelMesajGonder(playerid, form);
			format(form, sizeof form, "Toplam Araçlar: %d", GetVehicleCount());
			GenelMesajGonder(playerid, form);
			format(form, sizeof form, "Toplam Pickuplar: %d", CountStreamPickups());
			GenelMesajGonder(playerid, form);
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/canliyayin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 4)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        BilgiMesajiGonder(playerid, "Canlý yayýn sona ermiþtir.");
			        BilgiMesajiGonder(TalkingLive[playerid], "Canlý yayýn sona ermiþtir.");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/canliyayin [ID]");
					return 1;
				}
		        giveplayerid = SQLdenBul(strval(tmp));
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid)
							{
								HataMesajiGonder(playerid, "Kendi kendinize canlý yayýn yapamazsýnýz.");
								return 1;
							}
							format(string, sizeof(string), "%s adlý oyuncuyu canlý yayýna davet ettiniz.", GetPlayerNameEx2(giveplayerid, playerid));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý kiþi sizi canlý yayýna davet etti.", GetPlayerNameEx2(playerid, giveplayerid));
							BilgiMesajiGonder(giveplayerid, string);
							LiveOffer[giveplayerid] = playerid;
							new string5[512];
							format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi size\ncanlý yayýn teklifi ediyor\nkatýlmak ister misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playerid, giveplayerid));
				  			ShowPlayerDialog(giveplayerid, 973,DIALOG_STYLE_MSGBOX,"Canlý yayýn",string5,"Kabul et","Reddet");
						}
						else
						{
						    HataMesajiGonder(playerid, "Teklif edeceðiniz kiþinin size yakýn olmasý gereklidir.");
						}
					}
				}
				else
				{
	                HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Bu komutu sadece televizyon kuruluþlarý kullanabilir.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/haber", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 4)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/haber [Haber yazýsý]");
					return 1;
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if (DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 4)
					{
						format(string, sizeof(string), "{7B9800}[HABER] {379EF6}%s: %s", DynamicFactions[PlayerInfo[playerid][pFaction]][fName], GetPlayerNameEx2(playerid, i), result);
						SendClientMessage(i, COLOR_LIGHTRED, string);
					}
				}
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/abuildingid", true) == 0)
	{
	    new bulundu;
	    for(new i = 0; i < sizeof(Building); i++)
		{
			if (PlayerToPoint(1.0, playerid,Building[i][EnterX], Building[i][EnterY], Building[i][EnterZ]))
			{
			    if(GetPlayerVirtualWorld(playerid) == Building[i][EnterWorld])
			    {
			        format(string,sizeof(string),"En yakýnýnýzda ki Building ID: %d",i);
			        BilgiMesajiGonder(playerid,string);
			        bulundu = 1;
			        return 1;
			    }
			}
		}
		if(bulundu == 0)
		{
			HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir Building yok.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/acarid", true) == 0)
	{
	    new bulundu;
	    for(new i = 0; i < MAX_VEHICLES; i++)
		{
		    new Float: cX, Float: cY, Float: cZ;
		    GetVehiclePos(i, cX, cY, cZ);
			if (PlayerToPoint(1.0, playerid,cX, cY, cZ))
			{
			    if(GetPlayerVirtualWorld(playerid) == GetVehicleVirtualWorld(i))
			    {
			        format(string,sizeof(string),"En yakýnýnýzda ki(1.0) Araç ID: %d",i);
			        BilgiMesajiGonder(playerid,string);
			        bulundu = 1;
			        return 1;
			    }
			}
		}
		if(bulundu == 0)
		{
			HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir araç yok.");
		}
		return 1;
	}
	
	
 	if(strcmp(cmd, "/ahouseid", true) == 0)
	{
	    new bulundu;
	    for(new ev = 0; ev < MAX_HOUSES; ev++)
		{
		    if(PlayerToPoint(1.0, playerid, Houses[ev][EnterX], Houses[ev][EnterY], Houses[ev][EnterZ]))
		    {
		        new yazi[256];
		        format(yazi,sizeof(yazi),"En yakýnýzda ki(1.0) Ev ID: %d",ev);
		        BilgiMesajiGonder(playerid, yazi);
		        bulundu = 1;
		        return 1;
			}
		}
		if(bulundu == 0)
		{
			HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir ev yok.");
		}
		return 1;
	}
	
	
	if(strcmp(cmd, "/abusinessid", true) == 0)
	{
	    new bulundu;
	    for(new bs = 0; bs < MAX_HOUSES; bs++)
		{
		    if(PlayerToPoint(1.0, playerid, Businesses[bs][EnterX], Businesses[bs][EnterY], Businesses[bs][EnterZ]))
		    {
		        new yazi[256];
		        format(yazi,sizeof(yazi),"En yakýnýzda ki(1.0) Business ID: %d",bs);
		        BilgiMesajiGonder(playerid, yazi);
		        bulundu = 1;
		        return 1;
			}
		}
		if(bulundu == 0)
		{
			HataMesajiGonder(playerid,"Yakýnýnýzda herhangi bir Building yok.");
		}
		return 1;
	}
	
	
	if(strcmp(cmd, "/getcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
		        new wstring[128];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/getcar [Araç ID]");
					return 1;
				}
				new plo;
				new Float:plocx,Float:plocy,Float:plocz;
				new id = strval(tmp);
				plo = strval(tmp);
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz);
    			format(wstring, sizeof(wstring), "%d numaralý aracý yanýnýza çektiniz.", id);
    			BilgiMesajiGonder(playerid, wstring);
				format(string, 128, "%s[%d] %d numaralý aracý yanýna çekti.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid],id);
				YoneticiMesajiGonder(string);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/respawnallcars", true) == 0  || strcmp(cmd, "/rac", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			SetTimerEx("aracspawn", 10000, false, "i", playerid);
			/*format(string, sizeof(string), "{FF9900}%s: {FFFFFF}10 saniye içerisinde bütün araçlar otomatik olarak respawn edilecektir.", GetPlayerNameEx(playerid));
   			TopluMesajGonder(string);*/
			format(string, sizeof(string), "%s[%d] araçlara respawn atma iþlemini baþlattý.", GetPlayerNameEx(playerid), PlayerInfo[playerid][pSQLid]);
			YoneticiMesajiGonder(string);
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/respawnthiscar", true) == 0 || strcmp(cmd, "/rtc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(!IsPlayerInAnyVehicle(playerid))
	   			{
			    	HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				    return 1;
				}
   				RemoveDriverFromVehicle(playerid);
				AracKaydetmeDurumu[GetPlayerVehicleID(playerid)] = 0;
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
     			SetVehicleHealth(GetPlayerVehicleID(playerid), DynamicCars[GetPlayerVehicleID(playerid)][CarHealth]);
                UpdateVehicleDamageStatusEx(GetPlayerVehicleID(playerid), DynamicCars[GetPlayerVehicleID(playerid)][Panels], DynamicCars[GetPlayerVehicleID(playerid)][Doors], DynamicCars[GetPlayerVehicleID(playerid)][Lights], DynamicCars[GetPlayerVehicleID(playerid)][Tires]);
     			AracKaydetmeDurumu[GetPlayerVehicleID(playerid)] = 1;
			    BilgiMesajiGonder(playerid, "Araç spawn edildi.");
				format(string, 256, "%s[%d] '%d' numaralý aracý spawn yerine gönderdi.",GetPlayerNameEx(playerid),playerid,GetPlayerVehicleID(playerid));
				YoneticiMesajiGonder(string);
				MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
                AracNeon[0][GetPlayerVehicleID(playerid)] = CreateObject(DynamicCars[GetPlayerVehicleID(playerid)][ModNeon],0,0,0,0,0,0);
				AracNeon[1][GetPlayerVehicleID(playerid)] = CreateObject(DynamicCars[GetPlayerVehicleID(playerid)][ModNeon],0,0,0,0,0,0);
				AttachObjectToVehicle(AracNeon[0][GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(AracNeon[1][GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                if(DynamicCars[GetPlayerVehicleID(playerid)][ModNeon] != 0)
				{
			 		DestroyObject(AracNeon[0][GetPlayerVehicleID(playerid)]);
			   		DestroyObject(AracNeon[1][GetPlayerVehicleID(playerid)]);
				}
				if(PolisLamba[0][GetPlayerVehicleID(playerid)] != 0)
				{
				    DestroyObject(PolisLamba[1][GetPlayerVehicleID(playerid)]);
				}
				SetTimerEx("LambalariYukle",10000,false,"i",GetPlayerVehicleID(playerid));
			}
   			else
   			{
       			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotocar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/gotocar [Araç ID]");
					return 1;
				}
				new id = strval(tmp);
			    if(id != INVALID_VEHICLE_ID)
			    {
					PutPlayerInVehicle(playerid,id,0);
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý araç ID girdiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/boombox", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {

					tmp = strtok(cmdtext, idx);
					if(radyocaliyor[playerid] == false)
					{
					        new Float:plocx;
					        new Float:plocy;
					        new Float:plocz;
					        new Float:xI;
					        new Float:yI;
					        new Float:zI;
							GetPlayerPos(playerid, plocx, plocy, plocz);
							//new interior = GetPlayerInterior(playerid);
							//new world = GetPlayerVirtualWorld(playerid);
							format(string, sizeof(string), "%s", tmp);
							radyoobje[playerid]=CreateDynamicObject(3030,plocx, plocy, plocz+5,0.00000000,0.00000000,90.00000000);
							radyocaliyor = true;
							new yinsancik = GetClosestPlayer(playerid);
							GetPlayerPos(yinsancik, xI, yI, zI);
							if(IsPlayerInRangeOfPoint(playerid, 10 ,plocx, plocy, plocz+5))
							{
								PlayAudioStreamForPlayer(playerid, string, plocx, plocy, plocz+5, 50,1);
								return 0;
							}
							else
							{
								return 0;
							}
					}
					else
					{
					        if(strlen(tmp))
							{
								StopAudioStreamForPlayer(playerid);
					    		radyocaliyor[playerid] = false;
					    		new yinsancik = GetClosestPlayer(playerid);
			        			StopAudioStreamForPlayer(yinsancik);
						        DestroyObject(radyoobje[playerid]);
								return 1;
							}
					}
		}
		return 1;
	}
 	if(strcmp(cmd, "/acarrandommodel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
				    new car = GetPlayerVehicleID(playerid);
					new rand = random(sizeof(RandomStableModels));
					new Float:x,Float:y,Float:z,Float:a;
					GetPlayerPos(playerid,x,y,z);
					GetVehicleZAngle(car,a);
					DynamicCars[car][CarModel] = RandomStableModels[rand][0];
					DestroyVehicle(car);
					AracKaydetmeDurumu[car] = 0;
     				CreateVehicle(DynamicCars[car][CarModel],x,y,z,a,DynamicCars[car][CarColor1],DynamicCars[car][CarColor2], -1);
					SetVehicleHealth(car, DynamicCars[car][CarHealth]);
                	UpdateVehicleDamageStatusEx(car, DynamicCars[car][Panels], DynamicCars[car][Doors], DynamicCars[car][Lights], DynamicCars[car][Tires]);
					AracKaydetmeDurumu[car] = 1;
					PutPlayerInVehicle(playerid,car,0);
					SetVehicleNumberPlate(car, DynamicCars[car][CarDescription]);
					SetVehicleParamsEx(car, MotorDurumu[car], IsikDurum[car], AlarmDurum[car], KapiDurum[car], KaputDurum[car], BagajDurum[car], ObjeDurum[car]);
					AraciModifiyeEt(car);
                    AracKaydet(car);
					BilgiMesajiGonder(playerid, "Aracýnýzýn modelini rastgele bir model yaptýnýz.");
	    		}
    			else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/acarpark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
				 	new wstring[128];
				    new car = GetPlayerVehicleID(playerid);
					new Float:x,Float:y,Float:z;
					new Float:a;
					GetVehiclePos(car, x, y, z);
					GetVehicleZAngle(car, a);
					DynamicCars[car][CarX] = x;
					DynamicCars[car][CarY] = y;
					DynamicCars[car][CarZ] = z;
					DynamicCars[car][CarAngle] = a;
					DestroyVehicle(car);
					AracKaydetmeDurumu[car] = 0;
     				CreateVehicle(DynamicCars[car][CarModel],DynamicCars[car][CarX],DynamicCars[car][CarY],DynamicCars[car][CarZ],DynamicCars[car][CarAngle],DynamicCars[car][CarColor1],DynamicCars[car][CarColor2], -1);
					SetVehicleHealth(car, DynamicCars[car][CarHealth]);
                	UpdateVehicleDamageStatusEx(car, DynamicCars[car][Panels], DynamicCars[car][Doors], DynamicCars[car][Lights], DynamicCars[car][Tires]);
					AracKaydetmeDurumu[car] = 1;
					PutPlayerInVehicle(playerid,car,0);
                    SetVehicleNumberPlate(car, DynamicCars[car][CarDescription]);
                    SetVehicleParamsEx(car, MotorDurumu[car], IsikDurum[car], AlarmDurum[car], KapiDurum[car], KaputDurum[car], BagajDurum[car], ObjeDurum[car]);
					AraciModifiyeEt(car);
                    AracKaydet(car);
				    format(wstring, sizeof(wstring), "%d numaralý aracý, þuan olduðunuz yere park ettiniz.", car);
				    BilgiMesajiGonder(playerid, wstring);
	    		}
    			else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/acarfaction", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/acarfaction [Oluþum numarasý]");
					return 1;
				}
				new thecar = strval(tmp);
				if(IsPlayerInAnyVehicle(playerid))
				{
    				new wstring[128];
					new car = GetPlayerVehicleID(playerid);
					new vehicleid = GetPlayerVehicleID(playerid);
					DynamicCars[car][FactionCar] = thecar;
					strmid(DynamicCars[car][CarOwner], "%s", DynamicFactions[DynamicCars[vehicleid][FactionCar]][fName], strlen("%s"), DynamicFactions[DynamicCars[vehicleid][FactionCar]][fName]);
	    			format(wstring, sizeof(wstring), "%d numaralý aracýn organizasyonunu %s yaptýnýz.", vehicleid,DynamicFactions[thecar][fName]);
 					BilgiMesajiGonder(playerid, wstring);
				}
 				else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/acarfactiondelete", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
 					new wstring[128];
					new car = GetPlayerVehicleID(playerid);
					new vehicleid = GetPlayerVehicleID(playerid);
					DynamicCars[car][FactionCar] = 255;
				    format(wstring, sizeof(wstring), "%d numaralý aracý organizasyondan çýkarttýnýz.", vehicleid);
				    BilgiMesajiGonder(playerid, wstring);
		    	}
	           	else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
			}
   			else
			{
	   			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/acartype", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/acartype [Araç tipi]");
					return 1;
				}
				new thecar = strval(tmp);
				if(IsPlayerInAnyVehicle(playerid))
				{
 					new wstring[128];
					new car = GetPlayerVehicleID(playerid);
					new vehicleid = GetPlayerVehicleID(playerid);
					DynamicCars[car][CarType] = thecar;
				    format(wstring, sizeof(wstring), "%d numaralý aracýn tipini %d yaptýnýz.", vehicleid,thecar);
				    BilgiMesajiGonder(playerid, wstring);
		    		AracKaydet(car);
				}
 				else
				{
				    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/acarmodel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/acarmodel [Araç modeli]");
					return 1;
				}
				new thecar = strval(tmp);
				if(IsPlayerInAnyVehicle(playerid))
				{
 					if(thecar > 399 && thecar < 612)
 					{
						new car = GetPlayerVehicleID(playerid);
						DynamicCars[car][CarModel] = thecar;
			 			new wstring[128];
					    format(wstring, sizeof(wstring), "%d numaralý aracýn modelini %d olarak deðiþtirdiniz.", car,thecar);
					    BilgiMesajiGonder(playerid, wstring);
	   					new Float:cx,Float:cy,Float:cz;
	   					GetVehiclePos(car,cx,cy,cz);
	   					new Float:angle;
	   					GetVehicleZAngle(car, angle);
						DestroyVehicle(car);
						AracKaydetmeDurumu[car] = 0;
	     				CreateVehicle(DynamicCars[car][CarModel],DynamicCars[car][CarX],DynamicCars[car][CarY],DynamicCars[car][CarZ],DynamicCars[car][CarAngle],DynamicCars[car][CarColor1],DynamicCars[car][CarColor2], -1);
						SetVehicleHealth(car, DynamicCars[car][CarHealth]);
                		UpdateVehicleDamageStatusEx(car, DynamicCars[car][Panels], DynamicCars[car][Doors], DynamicCars[car][Lights], DynamicCars[car][Tires]);
						AracKaydetmeDurumu[car] = 1;
						PutPlayerInVehicle(playerid,car,0);
						SetVehiclePos(car, cx, cy, cz);
	     				SetVehicleZAngle(car, angle);
                        SetVehicleNumberPlate(car, DynamicCars[car][CarDescription]);
                        SetVehicleParamsEx(car, MotorDurumu[car], IsikDurum[car], AlarmDurum[car], KapiDurum[car], KaputDurum[car], BagajDurum[car], ObjeDurum[car]);
	     				AraciModifiyeEt(car);
					    AracKaydet(car);
				    }
		   			else
					{
						HataMesajiGonder(playerid, "Araç ID'si 400'den küçük, 612'den büyük olamaz.");
					}
				}
 				else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/acarcolor", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/acarcolor [1. renk] [2. renk]");
					return 1;
				}
				if(IsPlayerInAnyVehicle(playerid))
				{
					new color1;
					color1 = strval(tmp);
					if(color1 < 0 || color1 > 255)
					{
						HataMesajiGonder(playerid, "1. renk 0'dan küçük, 255'den büyük olamaz.");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/acarcolor [1. renk] [2. renk]");
						return 1;
					}
					new color2;
					color2 = strval(tmp);
					if(color2 < 0 || color2 > 255)
					{
						HataMesajiGonder(playerid, "2. renk 0'dan küçük, 255'den büyük olamaz.");
						return 1;
					}
					new car = GetPlayerVehicleID(playerid);
					DynamicCars[car][CarColor1] = color1;
					DynamicCars[car][CarColor2] = color2;
					new wstring[128];
		   			format(wstring, sizeof(wstring), "%d numaralý aracýn rengini %d-%d yaptýnýz.", car,color1,color2);
				    BilgiMesajiGonder(playerid, wstring);
   					new Float:cx,Float:cy,Float:cz;
   					GetVehiclePos(car,cx,cy,cz);
   					new Float:angle;
   					GetVehicleZAngle(car, angle);
        			DestroyVehicle(car);
					AracKaydetmeDurumu[car] = 0;
     				CreateVehicle(DynamicCars[car][CarModel],DynamicCars[car][CarX],DynamicCars[car][CarY],DynamicCars[car][CarZ],DynamicCars[car][CarAngle],DynamicCars[car][CarColor1],DynamicCars[car][CarColor2], -1);
					SetVehicleHealth(car, DynamicCars[car][CarHealth]);
                	UpdateVehicleDamageStatusEx(car, DynamicCars[car][Panels], DynamicCars[car][Doors], DynamicCars[car][Lights], DynamicCars[car][Tires]);
					AracKaydetmeDurumu[car] = 1;
					PutPlayerInVehicle(playerid,car,0);
					SetVehiclePos(car, cx, cy, cz);
     				SetVehicleZAngle(car, angle);
                    SetVehicleNumberPlate(car, DynamicCars[car][CarDescription]);
                    SetVehicleParamsEx(car, MotorDurumu[car], IsikDurum[car], AlarmDurum[car], KapiDurum[car], KaputDurum[car], BagajDurum[car], ObjeDurum[car]);
     				AraciModifiyeEt(car);
				    AracKaydet(car);
				}
 				else
				{
				    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/arac", true) == 0 || strcmp(cmd, "/ar", true) == 0)
	{
	    new pName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pName, MAX_PLAYER_NAME);
	    if(IsPlayerConnected(playerid))
     	{
	        new x_nr[500];
	        x_nr = strtok(cmdtext, idx);
	        if(!strlen(x_nr))
	        {
	            BilgiMesajiGonder(playerid, "Araç sistemi");
				GenelMesajGonder(playerid, "/arac satinal || /arac sigorta || /arac park || /arac liste");
				GenelMesajGonder(playerid, "/arac gps || /arac kilit || /arac bilgi || /arac sat ||  /arac imha");
				GenelMesajGonder(playerid, "/arac kirala || /arac kaput || /arac bagaj");
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
				    BilgiMesajiGonder(playerid, "Araç sistemi - Yönetici komutlarý");
				    GenelMesajGonder(playerid, "/arac yarat || /arac sil || /arac sahip || /arac fiyat || /arac modifiye || /arac satilikdurum");
				}
				return 1;
	        }
			if(strcmp(x_nr,"yarat",true) == 0)
		 	{
		 	    if(PlayerInfo[playerid][pAdmin] >= 4)
				{
			 	    new AracVer;
			 	    new Float: XKP, Float:YKP, Float:ZKP;
			 	    GetPlayerPos(playerid, XKP, YKP, ZKP);
	//		 	    new Plaka[64];
	//			    new CaptchSymb[22][] = {"A","B","C","D","E","F","G","H","I","K","L","M","N","O","P","R","S","T","U","V","Y","Z"};
	//				new sayiSymb[10][] = {0,1,2,3,4,5,6,7,8,9};
					new Symb1 = random(sizeof(CaptchSymb));
				 	new	Symb2 = random(sizeof(CaptchSymb));
				 	new	Symb3 = random(sizeof(CaptchSymb));
				  	new	Symb4 = random(sizeof(CaptchSymb));
					new SymbS1 = random(sizeof(sayiSymb));
				 	new	SymbS2 = random(sizeof(sayiSymb));
			 		new	SymbS3 = random(sizeof(sayiSymb));
					format(Plaka, sizeof(Plaka), "%d%d%s%s %d%s%s", sayiSymb[SymbS1], sayiSymb[SymbS2],CaptchSymb[Symb1],CaptchSymb[Symb2], sayiSymb[SymbS3], CaptchSymb[Symb3],CaptchSymb[Symb4]);
					AracVer = AddStaticVehicleEx(400, XKP+2, YKP, ZKP, 0.000, 0, 0, -1);
					DynamicCars[AracVer][cSQLid] = AracEkle(400, XKP+2, YKP, ZKP, 0.000, 0, 0, 0, 0, 100000, 0, "Kimse", Plaka, 100.000, 0);
					SetVehicleNumberPlate(AracVer, Plaka);
					DynamicCars[AracVer][CarModel] = 400;
					DynamicCars[AracVer][CarX] = XKP+2;
				 	DynamicCars[AracVer][CarY] = YKP;
					DynamicCars[AracVer][CarZ] = ZKP;
					DynamicCars[AracVer][CarAngle] = 0.000;
					DynamicCars[AracVer][CarColor1] = 0;
					DynamicCars[AracVer][CarColor2] = 0;
	    			DynamicCars[AracVer][FactionCar] = 0;
					DynamicCars[AracVer][CarType] = 0;
					DynamicCars[AracVer][CarValue] = 100000;
					DynamicCars[AracVer][CarOwned] = 0;
					format(string, sizeof(string), "Kimse");
					strmid(DynamicCars[AracVer][CarOwner], string, 0, strlen(string), 20);
					strmid(DynamicCars[AracVer][CarDescription], Plaka, 0, strlen(Plaka), 20);
		 			DynamicCars[AracVer][CarHealth] = 1000.000;
		 			DynamicCars[AracVer][AracPatladi] = 0;
		   			DynamicCars[AracVer][cSigorta] = 0;
					DynamicCars[AracVer][cKazaSayi] = 0;
					DynamicCars[AracVer][ModPaintjob] = 4;
					DynamicCars[AracVer][ModSpoiler] = 0;
					DynamicCars[AracVer][ModRoof] = 0;
					DynamicCars[AracVer][ModLeftSideSkirt] = 0;
					DynamicCars[AracVer][ModRightSideSkirt] = 0;
					DynamicCars[AracVer][ModExhaust] = 0;
					DynamicCars[AracVer][ModWheels] = 0;
					DynamicCars[AracVer][ModFrontBumper] = 0;
					DynamicCars[AracVer][ModRearBumper] = 0;
					DynamicCars[AracVer][ModStereo] = 0;
					DynamicCars[AracVer][ModHydraulics] = 0;
					DynamicCars[AracVer][ModNitro] = 0;
					DynamicCars[AracVer][ModNeon] = 0;
					DynamicCars[AracVer][ModAlarm] = 0;
					AracKaydet(AracVer);
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
				return 1;
			}
			if(strcmp(x_nr,"sil",true) == 0)
		 	{
		 	    if(PlayerInfo[playerid][pAdmin] >= 4)
				{
				    if(IsPlayerInAnyVehicle(playerid))
				    {
						new idcar = GetPlayerVehicleID(playerid);
						AracSil(idcar);
						BilgiMesajiGonder(playerid, "Aracý sildiniz.");
						return 1;
					}
					else
					{
					    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
				return 1;
			}
			if(strcmp(x_nr,"sahip",true) == 0)
		 	{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
			 	    new vehicleid = GetPlayerVehicleID(playerid);
				    if(IsPlayerConnected(playerid))
					{
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							KullanimMesajiGonder(playerid, "/arac sahip [Araç sahip ismi]");
							return 1;
						}
						if(IsPlayerInAnyVehicle(playerid))
						{
						    if(strfind( result , "|" , true ) == -1)
						    {
								strmid(DynamicCars[vehicleid][CarOwner], result, 0, 64, 255);
								format(string, sizeof(string), "%d ID'li aracýn sahibini %s olarak deðiþtirdiniz.",vehicleid, DynamicCars[vehicleid][CarOwner]);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s, %d ID'li aracýn sahibini %s yaptý.",GetPlayerNameEx(playerid),vehicleid,DynamicCars[vehicleid][CarOwner]);
								YoneticiMesajiGonder(string);
								DynamicCars[vehicleid][FactionCar] = 255;
								DynamicCars[vehicleid][CarType] = 2;
								DynamicCars[vehicleid][CarOwned] = 1;
								AracKaydet(vehicleid);
							}
							else
							{
								HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
							}
						}
						else
						{
						    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
						}
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
				return 1;
		 	}
			if(strcmp(x_nr,"fiyat",true) == 0)
		 	{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
			 	    new vehicleid = GetPlayerVehicleID(playerid);
				    if(IsPlayerConnected(playerid))
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							KullanimMesajiGonder(playerid, "/arac fiyat [Fiyat]");
							return 1;
						}
						if(IsPlayerInAnyVehicle(playerid))
						{
							DynamicCars[vehicleid][CarValue] = strval(tmp);
							format(string, sizeof(string), "%d ID'li aracýn ücretini %d olarak deðiþtirdiniz.",vehicleid, DynamicCars[vehicleid][CarValue]);
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s, %d ID'li aracýn ücretini %d yaptý.",GetPlayerNameEx(playerid),vehicleid,DynamicCars[vehicleid][CarValue]);
							YoneticiMesajiGonder(string);
							AracKaydet(vehicleid);
						}
						else
						{
						    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
						}
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
				return 1;
		 	}
			if(strcmp(x_nr,"modifiye",true) == 0)
		 	{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
			 	    new vehicleid = GetPlayerVehicleID(playerid);
				    if(IsPlayerConnected(playerid))
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							KullanimMesajiGonder(playerid, "/arac modifiye [Modifiye obje ID]");
							return 1;
						}
						if(IsPlayerInAnyVehicle(playerid))
						{
							AddVehicleComponent(vehicleid, strval(tmp));
							format(string, sizeof(string), "%d ID'li araca %d ID'li modifiyeyi eklediniz.",vehicleid, strval(tmp));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s, %d ID'li araca %d ID'li modifiyeyi ekledi.",GetPlayerNameEx(playerid),vehicleid,strval(tmp));
							YoneticiMesajiGonder(string);
							AracKaydet(vehicleid);
						}
						else
						{
						    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
						}
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
				return 1;
		 	}
			if(strcmp(x_nr,"satilikdurum",true) == 0)
		 	{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
			 	    new vehicleid = GetPlayerVehicleID(playerid);
				    if(IsPlayerConnected(playerid))
					{
						if(IsPlayerInAnyVehicle(playerid))
						{
							if(DynamicCars[vehicleid][CarOwned] == 1)
							{
								DynamicCars[vehicleid][CarOwned] = 0;
								format(string, sizeof(string), "%d ID'li satýn alýnma durumunu %d olarak deðiþtirdiniz.",vehicleid, DynamicCars[vehicleid][CarOwned]);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s, %d ID'li aracýn satýn alýnma durumunu %d yaptý.",GetPlayerNameEx(playerid),vehicleid,DynamicCars[vehicleid][CarOwned]);
								YoneticiMesajiGonder(string);
							}
							else
							{
							    DynamicCars[vehicleid][CarOwned] = 1;
								format(string, sizeof(string), "%d ID'li satýn alýnma durumunu %d olarak deðiþtirdiniz.",vehicleid, DynamicCars[vehicleid][CarOwned]);
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%s, %d ID'li aracýn satýn alýnma durumunu %d yaptý.",GetPlayerNameEx(playerid),vehicleid,DynamicCars[vehicleid][CarOwned]);
								YoneticiMesajiGonder(string);
							}
							AracKaydet(vehicleid);
						}
						else
						{
						    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
						}
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
				return 1;
		 	}
			if(strcmp(x_nr,"kirala",true) == 0)
		 	{
		 	    new car = GetPlayerVehicleID(playerid);
		 	    if(DynamicCars[car][CarType] == 9)
		 	    {
		 	        HataMesajiGonder(playerid, "Bu araç önceden kiralanmýþ.");
		 	        return 1;
		 	    }
		 	    if(DynamicCars[car][CarType] != 8)
		 	    {
		 	        HataMesajiGonder(playerid, "Bu araç kiralýk deðil.");
		 	        return 1;
				}
				if(GetPlayerCash(playerid) >= DynamicCars[car][CarValue])
				{
				    DynamicCars[car][CarType] = 9;
				    DynamicCars[car][CarOwner] = pName;
				    DynamicCars[car][AracKiraZaman] = 60*60;
					GivePlayerCash(playerid, -DynamicCars[car][CarValue]);
				    format(string, sizeof(string), "Aracý %d$'a 1 saatliðine kiraladýnýz.", DynamicCars[car][CarValue]);
				    BilgiMesajiGonder(playerid, string);
					if(MotorDurumu[car] == 0)
					{
				        IpucuMesajiGonder(playerid, "Motoru çalýþtýrmak için {86D060}~k~~VEHICLE_ACCELERATE~{E6E6E6} tuþunu kullanabilirsiniz.");
			        }
				    return 1;
				}
				else
				{
				    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
				}
				return 1;
		 	}
			if(strcmp(x_nr,"imha",true) == 0)
		 	{
		 		if(PlayerToPoint(5.0, playerid, DynamicFactions[4][fX],DynamicFactions[4][fY],DynamicFactions[4][fZ]))
		   		{
					new sendername[MAX_PLAYER_NAME];
					new idcar = GetPlayerVehicleID(playerid);
					if(!IsPlayerInAnyVehicle(playerid))
					{
						HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
						return 1;
					}
					if(strcmp(DynamicCars[idcar][CarOwner],pName,true))
					{
						HataMesajiGonder(playerid, "Sadece kendi aracýnýzý imha edebilirsiniz.");
						return 1;
					}
					if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] != 2 || DynamicCars[GetPlayerVehicleID(playerid)][CarOwned] == 0)
					{
						HataMesajiGonder(playerid, "Sadece kendi aracýnýzý imha edebilirsiniz.");
						return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(strcmp(sendername, DynamicCars[idcar][CarOwner], true) == 0)
				 	{
						format(string, sizeof(string),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli aracýnýzý, %d$'a imha\netmek istediðinize emin misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", VehicleName[GetVehicleModel(idcar)-400], DynamicCars[idcar][CarValue]/2);
				  		ShowPlayerDialog(playerid, 13,DIALOG_STYLE_MSGBOX,"Araç Ýmha",string,"Ýmha et","Kapat");
				      	return 1;
					}
				}
		       	else
		   		{
					HataMesajiGonder(playerid, "Galeride deðilsiniz.");
		        }
		        return 1;
			}
			else if(strcmp(x_nr,"sat",true) == 0)
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
					if(!strcmp(DynamicCars[GetPlayerVehicleID(playerid)][CarOwner],pName,true))
		   			{
						if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 2 || DynamicCars[GetPlayerVehicleID(playerid)][CarOwned] == 0)
						{
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								KullanimMesajiGonder(playerid, "/arac sat [ID] [Ücret]");
								return 1;
							}
							giveplayerid = SQLdenBul(strval(tmp));
							if(IsPlayerConnected(giveplayerid))
							{
								if(giveplayerid != INVALID_PLAYER_ID)
								{
				    				if(ProxDetectorS(8.0, playerid, giveplayerid))
									{
										tmp = strtok(cmdtext, idx);
			       						if(!strlen(tmp))
				            			{
			                				KullanimMesajiGonder(playerid, "/arac sat [ID] [Ücret]");
							                return 1;
							            }
							            new ucret;
							            ucret = strval(tmp);
										if(ucret < 1 || ucret > 500000)
										{
										    HataMesajiGonder(playerid, "Ücret $1'den küçük, 500.000$'den büyük olamaz.");
										    return 1;
										}
							            new string2[500];
							            new idcar = GetPlayerVehicleID(playerid);
							            SatilikAracID[giveplayerid] = GetPlayerVehicleID(playerid);
							            SatilikAracUcret[giveplayerid] = ucret;
							            SatilikAracDurum[giveplayerid] = 1;
							            SatilikAraciAlacagiKisi[giveplayerid] = playerid;
										format(string2, sizeof(string2),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimi oyuncuya %s adlý aracýnýzý satmak istiyorsunuz.\nÜcret: %d$\nSigorta: %d\nKaza sayýsý: %d\nÝptal etmek için, iptal et butonuna basýnýz.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",
										GetPlayerNameEx2(giveplayerid, playerid), VehicleName[GetVehicleModel(idcar)-400], ucret, DynamicCars[idcar][cSigorta],DynamicCars[idcar][cKazaSayi]);
										ShowPlayerDialog(playerid, 9995,DIALOG_STYLE_MSGBOX,"Araç satýmý",string2,"Ýptal et","");
										format(string2, sizeof(string2),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli oyuncu, %s adlý aracýný size satmak istiyor.\nÜcret: %d$\nSigorta: %d\nKaza sayýsý: %d\nSatýn almak için satýn al, iptal etmek için kapat butonuna basýnýz.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",
										GetPlayerNameEx2(playerid, giveplayerid), VehicleName[GetVehicleModel(idcar)-400], ucret, DynamicCars[idcar][cSigorta],DynamicCars[idcar][cKazaSayi]);
										ShowPlayerDialog(giveplayerid, 9996,DIALOG_STYLE_MSGBOX,"Araç alýmý",string2,"Satýn al","Kapat");
						    		}
								    else
								    {
				        				HataMesajiGonder(playerid, "Aracý satmak istediðiniz kiþi yakýnýnýzda deðil.");
								    }
								}
							}
						}
					    else
				   		{
							HataMesajiGonder(playerid, "Sadece kendi aracýnýzý satabilirsiniz.");
					    }
		    		}
				    else
			   		{
						HataMesajiGonder(playerid, "Sadece kendi aracýnýzý satabilirsiniz.");
				    }
				}
				else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
				return 1;
		  	}
			if(strcmp(x_nr,"sigorta",true) == 0)
		 	{
		 		if(PlayerToPoint(5.0, playerid, DynamicFactions[4][fX],DynamicFactions[4][fY],DynamicFactions[4][fZ]))
		   		{
					new sendername[MAX_PLAYER_NAME];
					new idcar = GetPlayerVehicleID(playerid);
					if(!IsPlayerInAnyVehicle(playerid))
					{
						HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
						return 1;
					}
					if(strcmp(DynamicCars[idcar][CarOwner],pName,true))
					{
						HataMesajiGonder(playerid, "Sadece kendi aracýnýza sigorta yaptýrabilirsiniz.");
						return 1;
					}
					if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] != 2 || DynamicCars[GetPlayerVehicleID(playerid)][CarOwned] == 0)
					{
						HataMesajiGonder(playerid, "Sadece kendi aracýnýza sigorta yaptýrabilirsiniz.");
						return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(strcmp(sendername, DynamicCars[idcar][CarOwner], true) == 0)
				 	{
				 	    new string5[512];
						format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli aracýnýza, $1250'a sigorta yaptýrmak üzeresiniz, eðer sigorta almassanýz aracýnýz patladýðýnda,\n sistemden silinir ve bir daha kullanamazsýnýz.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", VehicleName[GetVehicleModel(idcar)-400]);
				  		ShowPlayerDialog(playerid, 9000,DIALOG_STYLE_MSGBOX,"Araç sigorta alýmý",string5,"Sigorta al","Kapat");
				      	return 1;
					}
				}
		       	else
		   		{
					HataMesajiGonder(playerid, "Galeride deðilsiniz.");
		        }
		        return 1;
			}
			else if(strcmp(x_nr,"park",true) == 0)
			{
				new Float:a;
			 	new Float:x,Float:y,Float:z;
				new idcar = GetPlayerVehicleID(playerid);
				if(!IsPlayerInAnyVehicle(playerid))
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
					return 1;
				}
			 	if(strcmp(DynamicCars[idcar][CarOwner],pName,true))
			 	{
			 		HataMesajiGonder(playerid, "Sadece kendi aracýnýzý park edebilirsiniz.");
				    return 1;
				}
				if(DynamicCars[idcar][CarType] != 2 || DynamicCars[idcar][CarOwned] == 0)
				{
			 		HataMesajiGonder(playerid, "Sadece kendi aracýnýzý park edebilirsiniz.");
				    return 1;
				}
				GetVehiclePos(idcar, x, y, z);
				GetVehicleZAngle(idcar, a);
				if(IsPlayerInVehicle(playerid,idcar) && DynamicCars[idcar][CarOwned] == 1)
				{
					GetVehiclePos(idcar, x, y, z);
					GetVehicleZAngle(idcar, a);
					DynamicCars[idcar][CarX] = x;
					DynamicCars[idcar][CarY] = y;
					DynamicCars[idcar][CarZ] = z;
					DynamicCars[idcar][CarAngle] = a;
					DestroyVehicle(idcar);
					AracKaydetmeDurumu[idcar] = 0;
				 	CreateVehicle(DynamicCars[idcar][CarModel],DynamicCars[idcar][CarX],DynamicCars[idcar][CarY],DynamicCars[idcar][CarZ],DynamicCars[idcar][CarAngle],DynamicCars[idcar][CarColor1],DynamicCars[idcar][CarColor2], 0);
					PutPlayerInVehicle(playerid,idcar,0);
					SetVehicleHealth(idcar, DynamicCars[idcar][CarHealth]);
                	UpdateVehicleDamageStatusEx(idcar, DynamicCars[idcar][Panels], DynamicCars[idcar][Doors], DynamicCars[idcar][Lights], DynamicCars[idcar][Tires]);
					SetVehicleNumberPlate(idcar, DynamicCars[idcar][CarDescription]);
					SetVehicleParamsEx(idcar, MotorDurumu[idcar], IsikDurum[idcar], AlarmDurum[idcar], KapiDurum[idcar], KaputDurum[idcar], BagajDurum[idcar], ObjeDurum[idcar]);
					AracKaydetmeDurumu[idcar] = 1;
					AraciModifiyeEt(idcar);
					format(string, sizeof(string), "~n~Aracinizi park ettiniz. ~n~");
					GameTextForPlayer(playerid, string, 10000, 3);
					AracKaydet(idcar);
				}
				return 1;
			}
			else if(strcmp(x_nr,"gps",true) == 0)
		 	{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/arac gps [Araç ID]");
					return 1;
				}
				new aracid = strval(tmp);
			 	if(strcmp(DynamicCars[aracid][CarOwner],pName,true))
			 	{
			 		HataMesajiGonder(playerid, "Sadece kendi aracýnýza gps ile bakabilirsiniz.");
				    return 1;
				}
				if(DynamicCars[aracid][CarType] != 2 || DynamicCars[aracid][CarOwned] == 0)
				{
			 		HataMesajiGonder(playerid, "Sadece kendi aracýnýza gps ile bakabilirsiniz.");
				    return 1;
				}
				new Float:cwx2,Float:cwy2,Float:cwz2;
				format(string, sizeof(string), "Aracýnýz haritada iþaretlendi. Araç ID: %d  - Araç Model: %s",aracid,VehicleName[GetVehicleModel(aracid)-400]);
				BilgiMesajiGonder(playerid, string);
				GetVehiclePos(aracid, cwx2, cwy2, cwz2);
				SetPlayerCheckpoint(playerid,cwx2,cwy2,cwz2,5.0);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACGPS;
				AracKaydet(aracid);
				return 1;
		 	}
			else if(strcmp(x_nr,"bilgi",true) == 0)
			{
				new counter = 0;
				new plyName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
				for(new i; i != MAX_VEHICLES; i++)
				{
					new dist = CheckPlayerDistanceToVehicle(4, playerid, i);
					if(dist)
					{
						counter++;
					}
				}
				switch(counter)
				{
					case 0:
					{
						HataMesajiGonder(playerid, "Etrafýnýzda herhangi bir araç bulunmamaktadýr.");
					}
					case 1:
					{
						if(IsPlayerInAnyVehicle(playerid))
						{
							HataMesajiGonder(playerid, "Aracýn içerisindeyken bu komutu kullanamazsýnýz.");
							return 1;
						}
						for(new slot = 1; slot != MAX_VEHICLES; slot++)
						{
							new dist = CheckPlayerDistanceToVehicle(4, playerid, slot);
							if(dist)
							{
								format(string, sizeof(string), "Araç ID: %d | Araç model: %s | Araç sigorta: %d | Araç kaza sayýsý: %d",slot,VehicleName[GetVehicleModel(slot)-400], DynamicCars[slot][cSigorta], DynamicCars[slot][cKazaSayi]);
								BilgiMesajiGonder(playerid, string);
							}
						}
						return 1;
					}
					default:
					{
						HataMesajiGonder(playerid, "Yakýnýnýzda birden çok araç bulunuyor.");
						return 1;
					}
				}
				return 1;
			}
			else if(strcmp(x_nr,"liste",true) == 0)
		 	{
		 	    new sayi2 = 0;
			    new aName[24];
			    GetPlayerName(playerid, aName, 24);
			    BilgiMesajiGonder(playerid, "Bütün araçlarýnýz:");
			    for(new slot = 1; slot != MAX_VEHICLES; slot++)
			    {
				    if(DynamicCars[slot][CarType] == 2 || DynamicCars[slot][CarOwned] == 1)
				    {
						if(strcmp(DynamicCars[slot][CarOwner],aName,true) == 0)
						{
							format(string, sizeof(string), "Araç ID: %d | Araç model: %s | Araç sigorta: %d | Araç kaza sayýsý: %d",slot,VehicleName[GetVehicleModel(slot)-400], DynamicCars[slot][cSigorta], DynamicCars[slot][cKazaSayi]);
							GenelMesajGonder(playerid, string);
							sayi2++;
						}
					}
				}
				if(sayi2 == 0)
				{
				    HataMesajiGonder(playerid, "Aracýnýz bulunmamaktadýr.");
                    return 1;
				}
				return 1;
			}
			else if(strcmp(x_nr,"spawn",true) == 0)
		 	{
			    new aName[24];
			    GetPlayerName(playerid, aName, 24);
			    for(new slot = 1; slot != MAX_VEHICLES; slot++)
			    {
				    if(DynamicCars[slot][CarType] == 2 || DynamicCars[slot][CarOwned] == 1)
				    {
						if(!strcmp(DynamicCars[slot][CarOwner],aName,true))
						{
						    if(IsVehicleOccupied(slot) == 0)
							{
								AracKaydetmeDurumu[slot] = 0;
							    SetVehicleToRespawn(slot);
				     			SetVehicleHealth(slot, DynamicCars[slot][CarHealth]);
                				UpdateVehicleDamageStatusEx(slot, DynamicCars[slot][Panels], DynamicCars[slot][Doors], DynamicCars[slot][Lights], DynamicCars[slot][Tires]);
				     			AracKaydetmeDurumu[slot] = 1;
								MotorDurumu[slot] = 0;
								SetVehicleParamsEx(slot, MotorDurumu[slot], IsikDurum[slot], AlarmDurum[slot], KapiDurum[slot], KaputDurum[slot], BagajDurum[slot], ObjeDurum[slot]);
				     		}
						}
					}
				}
				BilgiMesajiGonder(playerid, "Ýçerisinde sürücü olmayan bütün araçlarýnýz spawn edilmiþtir.");
				return 1;
			}
			else if(strcmp(x_nr,"kaput",true) == 0)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
						if(KaputDurum[vehicleid] == 0)
						{
							KaputDurum[vehicleid] = 1;
							SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
							return 1;
						}
						if(KaputDurum[vehicleid] == 1)
						{
							KaputDurum[vehicleid] = 0;
							SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
							return 1;
						}
				    }
				    else
					{
					    HataMesajiGonder(playerid, "Sürücü koltuðunda deðilsiniz.");
					}
				}
    			else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
		  	}
			else if(strcmp(x_nr,"bagaj",true) == 0)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
						if(BagajDurum[vehicleid] == 0)
						{
							BagajDurum[vehicleid] = 1;
							SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
							return 1;
						}
						if(BagajDurum[vehicleid] == 1)
						{
							BagajDurum[vehicleid] = 0;
							SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
							return 1;
						}
				    }
				    else
					{
					    HataMesajiGonder(playerid, "Sürücü koltuðunda deðilsiniz.");
					}
				}
    			else
				{
					HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
				}
		  	}
			else if(strcmp(x_nr,"kilit",true) == 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					new vehicleid = GetPlayerVehicleID(playerid);
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
					    if(strcmp(DynamicCars[GetPlayerVehicleID(playerid)][CarOwner],pName,true))
						{
							HataMesajiGonder(playerid, "Sadece kendi aracýnýzý kilitleyebilirsiniz.");
							return 1;
						}
						else if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] != 2 || DynamicCars[GetPlayerVehicleID(playerid)][CarOwned] == 0)
						{
							HataMesajiGonder(playerid, "Sadece kendi aracýnýzý kilitleyebilirsiniz.");
							return 1;
						}
						else if(KapiDurum[vehicleid] == 0)
						{
							KapiDurum[vehicleid] = 1;
							SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
							SendClientMessage(playerid, COLOR_RED, "Kapýlar Kilitlendi !");
							return 1;
						}
						else if(KapiDurum[vehicleid] == 1)
						{
							KapiDurum[vehicleid] = 0;
							SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
                            SendClientMessage(playerid, COLOR_RED, "Kapýlar Açýldý !");
       						return 1;
						}
				    }
				    else
					{
					    HataMesajiGonder(playerid, "Sürücü koltuðunda deðilsiniz.");
					}
				}
    			else
				{
				    new vehicleid;
			   		new counter = 0;
				    for(new i; i != MAX_VEHICLES; i++)
				    {
			     		new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			       		if(dist)
			       		{
			       		   	vehicleid = i;
			     			counter++;
			        	}
			    	}
				    switch(counter)
				    {
			     		case 0:
			       		{
			         		HataMesajiGonder(playerid, "Herhangi bir aracýn yakýnýnda deðilsiniz.");
				        }
			        	case 1:
				        {
				            if(strcmp(DynamicCars[vehicleid][CarOwner],pName,true))
							{
								HataMesajiGonder(playerid, "Sadece kendi aracýnýzý kilitleyebilirsiniz.");
								return 1;
							}
							else if(DynamicCars[vehicleid][CarType] != 2 || DynamicCars[vehicleid][CarOwned] == 0)
							{
								HataMesajiGonder(playerid, "Sadece kendi aracýnýzý kilitleyebilirsiniz.");
								return 1;
							}
							else if(KapiDurum[vehicleid] == 0)
							{
								KapiDurum[vehicleid] = 1;
								SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
								SendClientMessage(playerid, COLOR_RED, "Kapýlar Kilitlendi !");
								return 1;
							}
							else if(KapiDurum[vehicleid] == 1)
							{
								KapiDurum[vehicleid] = 0;
								SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
	                            SendClientMessage(playerid, COLOR_RED, "Kapýlar Açýldý !");
	       						return 1;
							}
						}
				  		default:
				    	{
				  			HataMesajiGonder(playerid, "Yakýnýnýzda birden çok araç bulunmaktadýr.");
				       }
				    }
				}
		  	}
			else if(strcmp(x_nr,"satinal",true) == 0)
			{
		 		if(PlayerToPoint(5.0, playerid, DynamicFactions[4][fX],DynamicFactions[4][fY],DynamicFactions[4][fZ]))
		   		{
		   		    if(SunucuBilgi[AracDurum] == 0)
		   		    {
		   		        HataMesajiGonder(playerid, "Araç satýn alýmý yöneticiler tarafýndan kapatýlmýþtýr.");
		   		        return 1;
		   		    }
			    	new yazi[1204];
					format(yazi,1204,"Almak istediðiniz aracýn ismini veya ID'sini giriniz:");
					ShowPlayerDialog(playerid,9997,DIALOG_STYLE_INPUT,"Galeri",yazi,"Evet","Kapat");
					return 1;
		        }
		       	else
		   		{
					HataMesajiGonder(playerid, "Galeride deðilsiniz.");
		        }
		 	}
		  	else
		   	{
	            BilgiMesajiGonder(playerid, "Araç sistemi");
				GenelMesajGonder(playerid, "/arac satinal || /arac sigorta || /arac park || /arac liste");
				GenelMesajGonder(playerid, "/arac gps || /arac kilit || /arac bilgi || /arac sat ||  /arac imha");
				GenelMesajGonder(playerid, "/arac kirala || /arac kaput || /arac bagaj");
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
				    BilgiMesajiGonder(playerid, "Araç sistemi - Yönetici komutlarý");
				    GenelMesajGonder(playerid, "/arac yarat || /arac sil || /arac sahip || /arac fiyat || /arac modifiye || /arac satilikdurum");
				}
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/tamir",true)==0)
	{
	    new result;
   		new counter = 0;
	    for(new i; i != MAX_VEHICLES; i++)
	    {
     		new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
       		if(dist)
       		{
       		    result = i;
     			counter++;
        	}
    	}
	    switch(counter)
	    {
     		case 0:
       		{
         		HataMesajiGonder(playerid, "Herhangi bir aracýn yakýnýnda deðilsiniz.");
	        }
        	case 1:
	        {
		        if(PlayerToPoint(20.0, playerid, DynamicFactions[5][fX],DynamicFactions[5][fY],DynamicFactions[5][fZ]))
				{
				    if(PlayerInfo[playerid][pFaction] == 6 || PlayerInfo[playerid][pAdmin] >= 3)
				    {
						new Float:AracCani;
						GetVehicleHealth(result, AracCani);
						if(ModifiyeYapiyor[playerid] == 1)
						{
			    			HataMesajiGonder(playerid, "Herhangi bir aracý modifiye ederken bu komutu kullanamazsýnýz.");
			       			return 1;
			 			}
						if(IsPlayerInAnyVehicle(playerid))
						{
			    			HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde bu komutu kullanamazsýnýz.");
			       			return 1;
			 			}
		 				if(TamirEdiyor[playerid] == 1)
		 				{
		 				    TamirEdiyor[playerid] = 0;
							AracTamirOluyor[result] = 0;
		 				    TogglePlayerControllable(playerid, 1);
		 				    PlayerActionMessage(playerid, 15.0, "aracý tamir etmeyi býrakýr.");
		    				BilgiMesajiGonder(playerid, "Tamir etmeyi býraktýnýz.");
		       				return 1;
		 				}
		 				if(AracCani == 1000.000)
		 				{
		    				HataMesajiGonder(playerid, "Aracýn zaten hasarý bulunmamaktadýr.");
		       				return 1;
		 				}
		 				if(AracTamirOluyor[result] == 1)
		 				{
		    				HataMesajiGonder(playerid, "Araç zaten biri tarafýndan tamir ediliyor.");
		       				return 1;
		 				}
						new Float:x;
						new Float:y;
						GetXYInFrontOfVehicle(result, x, y, -5);
	 	    			TogglePlayerControllable(playerid, 0);
	 	    			TamirArac[playerid] = result;
	 	    			AracTamirOluyor[result] = 1;
	 	    			PlayerActionMessage(playerid, 15.0, "aracý tamir etmeye baþlar.");
	 	    			if(AracCani > 700.000)
	 	    			{
				  			TamirEdiyor[playerid] = 1;
				  			if(AracOncedenTamirEdiliyordu[result] == 0)
							{
		  						TamirSuresi[result] = 50;
							}
							AracOncedenTamirEdiliyordu[result] = 1;
							new form[128];
							format(form, sizeof(form), "%d saniye kalmýþtýr.", TamirSuresi[result]);
							PlayerDoMessage(playerid,15.0,form);
		  					return 1;
						}
	 	    			if(AracCani >= 650.000)
	 	    			{
				  			TamirEdiyor[playerid] = 1;
				  			if(AracOncedenTamirEdiliyordu[result] == 0)
							{
		  						TamirSuresi[result] = 75;
							}
							AracOncedenTamirEdiliyordu[result] = 1;
							new form[128];
							format(form, sizeof(form), "%d saniye kalmýþtýr.", TamirSuresi[result]);
							PlayerDoMessage(playerid,15.0,form);
		  					return 1;
						}
	 	    			if(AracCani >= 500.000)
	 	    			{
				  			TamirEdiyor[playerid] = 1;
				  			if(AracOncedenTamirEdiliyordu[result] == 0)
							{
		  						TamirSuresi[result] = 100;
							}
							AracOncedenTamirEdiliyordu[result] = 1;
							new form[128];
							format(form, sizeof(form), "%d saniye kalmýþtýr.", TamirSuresi[result]);
							PlayerDoMessage(playerid,15.0,form);
		  					return 1;
						}
	 	    			if(AracCani <= 300.000 || AracCani >= 300.000)
	 	    			{
				  			TamirEdiyor[playerid] = 1;
				  			if(AracOncedenTamirEdiliyordu[result] == 0)
							{
		  						TamirSuresi[result] = 150;
							}
							AracOncedenTamirEdiliyordu[result] = 1;
							new form[128];
							format(form, sizeof(form), "%d saniye kalmýþtýr.", TamirSuresi[result]);
							PlayerDoMessage(playerid,15.0,form);
		  					return 1;
						}
	            	}
	            	else
	            	{
		  				HataMesajiGonder(playerid, "Tamirhane çalýþaný deðilsiniz.");
	            	}
	            }
	            else
	            {
		  			HataMesajiGonder(playerid, "Tamirhanede deðilsiniz.");
				}
			}
	  		default:
	    	{
				HataMesajiGonder(playerid, "Yakýnýnýzda birden çok araç bulunmaktadýr.");
	       }
	    }
    	return 1;
	}
	if(strcmp(cmd,"/tamirbitir",true)==0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
	 		if(PlayerToPoint(20.0, playerid, DynamicFactions[5][fX],DynamicFactions[5][fY],DynamicFactions[5][fZ]))
			{
		 		if(TamirEdiyor[playerid] == 1)
		 		{
				    TamirSuresi[TamirArac[playerid]] = 0;
				    BilgiMesajiGonder(playerid, "Tamiriniz otomatik olarak bitirilmiþtir.");
				}
			}
		}
		else
		{
		    YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd,"/modifiye",true)==0)
	{
	    new result;
   		new counter = 0;
	    for(new i; i != MAX_VEHICLES; i++)
	    {
     		new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
       		if(dist)
       		{
       		    result = i;
     			counter++;
        	}
    	}
	    switch(counter)
	    {
     		case 0:
       		{
         		HataMesajiGonder(playerid, "Herhangi bir aracýn yakýnýnda deðilsiniz.");
	        }
        	case 1:
	        {
		        if(PlayerToPoint(20.0, playerid, DynamicFactions[6][fX],DynamicFactions[6][fY],DynamicFactions[6][fZ]))
				{
				    if(PlayerInfo[playerid][pFaction] == 6 || PlayerInfo[playerid][pAdmin] >= 3)
				    {
						if(TamirEdiyor[playerid] == 1)
						{
			    			HataMesajiGonder(playerid, "Herhangi bir aracý tamir ederken bu komutu kullanamazsýnýz.");
			       			return 1;
			 			}
					 	if(IsPlayerInAnyVehicle(playerid))
						{
		    				HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde bu komutu kullanamazsýnýz.");
		       				return 1;
		 				}
		 				if(ModifiyeYapiyor[playerid] == 1)
		 				{
							ModifiyeYapiyor[playerid] = 0;
							ModifiyeTip[playerid] = 0;
							ModifiyeZaman[playerid] = 0;
							ModifiyeObje[playerid] = 0;
							ModifiyeObje2[playerid] = 0;
							ModifiyeArac[playerid] = 0;
							ModifiyeUcret[playerid] = 0;
							TogglePlayerControllable(playerid, 1);
							BilgiMesajiGonder(playerid, "Modifiye yapmayý býraktýnýz.");
							PlayerActionMessage(playerid, 15.0, "aracý modifiye yapmayý býrakýr.");
		       				return 1;
		 				}
		 				if(MotorDurumu[result] == 1)
		 				{
							HataMesajiGonder(playerid, "Motoru açýk olan araçlarý modifiye edemezsiniz.");
							return 1;
		 				}
		 				if(DynamicCars[result][CarType] == 8 || DynamicCars[result][CarType] == 9)
		 				{
							HataMesajiGonder(playerid, "Kiralýk araçlarý modifiye edemezsiniz.");
							return 1;
		 				}
		 				ModifiyeArac[playerid] = result;
						ShowPlayerDialog(playerid, 401, DIALOG_STYLE_LIST, "TransFender","Renk 1\nRenk 2\nPaintjob\nRüzgarlýklar\nÇatýlýklar\nYan Tamponlar\nEgzozlar\nJantlar\nÖn Tamponlar\nArka Tamponlar\nDiðer Sistemler", "Seç", "Çýkýþ");
	            	}
	            	else
	            	{
		  				HataMesajiGonder(playerid, "Tamirhane çalýþaný deðilsiniz.");
	            	}
	            }
	            else
	            {
		  			HataMesajiGonder(playerid, "Tamirhanede deðilsiniz.");
				}
			}
	  		default:
	    	{
	  			HataMesajiGonder(playerid, "Yakýnýnýzda birden çok araç bulunmaktadýr.");
	       }
	    }
    	return 1;
	}
	if(strcmp(cmd,"/modifiyebitir",true)==0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
	 		if(PlayerToPoint(20.0, playerid, DynamicFactions[5][fX],DynamicFactions[5][fY],DynamicFactions[5][fZ]))
			{
		 		if(ModifiyeYapiyor[playerid] == 1)
		 		{
				    ModifiyeZaman[playerid] = 0;
				    BilgiMesajiGonder(playerid, "Modifiyeniz otomatik olarak bitirilmiþtir.");
				}
			}
		}
		else
		{
		    YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd,"/re-login",true)==0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde bu komutu kullanamazsýnýz.");
			return 1;
		}
		OyuncuSilahlariniKaydet(playerid);
		PlayerInfo[playerid][OyunDurum] = 0;
		RemovePlayerAttachedObject(playerid, 0);
		RemovePlayerAttachedObject(playerid, 1);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(playerid, 3);
		RemovePlayerAttachedObject(playerid, 4);
		DisablePlayerCheckpoint(playerid);
		HideProgressBarForPlayer(playerid, BenzinGosterge[playerid]);
	    DestroyProgressBar(Bar:BenzinGosterge[playerid]);
	    OnPlayerDisconnect(playerid, 1);
	    OnPlayerConnect(playerid);
	    return 1;
	}
	/*if(strcmp(cmd, "/tanis", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new query[128];
			tmp = strtok(cmdtext, idx);
			new playa;
			playa = SQLdenBul(strval(tmp));
			if (ProxDetectorS(5.0, playerid, playa))
			{
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/tanis [ID]");
					return 1;
				}
			    if(TeklifAsamasi[playerid] == 1)
			    {
                    HataMesajiGonder(playerid, "Zaten bir tanýþma isteðinde bulunmuþsunuz.");
					return 1;
			    }
			    if(TeklifAsamasi[playa] == 1)
			    {
                    HataMesajiGonder(playerid, "Tanýþmak istediðiniz kiþiye zaten bir istekte bulunulmuþ.");
					return 1;
			    }
			    if(TanismaDurum[playa] == 1)
			    {
			        HataMesajiGonder(playerid, "Tanýþmak istediðiniz yönetici, tanýþma tekliflerini kapatmýþ.");
			        return 1;
			    }
			    if(playa == playerid)
			    {
					HataMesajiGonder(playerid, "Kendi kendinize tanýþma isteði gönderemezsiniz.");
			        return 1;
			    }
			    if(playa == INVALID_PLAYER_ID)
			    {
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
			        return 1;
			    }
				format(query, sizeof(query), "SELECT * FROM `tanis` WHERE `TaniyanKisi` = '%d' AND `TaninanKisi` = '%d'", PlayerInfo[playerid][pSQLid], PlayerInfo[playa][pSQLid]);
				mysql_query(query);
				mysql_store_result();
				mysql_num_rows();
				if(mysql_num_rows() >= 1 || PlayerInfo[playa][pUnlu] == 1)
				{
					HataMesajiGonder(playerid, "Tanýþtýðýnýz bir kiþiye yada ünlü birine tanýþma isteði gönderemezsiniz.");
			        return 1;
				}
				tmp = strtok(cmdtext, idx);
	            TeklifAsamasi[playa] = 1;
	            TeklifAsamasi[playerid] = 1;
	            TeklifEden[playa] = playerid;
			 	ArkadasEkle(PlayerInfo[playa][pSQLid],PlayerInfo[playerid][pSQLid]);
				format(string, sizeof(string),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi sizinle,\ntanýþmak istiyor ne cevap\nvermek istersiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playerid, playa));
  				ShowPlayerDialog(playa, 20,DIALOG_STYLE_MSGBOX,"Tanýþma",string,"Olumlu","Olumsuz");
				format(string, sizeof(string), "%s adlý kiþiye tanýþma isteði gönderdiniz.", GetPlayerNameEx2(playa, playerid));
				BilgiMesajiGonder(playerid, string);
            }
            else
            {
                HataMesajiGonder(playerid, "Tanýþmak istediðiniz kiþiye uzaktasýnýz.");
            }
		}
		return 1;
	}*/
	
	if(strcmp(cmd,"/ackapat",true)==0)
	{
	 	if(IsPlayerConnected(playerid))
	 	{
			new x_info[128];
			x_info = strtok(cmdtext, idx);
			if(!strlen(x_info))
			{
				KullanimMesajiGonder(playerid, "/ackapat [Ýsim]");
				GenelMesajGonder(playerid, "faction - om - ceptel - hoparlor");
				if(PlayerInfo[playerid][pAdmin] == 1)
				{
				    BilgiMesajiGonder(playerid, "/ackapat - Yonetici komutlarý");
				    GenelMesajGonder(playerid, "tanis");
				}
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
				    BilgiMesajiGonder(playerid, "/ackapat - Yonetici komutlarý");
				    GenelMesajGonder(playerid, "gooc - ooc - arac - giris - tanis");
				}
				return 1;
			}
			if(strcmp(x_info,"tanis",true) == 0)
			{
			    if(PlayerInfo[playerid][pAdmin] != 0)
			    {
			        if(TanismaDurum[playerid] == 1)
			        {
			            TanismaDurum[playerid] = 0;
			            BilgiMesajiGonder(playerid,"Tanýþma tekliflerinizi açtýnýz.");
			            return 1;
			        }
			        else if(TanismaDurum[playerid] == 0)
			        {
			            TanismaDurum[playerid] = 1;
			            BilgiMesajiGonder(playerid,"Tanýþma tekliflerinizi kapattýnýz.");
			            return 1;
			        }
   				}
			}
			if(strcmp(x_info,"faction",true) == 0)
			{
				if(FactionDuyma[playerid] == 1)
				{
					FactionDuyma[playerid] = 0;
					BilgiMesajiGonder(playerid, "Artýk oluþum konuþmalarýný duymayacaksýnýz.");
				}
				else
				{
					FactionDuyma[playerid] = 1;
					BilgiMesajiGonder(playerid, "Artýk oluþum konuþmalarýný duyacaksýnýz.");
				}
			}
	  		else if(strcmp(x_info,"om",true) == 0)
			{
				if(PMsEnabled[playerid])
				{
					BilgiMesajiGonder(playerid, "Artýk özel mesajlarý almayacaksýnýz.");
					PMsEnabled[playerid] = 0;
				}
				else
				{
					BilgiMesajiGonder(playerid, "Artýk özel mesajlarý alacaksýnýz.");
					PMsEnabled[playerid] = 1;
				}
			}
	  		else if(strcmp(x_info,"ceptel",true) == 0)
			{
				if(PhoneOnline[playerid])
				{
					BilgiMesajiGonder(playerid, "Cep telefonunuzu kapattýnýz.");
	            	PhoneOnline[playerid] = 0;
				}
				else
				{
					BilgiMesajiGonder(playerid, "Cep telefonunu açtýnýz.");
					PhoneOnline[playerid] = 1;
				}
			}
	  		else if(strcmp(x_info,"hoparlor",true) == 0)
			{
				if(PlayerInfo[playerid][pPhoneNumber] != 0 && PlayerInfo[playerid][pPhoneC] != 255)
				{
					if(SpeakerPhone[playerid])
					{
						BilgiMesajiGonder(playerid, "Hoparlör kapatýldý.");
						SpeakerPhone[playerid] = 0;
					}
					else
					{
						BilgiMesajiGonder(playerid, "Hoparlör açýldý.");
						SpeakerPhone[playerid] = 1;
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Telefonunuz bulunmamaktadýr.");
				}
			}
	  		else if(strcmp(x_info,"gooc",true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
				    if(SunucuBilgi[GOOCDurum] == 1)
				    {
				        SunucuBilgi[GOOCDurum] = 0;
				        format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}Global OOC kullanýmý disaktif edilmiþtir.");
						TopluMesajGonder(string);
						SunucuBilgiKaydet();
					}
					else
					{
						SunucuBilgi[GOOCDurum] = 1;
						format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}Global OOC kullanýmý aktif edilmiþtir.");
						TopluMesajGonder(string);
						SunucuBilgiKaydet();
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
			}
	  		else if(strcmp(x_info,"ooc",true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
				    if(SunucuBilgi[OOCDurum] == 1)
				    {
				        SunucuBilgi[OOCDurum] = 0;
				        format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}OOC kullanýmý disaktif edilmiþtir.");
						TopluMesajGonder(string);
						SunucuBilgiKaydet();
					}
					else
					{
						SunucuBilgi[OOCDurum] = 1;
						format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}OOC kullanýmý aktif edilmiþtir.");
						TopluMesajGonder(string);
						SunucuBilgiKaydet();
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
			}
	  		else if(strcmp(x_info,"arac",true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
				    if(SunucuBilgi[AracDurum] == 1)
				    {
				        SunucuBilgi[AracDurum] = 0;
				        format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}Araç satýn alýmý disaktif edilmiþtir.");
						TopluMesajGonder(string);
						SunucuBilgiKaydet();
					}
					else
					{
						SunucuBilgi[AracDurum] = 1;
						format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}Araç satýn alýmý aktif edilmiþtir.");
						TopluMesajGonder(string);
						SunucuBilgiKaydet();
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
			}
	  		else if(strcmp(x_info,"giris",true) == 0)
			{
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
				    if(SunucuyaGiris == 1)
				    {
				        SunucuyaGiris = 0;
				        format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}Sunucuya giriþ disaktif edilmiþtir.");
						TopluMesajGonder(string);
					}
					else
					{
						SunucuyaGiris = 1;
						format(string, sizeof(string), "{FF0000}[Yönetici Duyurusu]: {E6E6E6}Sunucuya giriþ aktif edilmiþtir.");
						TopluMesajGonder(string);
					}
				}
				else
				{
				    YetersizYetki(playerid, cmdtext);
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/factionbankaparacek", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFaction] != 255)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/factionbankaparacek [Miktar]");
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/factionbankaparacek [Miktar]");
					return 1;
				}
				if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]))
				{
				    if(PlayerInfo[playerid][pRank] == 1)
				    {
						if(DynamicFactions[PlayerInfo[playerid][pFaction]][fBank] >= cashdeposit)
						{
							GivePlayerCash(playerid,cashdeposit);
							DynamicFactions[PlayerInfo[playerid][pFaction]][fBank]=DynamicFactions[PlayerInfo[playerid][pFaction]][fBank]-cashdeposit;
							format(string, sizeof(string), "Oluþum bankanýzdan %d$ para çektiniz, geri kalan para: %d$", cashdeposit,DynamicFactions[PlayerInfo[playerid][pFaction]][fBank]);
							BilgiMesajiGonder(playerid, string);
		                    FactionKaydet(PlayerInfo[playerid][pFaction]);
							return 1;
						}
	 					else
						{
							HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
						}
					}
 					else
					{
						HataMesajiGonder(playerid, "Oluþum lideri deðilsiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Bankada deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
			}
		}
		return 1;
	}
  	if(strcmp(cmd, "/isyerimateryalkoy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pBizKey];
			if(bouse != 255 && strcmp(playername, Businesses[bouse][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/isyeriparacek [Miktar]");
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/isyeriparacek [Miktar]");
					return 1;
				}
				if (PlayerToPoint(20.0, playerid,Businesses[bouse][ExitX],Businesses[bouse][ExitY],Businesses[bouse][ExitZ]))
				{
				    if(Businesses[bouse][Till] >= cashdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
							GivePlayerCash(playerid,cashdeposit);
							Businesses[bouse][Till]=Businesses[bouse][Till]-cashdeposit;
							format(string, sizeof(string), "Ýþyeri kasasýndan %d$ para çektiniz, geri kalan para: %d$", cashdeposit,Businesses[bouse][Till]);
							BilgiMesajiGonder(playerid, string);
							IsyeriKaydet(bouse);
							return 1;
						}
					}
	 				else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Ýþyerinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir iþyerinin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
  	if(strcmp(cmd, "/isyeriparacek", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pBizKey];
			if(bouse != 255 && strcmp(playername, Businesses[bouse][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/isyeriparacek [Miktar]");
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/isyeriparacek [Miktar]");
					return 1;
				}
				if (PlayerToPoint(20.0, playerid,Businesses[bouse][ExitX],Businesses[bouse][ExitY],Businesses[bouse][ExitZ]))
				{
				    if(Businesses[bouse][Till] >= cashdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
							GivePlayerCash(playerid,cashdeposit);
							Businesses[bouse][Till]=Businesses[bouse][Till]-cashdeposit;
							format(string, sizeof(string), "Ýþyeri kasasýndan %d$ para çektiniz, geri kalan para: %d$", cashdeposit,Businesses[bouse][Till]);
							BilgiMesajiGonder(playerid, string);
							IsyeriKaydet(bouse);
							return 1;
						}
					}
	 				else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Ýþyerinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir iþyerinin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/isyeriurunkoy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	new bizkey = PlayerInfo[playerid][pBizKey];
	    	new playername[MAX_PLAYER_NAME];
	    	GetPlayerName(playerid,playername,sizeof(playername));
	        if(bizkey != 255 && strcmp(playername, Businesses[bizkey][Owner], true) == 0)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/isyeriurunkoy [Miktar]");
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/isyeriurunkoy [Miktar]");
					return 1;
				}
				if(PlayerToPoint(5.0,playerid,Businesses[bizkey][ExitX],Businesses[bizkey][ExitY],Businesses[bizkey][ExitZ]))
				{
					if(PlayerInfo[playerid][pProducts] >= cashdeposit)
					{
						PlayerInfo[playerid][pProducts] -= cashdeposit;
						Businesses[bizkey][Products] += cashdeposit;
						format(string, sizeof(string), "Ýþyerine %d tane ürün koydunuz, yeni ürün: %d", cashdeposit,Businesses[bizkey][Products]);
						BilgiMesajiGonder(playerid, string);
				        IsyeriKaydet(bizkey);
						return 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Ýþ yerinizin içerisinde deðilsiniz.");
				}
   			}
			else
			{
			    HataMesajiGonder(playerid, "Herhangi bir iþyerinin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/factionparayatir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFaction] != 255)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/factionparayatir [Miktar]");
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/factionparayatir [Miktar]");
					return 1;
				}
				if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]))
				{
					if(GetPlayerCash(playerid) >= cashdeposit)
					{
						GivePlayerCash(playerid,-cashdeposit);
						DynamicFactions[PlayerInfo[playerid][pFaction]][fBank]=cashdeposit+DynamicFactions[PlayerInfo[playerid][pFaction]][fBank];
						format(string, sizeof(string), "Oluþum bankasýna %d$ para koydunuz, yeni para: %d$", cashdeposit,DynamicFactions[PlayerInfo[playerid][pFaction]][fBank]);
						BilgiMesajiGonder(playerid, string);
	                    FactionKaydet(PlayerInfo[playerid][pFaction]);
						return 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Bankada deðilsiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
			}
		}
		return 1;
	}
   	if(strcmp(cmd, "/factionbankasi", true) == 0)
	{
		if(PlayerInfo[playerid][pFaction] != 255)
	    {
	 		if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]))
			{
				format(string, sizeof(string), "Oluþum banka hesabý: %d$", DynamicFactions[PlayerInfo[playerid][pFaction]][fBank]);
				BilgiMesajiGonder(playerid, string);
			}
			else
			{
	  			HataMesajiGonder(playerid, "Bankada deðilsiniz.");
			}
		}
		else
		{
			HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
		}
		return 1;
	}
 	if(strcmp(cmd, "/evparacek", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pHouseKey];
			if(PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evparacek [Miktar]");
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evparacek [Miktar]");
					return 1;
				}
				if (PlayerToPoint(20.0, playerid,Houses[bouse][ExitX],Houses[bouse][ExitY],Houses[bouse][ExitZ]))
				{
				    if(Houses[bouse][Money] >= cashdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
							GivePlayerCash(playerid,cashdeposit);
							Houses[bouse][Money]=Houses[bouse][Money]-cashdeposit;
							format(string, sizeof(string), "Ev kasanýzdan %d$ para çektiniz, yeni para: %d$", cashdeposit,Houses[bouse][Money]);
							BilgiMesajiGonder(playerid, string);
							EvKaydet(bouse);
							return 1;
						}
					}
 					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Evinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
  	if(strcmp(cmd, "/evparayatir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pHouseKey];
			if(bouse != 255 && strcmp(playername, Houses[bouse][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					HataMesajiGonder(playerid, "/evparayatir [Miktar]");
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					HataMesajiGonder(playerid, "/evparayatir [Miktar]");
					return 1;
				}
				if (PlayerToPoint(20.0, playerid,Houses[bouse][ExitX],Houses[bouse][ExitY],Houses[bouse][ExitZ]))
				{
				    if(GetPlayerCash(playerid) >= cashdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
					        if(Houses[bouse][Money] < 150000)
					        {
					            if(cashdeposit < 150001)
					            {
									GivePlayerCash(playerid,-cashdeposit);
									Houses[bouse][Money]=Houses[bouse][Money]+cashdeposit;
									format(string, sizeof(string), "Evinizin kasasýna %d$ para koydunuz, yeni ücret: %d$", cashdeposit,Houses[bouse][Money]);
									BilgiMesajiGonder(playerid, string);
									EvKaydet(bouse);
								}
 								else
								{
	                                HataMesajiGonder(playerid, "Evinizin kasasýna $150.000'den fazla koyamazsýnýz.");
								}
							}
							else
							{
                                HataMesajiGonder(playerid, "Evinizin kasasýna $150.000'den fazla koyamazsýnýz.");
							}
						}
					}
 					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
                    HataMesajiGonder(playerid, "Evinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/evuyusturucual", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pHouseKey];
			if(PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evuyusturucual [Miktar]");
					return 1;
				}
				new materialsdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evuyusturucual [Miktar]");
					return 1;
				}
				if (PlayerToPoint(100.0, playerid,Houses[bouse][ExitX],Houses[bouse][ExitY],Houses[bouse][ExitZ]))
				{
				    if(Houses[bouse][Drugs] >= materialsdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
							PlayerInfo[playerid][pDrugs] += materialsdeposit;
							Houses[bouse][Drugs]=Houses[bouse][Drugs]-materialsdeposit;
							format(string, sizeof(string), "Ev kasanýzdan %d gram uyuþturucu aldýnýz, yeni uyuþturucu: %d gram.", materialsdeposit,Houses[bouse][Materials]);
							BilgiMesajiGonder(playerid, string);
							EvKaydet(bouse);
							return 1;
						}
					}
 					else
					{
						HataMesajiGonder(playerid, "Evinizin içerisinde deðilsiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Evinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evuyusturucukoy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pHouseKey];
			if(PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evuyusturucukoy [Miktar]");
					return 1;
				}
				new materialsdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evuyusturucukoy [Miktar]");
					return 1;
				}
				if (PlayerToPoint(100.0, playerid,Houses[bouse][ExitX],Houses[bouse][ExitY],Houses[bouse][ExitZ]))
				{
				    if(PlayerInfo[playerid][pDrugs] >= materialsdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
					        if(Houses[bouse][Drugs] < 500)
					        {
					            if(materialsdeposit < 501)
					            {
									PlayerInfo[playerid][pDrugs] -= materialsdeposit;
									Houses[bouse][Drugs]=Houses[bouse][Drugs]+materialsdeposit;
									format(string, sizeof(string), "Ev kasanýza %d gram uyuþturucu koydunuz, yeni uyuþturucu: %d gram.", materialsdeposit,Houses[bouse][Materials]);
									BilgiMesajiGonder(playerid, string);
									EvKaydet(bouse);
								}
								else
								{
	                                HataMesajiGonder(playerid, "Kasaya 500 gramdan fazla uyuþturucu koyamazsýnýz.");
								}
							}
							else
							{
                                HataMesajiGonder(playerid, "Kasaya 500 gramdan fazla uyuþturucu koyamazsýnýz.");
							}
						}
					}
 					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Evinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
   	if(strcmp(cmd, "/evmateryalkoy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pHouseKey];
			if(PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evmateryalkoy [Miktar]");
					return 1;
				}
				new materialsdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evmateryalkoy [Miktar]");
					return 1;
				}
				if (PlayerToPoint(100.0, playerid,Houses[bouse][ExitX],Houses[bouse][ExitY],Houses[bouse][ExitZ]))
				{
				    if(PlayerInfo[playerid][pMaterials] >= materialsdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
					        if(Houses[bouse][Materials] < 2000)
					        {
					            if(materialsdeposit < 2001)
					            {
									PlayerInfo[playerid][pMaterials] -= materialsdeposit;
									Houses[bouse][Materials]=Houses[bouse][Materials]+materialsdeposit;
									format(string, sizeof(string), "Ev kasanýza %d kadar materyal koydunuz, yeni materyal: %d", materialsdeposit,Houses[bouse][Materials]);
									BilgiMesajiGonder(playerid, string);
									EvKaydet(bouse);
								}
								else
								{
	                                HataMesajiGonder(playerid, "Kasaya 2000'den fazla materyal koyamazsýnýz.");
								}
							}
							else
							{
                                HataMesajiGonder(playerid, "Kasaya 2000'den fazla materyal koyamazsýnýz.");
							}
						}
					}
 					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Evinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
	}
	if(strcmp(cmd, "/evmateryalal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pHouseKey];
			if(PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evmateryalal [Miktar]");
					return 1;
				}
				new materialsdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/evmateryalal [Miktar]");
					return 1;
				}
				if (PlayerToPoint(100.0, playerid,Houses[bouse][ExitX],Houses[bouse][ExitY],Houses[bouse][ExitZ]))
				{
				    if(Houses[bouse][Materials] >= materialsdeposit)
				    {
					    if(GetPlayerVirtualWorld(playerid) == bouse)
					    {
							PlayerInfo[playerid][pMaterials] += materialsdeposit;
							Houses[bouse][Materials]=Houses[bouse][Materials]-materialsdeposit;
							format(string, sizeof(string), "Ev kasanýzdan %d kadar materyal aldýnýz, yeni materyal: %d", materialsdeposit,Houses[bouse][Materials]);
							BilgiMesajiGonder(playerid, string);
							EvKaydet(bouse);
							return 1;
						}
					}
 					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Evinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
	}
	
	if(strcmp(cmd, "/carpos",true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] == 5)
		{
		    if(!IsPlayerInAnyVehicle(playerid))
		    {
		        HataMesajiGonder(playerid,"Bir aracýn içerisinde olmalýsýnýz.");
		        return 1;
		    }
		    new Float:uzaklik,id;
			id = GetPlayerVehicleID(playerid);
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        KullanimMesajiGonder(playerid,"/acarpos [Uzaklýk] [+Pos]");
		        return 1;
		    }
		    uzaklik = floatstr(tmp);
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        KullanimMesajiGonder(playerid,"/acarpos [Uzaklýk] [+Pos]");
		        return 1;
		    }
		    new Float:pos;
			pos = floatstr(tmp);
		    if(pos > 5)
		    {
		        HataMesajiGonder(playerid,"+Pos, 5'in üzerinde olamaz.");
		        return 1;
		    }
		    if(pos < 0)
		    {
		        HataMesajiGonder(playerid,"+Pos, 0'in altýnda olamaz.");
		        return 1;
		    }
		    for(new c; c < MAX_VEHICLES+1; c++)
		    {
				if(c != id)
				{
					new Float:cX, Float:cY, Float:cZ;
					GetVehiclePos(c, cX, cY, cZ);
					if(VehicleToPoint(uzaklik, id, cX, cY, cZ))
					{
						new Float:ccX, Float:ccY, Float:ccZ;
					    GetVehiclePos(id, ccX, ccY, ccZ);
						new Float:Fark1, Float:Fark2;
						Fark1 = cX - ccX;
						Fark2 = cY - ccY;
						new Float: YeniPosX, Float: YeniPosY, Float: YeniPosZ;
						if(floatabs(Fark1) > floatabs(Fark2))
						{
						    if(Fark1 > 0)
						    {
						    	YeniPosX = cX-pos;
						    	YeniPosY = cY;
						    	YeniPosZ = ccZ;
						    	SetVehiclePos(id, YeniPosX, YeniPosY, YeniPosZ);
						    }
						    else
						    {
						        YeniPosX = cX+pos;
						    	YeniPosY = cY;
						    	YeniPosZ = ccZ;
						    	SetVehiclePos(id, YeniPosX, YeniPosY, YeniPosZ);
						    }
						}
						else
						{
						    if(Fark1 > 0)
						    {
						    	YeniPosX = cX;
						    	YeniPosY = cY-pos;
						    	YeniPosZ = ccZ;
	                        	SetVehiclePos(id, YeniPosX, YeniPosY, YeniPosZ);
	                        }
	                        else
	                        {
	                            YeniPosX = cX;
						    	YeniPosY = cY+pos;
						    	YeniPosZ = ccZ;
	                        	SetVehiclePos(id, YeniPosX, YeniPosY, YeniPosZ);
	                        }
	                    }
	                    new yazi[256];
	                    format(yazi,sizeof(yazi),"Kendi Aracýnýz: %d - Diðer Araç: %d",id,c);
	                    GenelMesajGonder(playerid,yazi);
	                    BilgiMesajiGonder(playerid,"Ýþlem tamamlandý.");
	                    return 1;
					}
				}
			}
		}
		else
		{
			YetersizYetki(playerid,cmdtext);
			return 1;
		}
	}
	
 	if(strcmp(cmd, "/paraver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/paraver [ID] [Miktar]");
				return 1;
			}
	        giveplayerid = SQLdenBul(strval(tmp));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/paraver [ID] [Miktar]");
				return 1;
			}
			new moneys,playermoney;
			moneys = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] < 2)
			{
				if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 3)
				{
					HataMesajiGonder(playerid, "3 seviye altý kiþiler $1000'dan fazla para veremezler.");
					return 1;
				}
			}
			if(moneys < 1 || moneys > 100000)
			{
			    HataMesajiGonder(playerid, "Para $1'dan küçük, $100.000'dan büyük olamaz.");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
					    if(giveplayerid != playerid)
					    {
							playermoney = GetPlayerCash(playerid);
							if (moneys > 0 && playermoney >= moneys)
							{
	       						GivePlayerCash(playerid, (0 - moneys));
								GivePlayerCash(giveplayerid, moneys);
								format(string, sizeof(string), "%d$ kadar parayý, %s adlý kiþiye verdiniz.", moneys, GetPlayerNameEx2(giveplayerid, playerid));
								BilgiMesajiGonder(playerid, string);
								format(string, sizeof(string), "%d$ kadar parayý, %s adlý kiþiden aldýnýz.",moneys, GetPlayerNameEx2(playerid, giveplayerid));
								BilgiMesajiGonder(giveplayerid, string);
								PlayerPlayerActionMessage(playerid,giveplayerid,5.0,"cebinden çýkarttýðý bir miktar parayý verir.");
								format(string, 256, "%s, %s[%d] adlý oyuncuya '%d' miktarýnda para verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),PlayerInfo[giveplayerid][pSQLid],moneys);
								YoneticiMesajiGonder(string);
								format(string, sizeof(string), "%s, %s adlý kiþiye %d$ verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys);
								ParaLog(string);
							}
							else
							{
								HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
							}
						}
      					else
						{
							HataMesajiGonder(playerid, "Kendi kendinize para veremezsiniz.");
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Para vereceðiniz kiþi size yakýn olmaktadýr.");
					}
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/silahver", true) == 0)
	{
 		tmp = strtok(cmdtext, idx);
   		if(!strlen(tmp))
		{
			KullanimMesajiGonder(playerid, "/silahver [SQL ID]");
			return 1;
		}
		giveplayerid = SQLdenBul(strval(tmp));
		new playa = giveplayerid;
		if(IsPlayerConnected(giveplayerid))
		{
  			if(giveplayerid != INVALID_PLAYER_ID)
	    	{
			    if(CopOnDuty[playerid] == 1)
				{
				HataMesajiGonder(playerid, "Ýþ baþýndayken bu komutu kullanamazsýnýz.");
				return 1;
   				}
				else
				{
					if(ProxDetectorS(5.0, playerid, giveplayerid))
						{
    						new gunID = GetPlayerWeapon(playerid);
    						//new gunAmmo = GetPlayerAmmo(playerid);
				    		if(gunID != 0)
				    		{
				        		if(gunID==22)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                    new gelenveri;
					                    new query[128];
										format(query, sizeof(query), "SELECT `9mm` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
										    RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											mmelinde[playerid]=0;
											format(query, sizeof(query), "UPDATE `ssayi` SET `9mm` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `9mm` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `9mm` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==23)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `spistol` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `spistol` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `spistol` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											spistolelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `spistol` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==25)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                new gelenveri;
					                new query[128];
										format(query, sizeof(query), "SELECT `shoutgun` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `shoutgun` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `shoutgun` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											shoutgunelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `shoutgun` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==28)
					            {
                 					if(Silahelinde[giveplayerid]==0)
					                {
                     					new gelenveri;
                     					new query[128];
										format(query, sizeof(query), "SELECT `uzi` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `uzi` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `uzi` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											uzielinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `uzi` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==30)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
                      					new gelenveri;
                      					new query[128];
										format(query, sizeof(query), "SELECT `ak47` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `ak47` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `ak47` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											ak47elinde[playerid]=0;
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `ak47` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==31)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `m4` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `m4` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `m4` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											m4elinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `m4` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==32)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
                     					new gelenveri;
                     					new query[128];
										format(query, sizeof(query), "SELECT `tec9` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `tec9` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `tec9` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											tec9elinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `tec9` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==34)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
                     					new gelenveri;
                     					new query[128];
										format(query, sizeof(query), "SELECT `sniper` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `sniper` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `sniper` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											sniperelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `sniper` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==4)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `bicak` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `bicak` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `bicak` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											bicakelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `bicak` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==8)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `katana` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `katana` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `katana` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											katanaelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `katana` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==15)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `baston` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `baston` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `baston` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											bastonelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `baston` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==1)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
                     					new gelenveri;
                     					new query[128];
										format(query, sizeof(query), "SELECT `musta` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `musta` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `musta` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											mustaelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `musta` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==2)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
                     					new gelenveri;
                     					new query[128];
										format(query, sizeof(query), "SELECT `golf` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `golf` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `golf` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											golfelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `golf` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==6)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
                     					new gelenveri;
                     					new query[128];
										format(query, sizeof(query), "SELECT `kurek` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `kurek` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `kurek` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											kurekelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `kurek` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==14)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `cicek` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `cicek` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `cicek` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											cicekelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `cicek` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==5)
					            {
					                 if(Silahelinde[giveplayerid]==0)
					                {
                     					new gelenveri;
                     					new query[128];
										format(query, sizeof(query), "SELECT `sopa` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `sopa` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `sopa` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
										    Silahelinde[playerid]=0;
											sopaelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `sopa` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
		    						}
								}
								else if(gunID==18)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `molotof` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										RemovePlayerWeapon(playerid, gunID);
										Silahelinde[playerid]=0;
										molotofelinde[playerid]=0;
										PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `molotof` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `molotof` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `molotof` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==26)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `sawnoff` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										RemovePlayerWeapon(playerid, gunID);
										Silahelinde[playerid]=0;
										sawnoffelinde[playerid]=0;
										PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `sawnoff` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `sawnoff` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `sawnoff` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==29)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `mp5` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `mp5` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `mp5` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
											Silahelinde[playerid]=0;
											mp5elinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `mp5` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==33)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `tufek` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `tufek` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `tufek` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
											Silahelinde[playerid]=0;
											tufekelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `tufek` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==35)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `roket` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `roket` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `roket` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
											Silahelinde[playerid]=0;
											roketelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `roket` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==42)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new gelenveri;
					                	new query[128];
										format(query, sizeof(query), "SELECT `yangin` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										RemovePlayerWeapon(playerid, gunID);
										Silahelinde[playerid]=0;
										yanginelinde[playerid]=0;
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `yangin` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `yangin` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `yangin` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==43)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new query[128];
										new gelenveri;
										format(query, sizeof(query), "SELECT `kamera` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `kamera` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `kamera` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											RemovePlayerWeapon(playerid, gunID);
											Silahelinde[playerid]=0;
											kameraelinde[playerid]=0;
											PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `kamera` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
								else if(gunID==41)
					            {
					                if(Silahelinde[giveplayerid]==0)
					                {
					                	new query[128];
										new gelenveri;
										format(query, sizeof(query), "SELECT `spray` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										RemovePlayerWeapon(playerid, gunID);
										Silahelinde[playerid]=0;
										sprayelinde[playerid]=0;
										PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"elindeki silahý verir.");
										if(gelenveri != 0)
										{
											format(query, sizeof(query), "UPDATE `ssayi` SET `spray` = '%d' WHERE `ad` = '%s'", gelenveri-1, GetPlayerNameSave(playerid));
											mysql_query(query);
											format(query, sizeof(query), "UPDATE `osilah` SET `spray` = '1' WHERE `ad` = '%s'",GetPlayerNameSave(giveplayerid));
											mysql_query(query);
											if(gelenveri-1==0)
											{
												format(query, sizeof(query), "UPDATE `osilah` SET `spray` = '0' WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
												mysql_query(query);
											}
										}
									}
								}
         						return 1;
				    		}
				    		else
				    		{
        						HataMesajiGonder(playerid, "Elinizde herhangi bir silah bulunmuyor.");
				        		return 1;
	   						}
						}
						else
						{
	    					HataMesajiGonder(playerid, "Silah vermek istediðiniz oyuncu yakýnýnýzda deðil.");
							return 1;
						}
				}
			}
		}
	}
 	if(strcmp(cmd,"/lisanslar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Var"; } else { text1 = "Yok"; }
            if(PlayerInfo[playerid][pFlyLic]) { text2 = "Var"; } else { text2 = "Yok"; }
			if(PlayerInfo[playerid][pWepLic]) { text3 = "Var"; } else { text3 = "Yok"; }
		 	format(string, sizeof(string), "[%s - Lisanslar]", GetPlayerNameEx(playerid));
			BilgiMesajiGonder(playerid, string);
	        format(string, sizeof(string), "Sürüþ lisansý: %s - Uçak lisansý: %s - Silah lisansý: %s", text1, text2, text3);
			GenelMesajGonder(playerid, string);
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/kimlikgoster",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/kimlikgoster [ID]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    new query[256];
						format(query, sizeof(query), "SELECT * FROM `tanis` WHERE `TaniyanKisi` = '%d' AND `TaninanKisi` = '%d'", PlayerInfo[playerid][pSQLid], PlayerInfo[giveplayerid][pSQLid]);
						mysql_query(query);
						mysql_store_result();
						mysql_num_rows();
						if(mysql_num_rows() == 0 || PlayerInfo[giveplayerid][pUnlu] != 1)
						{
							ArkadasEkle(PlayerInfo[giveplayerid][pSQLid], PlayerInfo[playerid][pSQLid]);
						}
					    new text1[20];
				        new text2[20];
				        new text3[20];
    					new vatno = PlayerInfo[playerid][pVatno];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Var"; } else { text1 = "Yok"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text2 = "Var"; } else { text2 = "Yok"; }
						if(PlayerInfo[playerid][pWepLic]) { text3 = "Var"; } else { text3 = "Yok"; }
						format(string, sizeof(string), "[%s - Kimlik Bilgileri]", GetPlayerNameEx(playerid));
						BilgiMesajiGonder(giveplayerid, string);
				        format(string, sizeof(string), "Ýsim: %s - Vatandaþlýk No: %d", GetPlayerNameEx2(playerid, giveplayerid), vatno);
				        GenelMesajGonder(giveplayerid, string);
				        format(string, sizeof(string), "Sürüþ lisansý: %s - Uçak lisansý: %s - Silah lisansý: %s", text1, text2, text3);
						GenelMesajGonder(giveplayerid, string);
						if(PlayerInfo[playerid][pHouseKey] != 255)
						{
							GetCoords2DZone(Houses[PlayerInfo[playerid][pHouseKey]][EnterX],Houses[PlayerInfo[playerid][pHouseKey]][EnterY], houselocation, MAX_ZONE_NAME);
	      					format(string, sizeof(string), "Ev adresi: %d %s.", PlayerInfo[playerid][pHouseKey], houselocation);
							GenelMesajGonder(playerid, string);
						}
						else
						{
							GenelMesajGonder(giveplayerid, "Ev adresi: Bilinmiyor.");
						}
						if(PlayerInfo[playerid][pBizKey] != 255 && strcmp(PlayerName(playerid), Businesses[PlayerInfo[playerid][pBizKey]][Owner], true) == 0)
						{
	      					format(string, sizeof(string), "Ýþyeri adresi: %s.", Businesses[PlayerInfo[playerid][pBizKey]][BusinessName]);
							GenelMesajGonder(giveplayerid, string);
						}
						else
						{
							GenelMesajGonder(playerid, "Ýþyeri adresi: Bilinmiyor.");
						}
						format(string, sizeof(string), "%s adlý kiþiye kimliðinizi gösterdiniz.", GetPlayerNameEx2(giveplayerid, playerid));
						BilgiMesajiGonder(giveplayerid, string);
		    			PlayerPlayerActionMessage(playerid,giveplayerid,10.0,"kimliðini gösterir.");
					}
					else
					{
						HataMesajiGonder(playerid, "Kimliðinizi göstereceðiniz kiþiye yakýn olmak zorundasýnýz.");
					}
				}
			}
	        else
	        {
				HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
	        }
		}
	    return 1;
 	}
	 	if(strcmp(cmd,"/z",true)==0)
		{
		    if(IsPlayerConnected(playerid) && Yerde[playerid] == 0)
		    {
		        ClearAnimations(playerid);
		        return 1;
		    }
		    return HataMesajiGonder(playerid,"Yerdeyken ve giriþ yapmamýþken animasyon durduramazsýnýz.");
		}

	if(strcmp(cmd, "/w", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/w [ID] [Fýsýldama yazýsý]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						KullanimMesajiGonder(playerid, "/w [ID] [Fýsýldama yazýsý]");
						return 1;
					}
					if(Muted[playerid])
					{
						HataMesajiGonder(playerid, "Yönetici tarafýndan susturulduðunuz için konuþamazsýnýz.");
						return 0;
					}
					if (ProxDetectorS(3.0, playerid, giveplayerid))
					{
						if(giveplayerid != playerid)
						{
							format(string, sizeof(string), "%s (Fýsýldayarak): %s", GetPlayerNameEx2(playerid, giveplayerid), result);
							SendClientMessage(giveplayerid, COLOR_YELLOW, string);
							SendClientMessage(playerid, COLOR_YELLOW, string);
							PlayerPlayerActionMessage(playerid,giveplayerid,15.0,"doðru eðilir ve kulaðýna bir þeyler fýsýldar.");
							TalkLog(string);
						}
						else
						{
							HataMesajiGonder(playerid, "Kendi kendinize fýsýldayamazsýnýz.");
						}

					}
					else
					{
						HataMesajiGonder(playerid, "Fýsýldayacaðýnýz kiþiye yakýn olmak zorundasýnýz.");
					}
					return 1;
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/c", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/c [Kýsýk ses yazýsý]");
				return 1;
			}
			if(Muted[playerid])
			{
				HataMesajiGonder(playerid, "Yönetici tarafýndan susturulduðunuz için konuþamazsýnýz.");
				return 0;
			}
			format(string, sizeof(string), " (Kýsýk sesle): %s",result);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			TalkLog(string);
		}
		return 1;
	}
   	if(strcmp(cmd, "/s", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/s [Baðýrma yazýsý]");
				return 1;
			}
			if(Muted[playerid])
			{
				HataMesajiGonder(playerid, "Yönetici tarafýndan susturulduðunuz için konuþamazsýnýz.");
				return 0;
			}
			format(string, sizeof(string), " (Baðýrarak): %s", result);
			ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			TalkLog(string);
		}
		return 1;
	}
  	if(strcmp(cmd, "/b", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(SunucuBilgi[OOCDurum] == 0)
			{
			    HataMesajiGonder(playerid, "OOC konuþmak yöneticiler tarafýndan kapatýlmýþtýr.");
			    return 1;
			}
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/b [Oyun dýþý mesajý]");
				return 1;
			}
			if(Muted[playerid])
			{
				HataMesajiGonder(playerid, "Yönetici tarafýndan susturulduðunuz için konuþamazsýnýz.");
				return 0;
			}
			new string2[128];
			format(string, sizeof(string), "(( ");
			format(string2, sizeof(string2), ": %s ))", result);
			ProxDetector5(20.0, playerid, string,string2,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			format(string, sizeof(string), "(( %s: %s ))", GetPlayerNameEx(playerid), result);
			OOCLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/ver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pAdmin] >= 2)
		    {
		        new v_nr[512];
				v_nr = strtok(cmdtext, idx);
				if(!strlen(v_nr))
				{
				    KullanimMesajiGonder(playerid, "/ver [Ýsim] [ID] ");
				    GenelMesajGonder(playerid, "silahlisans - arabalisans - ucaklisans");
					return 1;
				}

				else if(strcmp(v_nr,"silahlisans",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/ver silahlisans [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
		    			if(giveplayerid != INVALID_PLAYER_ID)
					    {
							PlayerInfo[giveplayerid][pWepLic] = 1;
							format(string, sizeof(string), "%s adlý oyuncuya, silah lisansý verdiniz.", GetPlayerNameEx2(giveplayerid, playerid));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý yönetici, size silah lisansý verdi.", GetPlayerNameEx2(playerid, giveplayerid));
							BilgiMesajiGonder(giveplayerid, string);
							format(string, 128, "%s, %s[%d] adlý oyuncuya silah lisansý verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx2(giveplayerid, playerid),PlayerInfo[giveplayerid][pSQLid]);
							YoneticiMesajiGonder(string);
							return 1;
						}
						else
						{
							HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
						}
					}
					return 1;
				}
				else if(strcmp(v_nr,"arabalisans",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/ver arabalisans [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
		    			if(giveplayerid != INVALID_PLAYER_ID)
					    {
							PlayerInfo[giveplayerid][pCarLic] = 1;
							format(string, sizeof(string), "%s adlý oyuncuya, araba lisansý verdiniz.", GetPlayerNameEx2(giveplayerid, playerid));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý yönetici, size araba lisansý verdi.", GetPlayerNameEx2(playerid, giveplayerid));
							BilgiMesajiGonder(giveplayerid, string);
							format(string, 128, "%s, %s[%d] adlý oyuncuya araba lisansý verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx2(giveplayerid, playerid),PlayerInfo[giveplayerid][pSQLid]);
							YoneticiMesajiGonder(string);
							return 1;
						}
						else
						{
							HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
						}
					}
					return 1;
				}
				else if(strcmp(v_nr,"ucaklisans",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						KullanimMesajiGonder(playerid, "/ver ucaklisans [ID]");
						return 1;
					}
					giveplayerid = SQLdenBul(strval(tmp));
					if(IsPlayerConnected(giveplayerid))
					{
		    			if(giveplayerid != INVALID_PLAYER_ID)
					    {
							PlayerInfo[giveplayerid][pFlyLic] = 1;
							format(string, sizeof(string), "%s adlý oyuncuya, uçuþ lisansý verdiniz.", GetPlayerNameEx2(giveplayerid, playerid));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý yönetici, size uçuþ lisansý verdi.", GetPlayerNameEx2(playerid, giveplayerid));
							BilgiMesajiGonder(giveplayerid, string);
							format(string, 128, "%s, %s[%d] adlý oyuncuya uçuþ lisansý verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx2(giveplayerid, playerid),PlayerInfo[giveplayerid][pSQLid]);
							YoneticiMesajiGonder(string);
							return 1;
						}
						else
						{
							HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
						}
					}
					return 1;
				}
			}
			else
			{
			    YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
   	if(strcmp(cmd, "/silahkontrol", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2)
	    {
      		YetersizYetki(playerid, cmdtext);
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
			KullanimMesajiGonder(playerid, "/silahkontrol [ID]");
		    return 1;
	    }
		giveplayerid = SQLdenBul(strval(tmp));
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
		    return 1;
	    }
		new sweapon, sammo;
	    format(string, sizeof(string), "[%s - Silahlar]", GetPlayerNameEx2(giveplayerid, playerid));
		BilgiMesajiGonder(playerid, string);
		new sayi2 = 0;
		for (new i=0; i<9; i++)
	    {
		    GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
		    if(sweapon != 0)
		    {
      			format(string, sizeof(string), "Slot ID: %d - Silah ID: %d - Mermi: %d", i, sweapon, sammo);
    			GenelMesajGonder(playerid, string);
    			sayi2++;
			}
	    }
	    if(sayi2 == 0)
	    {
	        HataMesajiGonder(playerid, "Kiþinin silahý bulunmamaktadýr.");
	        return 1;
	    }
	    return 1;
	}
	if(strcmp(cmd, "/silahlarinisil", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/silahlarinisil [SQL ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
            			ResetPlayerWeapons(playa);
            			new query[128];
						format(query, sizeof(query), "DELETE FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
						mysql_query(query);
						format(query, sizeof(query), "INSERT INTO `osilah` (`ad`) VALUES ('%s')", GetPlayerNameSave(playa));
						mysql_query(query);
						format(query, sizeof(query), "DELETE FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
						mysql_query(query);
						format(query, sizeof(query), "INSERT INTO `ssayi` (`ad`) VALUES ('%s')", GetPlayerNameSave(playa));
						mysql_query(query);
						format(string, sizeof(string), "%s adlý yönetici bütün silahlarýnýzý sildi.", GetPlayerNameEx2(playerid, playa));
						BilgiMesajiGonder(giveplayerid, string);
						format(string, sizeof(string), "%s adlý oyuncunun bütün silahlarýný sildiniz.", GetPlayerNameEx2(playa, playerid));
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s [%d] adlý oyuncunun silahlarýný sildi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid]);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/akapat", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(AdminDuyma[playerid] == 1)
			{
				AdminDuyma[playerid] = 0;
				BilgiMesajiGonder(playerid, "Artýk yönetici konuþmalarýný duymayacaksýnýz.");
				format(string, 128, "%s[%d] yönetici konuþmalarýný duymayý býraktý.",GetPlayerNameEx(playerid), playerid);
				YoneticiMesajiGonder(string);
			}
			else
			{
				AdminDuyma[playerid] = 1;
				BilgiMesajiGonder(playerid, "Artýk yönetici konuþmalarýný duyacaksýnýz.");
				format(string, 128, "%s[%d] yönetici konuþmalarýný duymayý býraktý.",GetPlayerNameEx(playerid), playerid);
				YoneticiMesajiGonder(string);
			}
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	/*
 	if(strcmp(cmd, "/suc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/suc [ID] [Suç]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
			if (DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1 ||DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 2)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							KullanimMesajiGonder(playerid, "/suc [ID] [Suç]");
							return 1;
						}
						if(giveplayerid != playerid)
						{
							if(WantedPoints[giveplayerid] == 0)
							{
								WantedPoints[giveplayerid] = 3;
							}
							else
							{
								WantedPoints[giveplayerid]+= 2;
							}
							SetPlayerWantedLevelEx(giveplayerid,GetPlayerWantedLevelEx(playerid)+1);
							format(string, sizeof(string), "%s adlý kiþi sicilinize suç iþledi, Gerekçe: %s", GetPlayerNameEx2(playerid, giveplayerid),result);
							BilgiMesajiGonder(giveplayerid, string);
							format(string, sizeof(string), "%s adlý kiþinin siciline suç iþlediniz. Gerekçe: %s", GetPlayerNameEx2(giveplayerid, playerid),result);
							BilgiMesajiGonder(playerid, string);
						}
						else
						{
	                        HataMesajiGonder(playerid, "Kendi, kendinizin siciline suç iþleyemezsiniz.");
						}
						return 1;
					}
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
			}
		}
  		else
		{
			HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
		}
		return 1;
	}
	*/
 	if(strcmp(cmd, "/acam", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(IsABike(GetPlayerVehicleID(playerid)))
			{
				HataMesajiGonder(playerid, "Bu aracýn camý bulunmuyor.");
			    return 1;
			}
		    if(CarWindowStatus[GetPlayerVehicleID(playerid)] == 1)
		    {
				PlayerActionMessage(playerid,15.0,"aracýn camýný açar.");
				CarWindowStatus[GetPlayerVehicleID(playerid)] = 0;
		    }
		    else if(CarWindowStatus[GetPlayerVehicleID(playerid)] == 0)
		    {
				PlayerActionMessage(playerid,15.0,"aracýn camýný kapatýr.");
				CarWindowStatus[GetPlayerVehicleID(playerid)] = 1;
		    }
		}
		else
		{
			HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/tuzakkur",true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11)
	    {
	        if(Tuzak[playerid] == 0)
	        {
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle(playerid,ploca);
				CreateStrip(playerid,plocx,plocy,plocz,ploca);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				BilgiMesajiGonder(playerid,"Baþarýyla tuzaðýnýzý kurdunuz.");
				IpucuMesajiGonder(playerid,"{86D060}/tuzakkaldir{E6E6E6} komutu ile tuzaðýnýzý kaldýrabilirsiniz.");
				return 1;
			}
			else
			{
			    HataMesajiGonder(playerid,"Zaten bir tuzak kurdunuz.");
			    IpucuMesajiGonder(playerid,"{86D060}/tuzakkaldir{E6E6E6} komutu ile tuzaðýnýzý kaldýrabilirsiniz.");
			    return 1;
			}
		}
	}
	
	if (strcmp(cmd,"/tuzakkaldir",true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11)
	    {
		    if(Tuzak[playerid] != 0)
		    {
				DeleteStrip(playerid);
				BilgiMesajiGonder(playerid,"Tuzaðýnýzý baþarýyla kaldýrdýnýz.");
				return 1;
			}
		}
	}
	
	if(strcmp(cmd,"/tuzaklarikaldir",true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11&& PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pRank] != 0)
	    {
            DeleteAllStrip();
            BilgiMesajiGonder(playerid,"Eklenen tüm tuzaklarý kaldýrdýnýz.");
            return 1;
        }
    }
    
    if(strcmp(cmd,"/koniekle",true) == 0)
    {
        if(PlayerInfo[playerid][pFaction] == 11)
        {
            if(Koniler[playerid] == 10)
            {
                HataMesajiGonder(playerid,"En fazla 10 adet koni ekleyebilirsiniz.");
                IpucuMesajiGonder(playerid,"{86D060}/konisil{E6E6E6} komutu ile eklediðiniz konileri silebilirsiniz.");
                return 1;
            }
            new Float:xxX,Float:yyY,Float:zzZ,Float:aaA;
            GetPlayerPos(playerid,xxX,yyY,zzZ);
            GetPlayerFacingAngle(playerid,aaA);
	        AddTrafficCone(playerid, Float:xxX,Float:yyY,Float:zzZ,Float:aaA);
	        Koniler[playerid] += 1;
	        BilgiMesajiGonder(playerid,"Yeni bir koni eklediniz.");
			IpucuMesajiGonder(playerid,"{86D060}/konisil{E6E6E6} komutu ile eklediðiniz konileri silebilirsiniz.");
			return 1;
	    }
	}
	
	if(strcmp(cmd,"/konisil",true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11)
	    {
	        if(Koniler[playerid] == 0)
	        {
				HataMesajiGonder(playerid,"Hiç koni eklemediniz.");
				return 1;
			}
			for(new i = 1; i < 11; i++)
			{
			    DestroyObject(TrafikKoni[playerid][i]);
			}
			Koniler[playerid] = 0;
			BilgiMesajiGonder(playerid,"Eklediðiniz bütün konileri sildiniz.");
			return 1;
		}
	}
	
	if(strcmp(cmd,"/konilerisil",true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11&& PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pRank] != 0)
	    {
            for(new i; i < MAX_PLAYERS+1; i++)
            {
                if(Koniler[i] != 0)
                {
		   			DestroyObject(TrafikKoni[i][1]);
		   			DestroyObject(TrafikKoni[i][2]);
		   			DestroyObject(TrafikKoni[i][3]);
		   			DestroyObject(TrafikKoni[i][4]);
		   			DestroyObject(TrafikKoni[i][5]);
		   			DestroyObject(TrafikKoni[i][6]);
		   			DestroyObject(TrafikKoni[i][7]);
		   			DestroyObject(TrafikKoni[i][8]);
		   			DestroyObject(TrafikKoni[i][9]);
		   			DestroyObject(TrafikKoni[i][10]);
				}
				Koniler[i] = 0;
			}
			BilgiMesajiGonder(playerid,"Eklenen bütün konileri sildiniz.");
			return 1;
        }
    }
    
    if(strcmp(cmd,"/barikatkur",true) == 0)
    {
        if(PlayerInfo[playerid][pFaction] == 11)
        {
            if(Barikat[playerid][0] == 1)
            {
                HataMesajiGonder(playerid,"En fazla 1 adet barikat kurabilirsiniz.");
				IpucuMesajiGonder(playerid,"{86D060}/barikatkaldir{E6E6E6} komutu ile barikatýnýzý kaldýrabilirsiniz.");
				return 1;
			}
            new Float:xxX, Float:yyY, Float:zzZ, Float:aaA;
            GetPlayerPos(playerid,xxX,yyY,zzZ);
            GetPlayerFacingAngle(playerid, aaA);
            BarikatKur(playerid,xxX,yyY,zzZ,aaA);
            SetPlayerPos(playerid,xxX,yyY,zzZ+1);
            Barikat[playerid][0] = 1;
            BilgiMesajiGonder(playerid,"Yeni bir barikat kurdunuz.");
            IpucuMesajiGonder(playerid,"{86D060}/barikatkaldir{E6E6E6} komutu ile barikatýnýzý kaldýrabilirsiniz.");
            return 1;
        }
    }
    
    if(strcmp(cmd,"/barikatkaldir",true) == 0)
    {
        if(PlayerInfo[playerid][pFaction] == 11)
        {
	        if(Barikat[playerid][0] == 0)
	        {
	            HataMesajiGonder(playerid,"Eklediðiniz bir barikat bulunmamaktadýr.");
	            return 1;
	        }
	        DestroyObject(Barikat[playerid][1]);
	        Barikat[playerid][0] = 0;
	        BilgiMesajiGonder(playerid,"Eklediðiniz barikatý kaldýrdýnýz.");
	        return 1;
	    }
	}
	
	
	if(strcmp(cmd,"/barikatlarikaldir",true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 11&& PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pRank] != 0)
	    {
	        for(new i; i < MAX_PLAYERS; i++)
	        {
	            if(Barikat[i][0] == 1)
				{
				    DestroyObject(Barikat[i][1]);
				    Barikat[i][0] = 0;
				}
			}
			BilgiMesajiGonder(playerid,"Eklenen bütün barikatlarý kaldýrdýnýz.");
			return 1;
		}
	}

	if(strcmp(cmd,"/polissiren",true) == 0)
	{
		if(PlayerInfo[playerid][pFaction] == 11)
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
			    new arac = GetPlayerVehicleID(playerid);
			    new model = GetVehicleModel(arac);
				if(model == 402 || model == 405 || model == 445 || model == 500 || model == 551 || model == 560 || model == 562 ||
				model == 421 || model == 400 || model == 411 || model == 526 || model == 424 || model == 426 || model == 429)
				{
				    if(PolisLamba[0][arac] == 1)
				    {
				        DestroyObject(PolisLamba[1][arac]);
				        PolisLamba[0][arac] = 0;
				        BilgiMesajiGonder(playerid,"Ýçinde bulunduðunuz aracýn polis sirenini kaldýrdýnýz.");
				        return 1;
				    }
					PolisLambas(arac);
					PolisLamba[0][arac] = 1;
					BilgiMesajiGonder(playerid,"Ýçinde bulunduðunuz araca polis sireni eklediniz.");
					return 1;
				}
				else
				{
					HataMesajiGonder(playerid,"Bu araca polis sireni eklenemez.");
					return 1;
				}
			}
			else
			{
			    HataMesajiGonder(playerid,"Herhangi bir araçta deðilsiniz.");
			    return 1;
			}
		}
	}

	if(strcmp(cmd, "/polisyardim", true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] == 255)
	    {
	        HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
	        return 1;
	    }
		if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
		{
			BilgiMesajiGonder(playerid, "[Devlet birimleri - Komut yardýmý]");
			GenelMesajGonder(playerid, "/faction - /isbasi - /radyo - /megafon - /tutukla - /veritabani - /taser - /aracplaka");
		 	GenelMesajGonder(playerid, "/elkoy - /cezakes - /kelepcele - /kelepcecoz - /uzeriniara - /destekekip - /polissiren");
		 	GenelMesajGonder(playerid, "/tuzakkur - /tuzakkaldir - /barikatkur - /barikatkaldir - /koniekle - /konisil");
			if(PlayerInfo[playerid][pRank] <= 3)
			{
			    BilgiMesajiGonder(playerid,"[Ý.E.M - Yönetim komutlarý]");
				GenelMesajGonder(playerid,"/kbildirimekle - /kbildirimsil - /abildirimekle - /abildirimsil");
				GenelMesajGonder(playerid,"/tuzaklarikaldir - /barikatlarikaldir - /konilerisil");
			}
	 	}
	 	else
	 	{
	 	    HataMesajiGonder(playerid, "Bu komutu sadece devlet birimleri kullanabilir.");
	 	}
		return 1;
	}
 	if(strcmp(cmd, "/istenayril", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] != 0)
	    {
     		PlayerInfo[playerid][pJob] = 0;
     		BilgiMesajiGonder(playerid, "Ýþinizden ayrýldýnýz.");
	    }
	    else
	    {
	    	HataMesajiGonder(playerid, "Herhangi bir meslekte çalýþmýyorsunuz.");
	    }
		return 1;
	}
 	if(strcmp(cmd, "/meslekyardim", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] != 0)
	    {
			if(PlayerInfo[playerid][pJob] == 1)
			{
				BilgiMesajiGonder(playerid, "[Taksi mesleði - Komut yardýmý]");
				GenelMesajGonder(playerid, "/ucret - Taksi metreyi açmanýzý saðlar.");
			}
			else if(PlayerInfo[playerid][pJob] == 2)
			{
				BilgiMesajiGonder(playerid, "[Otobüs mesleði - Komut yardýmý]");
				GenelMesajGonder(playerid, "/otobus - Otobüs seferine çýkmanýzý saðlar.");
			}
			else if(PlayerInfo[playerid][pJob] == 3)
			{
				BilgiMesajiGonder(playerid, "[Yer temizleme mesleði - Komut yardýmý]");
				GenelMesajGonder(playerid, "/yertemizle - Yer temizleme seferine çýkmanýzý saðlar.");
			}
			else if(PlayerInfo[playerid][pJob] == 4)
			{
				BilgiMesajiGonder(playerid, "[Týr mesleði - Komut yardýmý]");
				GenelMesajGonder(playerid, "/tirbasla - Týr seferine baþlamanýzý saðlar.");
			}
	    }
	    else
	    {
	    	HataMesajiGonder(playerid, "Herhangi bir meslekte çalýþmýyorsunuz.");
	    }
		return 1;
	}
 	if(strcmp(cmdtext, "/uyusturucu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pDrugs] > 1)
			{
			    new Float:armour;
			    GetPlayerArmour(playerid, armour);
			    if(armour < 100.0)
			    {
                	SetPlayerArmour(playerid, armour + 15.0);
                	if(armour + 15.0 > 100)
                	{
                	    SetPlayerArmour(playerid, 100);
                	}
                }
			    BilgiMesajiGonder(playerid, "2 gram uyuþturucu kullandýnýz.");
			    PlayerInfo[playerid][pDrugs] -= 2;
			    DrugsIntake[playerid] += 2;
			    if(DrugsIntake[playerid] >= 6)
			    {
			    	SetTimerEx("DrugEffect", 1000, false, "i", playerid);
			    }
			}
			else
			{
			    HataMesajiGonder(playerid, "Yeterli uyuþturucunuz bulunmamaktadýr.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/adminler", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			new sayi3 = 0;
			BilgiMesajiGonder(playerid, "[47ROLEPLAY | Online Admin Listesi]");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
    				new admtext[512];
					if(PlayerInfo[i][pAdmin] >= 5) { admtext = "Lead Admins"; }
					else if(PlayerInfo[i][pAdmin] == 4) { admtext = "Game Admins"; }
					else if(PlayerInfo[i][pAdmin] == 3) { admtext = "Game Admins"; }
					else if(PlayerInfo[i][pAdmin] == 2) { admtext = "Game Admins"; }
					else if(PlayerInfo[i][pAdmin] == 1) { admtext = "Helper"; }
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        if(AdminDuty[i] == 1)
				        {
							format(string, 256, "[ Durum:{64D500}Aktif{F6F6F6} ]%s [ID:%d][%d Level]", GetPlayerNameEx(i), i,PlayerInfo[i][pAdmin]);
							GenelMesajGonder(playerid, string);
						}
						else
						{
							format(string, 256, "[ Durum:Aktif{F6F6F6} ]%s [ID:%d][%d Level]", GetPlayerNameEx(i), i,PlayerInfo[i][pAdmin]);
							GenelMesajGonder(playerid, string);
						}
						sayi3++;
					}
				}
			}
			if(sayi3 == 0)
			{
			    HataMesajiGonder(playerid, "Aktif yönetici bulunmamaktadýr.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/testerler", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			new sayi4 = 0;
			BilgiMesajiGonder(playerid, "[47ROLEPLAY | Online Tester Listesi]");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
    				//new admtext[512];
					/*if(PlayerInfo[i][pAdmin] >= 5) { admtext = "Owner"; }
					else if(PlayerInfo[i][pAdmin] == 4) { admtext = "In-Game Admin"; }
					else if(PlayerInfo[i][pAdmin] == 3) { admtext = "Lead Role Admin"; }
					else if(PlayerInfo[i][pAdmin] == 2) { admtext = "Role Admin"; }
					else if(PlayerInfo[i][pAdmin] == 1) { admtext = "Tester"; }*/
				    if(PlayerInfo[i][pTester] >= 1)
				    {
				        if(TesterDuty[i] == 1)
				        {
							format(string, 256, "[ Durum:{800000}Aktif {F6F6F6}]%s [ID:%d][%d Level]", GetPlayerNameEx(i), i,PlayerInfo[i][pAdmin]);
							GenelMesajGonder(playerid, string);
						}
						else
						{
							format(string, 256, "[ Durum:Aktif{F6F6F6} ]%s [ID:%d][%d Level]", GetPlayerNameEx(i), i,PlayerInfo[i][pAdmin]);
							GenelMesajGonder(playerid, string);
						}
						sayi4++;
					}
				}
			}
			if(sayi4 == 0)
			{
			    HataMesajiGonder(playerid, "Aktif tester bulunmamaktadýr.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/yardim", true) == 0)
	{
	    BilgiMesajiGonder(playerid, "[Sunucu yardýmý]");
		GenelMesajGonder(playerid, "/cw - /w - /c - /s - /b - /z - /pm - /me - /do - /dene - /rapor");
	    GenelMesajGonder(playerid, "/karakter - /satinal - /benzin - /bidonbenzin - /acam");
		GenelMesajGonder(playerid, "/saat - /reklam - /lisanslar - /kimlikgoster - /spawndegistir - /banka");
		GenelMesajGonder(playerid, "/kavgateknik - /isegir - /istenayril - /ben - /bak - /re-login - /ackapat");
		GenelMesajGonder(playerid, "/evyardim - /isyeriyardim - /meslekyardim - /telefonyardim");
		GenelMesajGonder(playerid, "/polisyardim - /factionyardim");
		return 1;
	}
 	if(strcmp(cmd, "/telefonac", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				HataMesajiGonder(playerid, "Þuan zaten bir konuþmadasýnýz, kapatmak için: {86D060}/telefonkapat");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						StopMusic(playerid);
						Mobile[playerid] = i;
						BilgiMesajiGonder(i, "Aradýðýnýz kiþi, telefonu açtý.");
						if(!IsPlayerInAnyVehicle(playerid))
						{
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
						}
						PlayerActionMessage(playerid,15.0,"cebinden telefonunu çýkartýr ve kulaðýna getirir.");
					}

				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dene", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/dene [Denemek istediðiniz olay]");
				return 1;
			}
			new succeed = 1 + random(2);
			if(succeed == 1)
			{
				new string2[128];
				format(string, sizeof(string), "* ");
				format(string2, sizeof(string2), " %s dener. (( Baþarýlý ))", result);
				ProxDetector5(15.0, playerid, string,string2,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
				format(string, sizeof(string), "[DENEME] * %s %s dener. (( Baþarýlý ))", GetPlayerNameEx(playerid), result);
				PlayerActionLog(string);
			}
			else if(succeed == 2)
			{
				new string2[128];
				format(string, sizeof(string), "* ");
				format(string2, sizeof(string2), " %s dener. (( Baþarýsýz ))", result);
				ProxDetector5(15.0, playerid, string,string2,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
				format(string, sizeof(string), "[DENEME] * %s %s dener. (( Baþarýsýz ))", GetPlayerNameEx(playerid), result);
				PlayerActionLog(string);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/e", true) == 0 || strcmp(cmd, "/me", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/e - /me [Yapacaðýnýz eylem]");
				return 1;
			}
			new form[128];
			format(form, sizeof(form), "%s",result);
			PlayerActionMessage(playerid,15.0,form);
		}
		return 1;
	}
 	if(strcmp(cmd, "/do", true) == 0 || strcmp(cmd, "/yap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/do - yap [Belirteçler]");
				return 1;
			}
			new form[128];
			format(form, sizeof(form), "%s",result);
			PlayerDoMessage(playerid,15.0,form);
		}
		return 1;
	}
 	if(strcmp(cmd, "/sms", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/sms [Telefon numarasý] [Mesaj yazýsý]");
				return 1;
			}
			if(PlayerInfo[playerid][pPhoneNumber] == 0)
			{
				HataMesajiGonder(playerid, "Telefonunuz bulunmamaktadýr.");
				return 1;
   			}
			PlayerActionMessage(playerid,15.0,"cep telefonunu cebinden çýkartýr, sms yazar ve gönderir.");
			PlayerActionMessage(playerid,15.0,"cep telefonunu cebine sokar.");
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "/sms [Telefon numarasý] [Mesaj yazýsý]");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPhoneNumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid])
						        {
						            HataMesajiGonder(playerid, "SMS göndermeye çalýþtýðýnýz kiþinin telefonu kapalý.");
						            return 1;
						        }
						        BilgiMesajiGonder(playerid, "Sms gönderildi.");
								format(string, sizeof(string), "Kime: %s[%d], Mesaj: %s", GetPlayerNameEx2(giveplayerid, playerid),PlayerInfo[giveplayerid][pPhoneNumber],result);
								GenelMesajGonder(playerid, string);
								BilgiMesajiGonder(playerid, "Sms alýndý.");
								format(string, sizeof(string), "Kimden: %s[%d], Mesaj: %s", GetPlayerNameEx2(playerid, giveplayerid),PlayerInfo[playerid][pPhoneNumber],result);
								GenelMesajGonder(giveplayerid, string);
								PhoneAnimation(playerid);
								format(string, sizeof(string), "[SMS] %s --> %s: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), result);
								TelefonLog(string);
								GivePlayerCash(playerid,-txtcost);
								Businesses[PlayerInfo[playerid][pPhoneC]][Till] += txtcost;
								return 1;
							}
						}
					}
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/telefonkapat", true) == 0 )
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							StopMusic(playerid);
							StopMusic(caller);
							BilgiMesajiGonder(caller, "Karþýdaki kiþi telefonunu kapattý.");
							BilgiMesajiGonder(playerid, "Telefonunuzu kapattýnýz.");
							if(GetPlayerSpecialAction(playerid == SPECIAL_ACTION_USECELLPHONE))
							{
							    if(!IsPlayerInAnyVehicle(playerid))
       							{
									SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
								}
							}
							if(GetPlayerSpecialAction(caller == SPECIAL_ACTION_USECELLPHONE))
							{
							    if(!IsPlayerInAnyVehicle(caller))
       							{
									SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
								}
							}
							PlayerActionMessage(playerid,15.0,"telefonunu kapatýr ve cebine sokar.");
							PlayerActionMessage(caller,15.0,"telefonunu kapatýr ve cebine sokar.");
							Mobile[caller] = 255;
							if(StartedCall[playerid])
							{
								new callcost = random(20);
								GivePlayerCash(playerid,-callcost);
								Businesses[PlayerInfo[playerid][pPhoneC]][Till] += callcost;
								StartedCall[playerid] = 0;
							}
							else if(StartedCall[caller])
							{
								new callcost = random(20);
								GivePlayerCash(caller,-callcost);
								Businesses[PlayerInfo[caller][pPhoneC]][Till] += callcost;
								StartedCall[caller] = 0;
							}
						}
						Mobile[playerid] = 255;
						return 1;
					}
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/ara", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/ara [Telefon numarasý]");
				return 1;
			}
			if(PlayerInfo[playerid][pPhoneNumber] == 0)
			{
				HataMesajiGonder(playerid, "Telefonunuz bulunmamaktadýr.");
				return 1;
			}
			new phonenumb = strval(tmp);
			if(phonenumb == 911)
			{
			    Durum911[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "GÖREVLÝ: 911'i Aradýnýz, Polis veya Hastane yazarak devam ediniz.");
				IpucuMesajiGonder(playerid, "Konuþmalarýnýzý tek cümle içerisinde yazmak zorundasýnýz.");
				Mobile[playerid] = 911;
				PlayerActionMessage(playerid,15.0,"cebinden cep telefonunu çýkartýr ve bir kaç tuþa basar.");
				return 1;
			}
			if(phonenumb == 444)
			{
		 		if(TaxiDrivers < 1)
				{
					HataMesajiGonder(playerid, "Aktif taksici bulunmuyor.");
			        return 1;
		       	}
		       	if(TransportDuty[playerid] > 0)
		       	{
		       		HataMesajiGonder(playerid, "Ýþbaþýndayken taksici çaðýramazsýnýz.");
		         	return 1;
		       	}
		   		format(string, sizeof(string), "%s taksi çaðýrýyor, Kabul etmek için: {86D060}/kabul taksi", GetPlayerNameEx(playerid));
		    	SendJobMessage(1, COLOR_RED, string);
		    	IpucuMesajiGonder(playerid, "Taksici çaðýrdýnýz, yakýn bir zamanda çaðrýnýz ile ilgileneceklerdir.");
		    	TaxiCall = playerid;
		    	PlayerActionMessage(playerid,15.0,"cebinden cep telefonunu çýkartýr ve bir kaç tuþa basar.");
		    	return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPhoneNumber])
			{
				HataMesajiGonder(playerid, "Kendi kendinizi arayamazsýnýz.");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				HataMesajiGonder(playerid, "Þuan zaten bir konuþmadasýnýz.");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPhoneNumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid;
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid])
						        {
						            HataMesajiGonder(playerid, "Karþýdaki kiþinin telefonu þuan kapalý.");
						            return 1;
						        }
								if(Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "Dýnnn... Dýnnn... -  %s[%d] '/telefonac' - '/telefonkapat'", GetPlayerNameEx2(playerid, giveplayerid),PlayerInfo[playerid][pPhoneNumber]);
									BilgiMesajiGonder(giveplayerid, string);
									format(string, sizeof(string), "Dýnnn... Dýnnn... -  %s[%d] adlý kiþiyi arýyorsunuz.", GetPlayerNameEx2(giveplayerid, playerid),PlayerInfo[giveplayerid][pPhoneNumber]);
									BilgiMesajiGonder(playerid, string);
									PlayerDoMessage(giveplayerid,15.0,"Telefonu çalmaktadýr.");
                                    StartedCall[playerid] = 1;
									PlayerPlaySound(giveplayerid, 1097, 0.0, 0.0, 0.0);
                                    if(!IsPlayerInAnyVehicle(playerid))
                                    {
                                    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                                    }
                                    StartedCall[giveplayerid] = 0;
                                    PlayerActionMessage(playerid,15.0,"cebinden cep telefonunu çýkartýr ve bir kaç tuþa basar.");
									return 1;
								}
							}
						}
						else
						{
							HataMesajiGonder(playerid, "Hatalý bir telefon numarasý girdiniz.");
						}
					}
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd,"/satinal",true)==0)
	{
	 	if(IsPlayerConnected(playerid))
	 	{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(Houses); h++)
			{
				if(PlayerToPoint(2.0, playerid, Houses[h][EnterX], Houses[h][EnterY], Houses[h][EnterZ]) && Houses[h][Owned] == 0)
				{
				    if(Houses[h][HousePrice] == 0)
				    {
				        HataMesajiGonder(playerid, "Bu evin fiyatý belirlenmemiþ.");
						return 1;
				    }
					if(PlayerInfo[playerid][pHouseKey] != 255 && PlayerInfo[playerid][pHouseKey] != 255 && PlayerInfo[playerid][pHouseKey] != 255 && PlayerInfo[playerid][pHouseKey] != 255)
					{
						HataMesajiGonder(playerid, "Þuan zaten bir eviniz bulunuyor.");
						return 1;
					}
					if(GetPlayerCash(playerid) > Houses[h][HousePrice])
					{
						Houses[h][Owned] = 1;
      					PlayerInfo[playerid][pHouseKey] = h;
						strmid(Houses[h][Owner], playername, 0, strlen(playername), 255);
						GivePlayerCash(playerid,-Houses[h][HousePrice]);
						SetPlayerInterior(playerid,Houses[h][ExitInterior]);
						SetPlayerVirtualWorld(playerid,h);
						SetPlayerPos(playerid,Houses[h][ExitX],Houses[h][ExitY],Houses[h][ExitZ]);
						BilgiMesajiGonder(playerid, "Evi satýn aldýnýz.");
						PlayerInfo[playerid][pSpawn] = 2;
						Delete3DTextLabel(EvTanimi[h]);
						GetCoords2DZone(Houses[h][EnterX],Houses[h][EnterY], houselocation, MAX_ZONE_NAME);
						format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d",Houses[h][Owner],houselocation, h);
						EvTanimi[h] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[h][EnterX], Houses[h][EnterY], Houses[h][EnterZ]+1.0, 25, 0, 1);
						EvKaydet(h);
						format(string, sizeof(string), "%s, %d ID'li (%f, %f, %f) evi satýn aldý.", GetPlayerNameEx(playerid), h, Houses[h][EnterX], Houses[h][EnterY], Houses[h][EnterZ]);
						EvLog(string);
						return 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
					}
				}
			}
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(Businesses); h++)
			{
				if(PlayerToPoint(2.0, playerid, Businesses[h][EnterX], Businesses[h][EnterY], Businesses[h][EnterZ]) && Businesses[h][Owned] == 0)
				{
				    if(Businesses[h][BizPrice] == 0)
				    {
				        HataMesajiGonder(playerid, "Bu iþyerinin fiyatý belirlenmemiþ.");
						return 1;
				    }
					if(PlayerInfo[playerid][pBizKey] != 255 && strcmp(playername, Businesses[PlayerInfo[playerid][pBizKey]][Owner], true) == 0)
					{
						HataMesajiGonder(playerid, "Þuan zaten bir iþyeriniz bulunuyor.");
						return 1;
					}
					if(GetPlayerCash(playerid) > Businesses[h][BizPrice])
					{
						Businesses[h][Owned] = 1;
						PlayerInfo[playerid][pBizKey] = h;
						strmid(Businesses[h][Owner], playername, 0, strlen(playername), 255);
						GivePlayerCash(playerid,-Businesses[h][BizPrice]);
						SetPlayerInterior(playerid,Businesses[h][ExitInterior]);
						SetPlayerVirtualWorld(playerid,h);
						SetPlayerPos(playerid,Businesses[h][ExitX],Businesses[h][ExitY],Businesses[h][ExitZ]);
						BilgiMesajiGonder(playerid, "Ýþ yerini satýn aldýnýz.");
						PlayerInfo[playerid][pSpawn] = 4;
						Delete3DTextLabel(IsyeriTanimi[h]);
						format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[h][BusinessName],Businesses[h][Owner],Businesses[h][EntranceCost]);
						IsyeriTanimi[h] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[h][EnterX], Businesses[h][EnterY], Businesses[h][EnterZ]+1.0, 25, 0, 1);
						OnPlayerDataSave(playerid);
						IsyeriKaydet(h);
						format(string, sizeof(string), "%s, %d ID'li (%s, %f, %f, %f) iþyerini satýn aldý.", GetPlayerNameEx(playerid), h, Businesses[h][BusinessName], Businesses[h][EnterX], Businesses[h][EnterY], Businesses[h][EnterZ]);
						IsyeriLog(string);
						return 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
						return 1;
					}
				}
			}
	  		for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == i)
		   			{
					    if(Businesses[i][BizType] == 2)
				    	{
					        if(Businesses[i][Products] != 0)
					        {
						    	ShowPlayerDialog(playerid,30,DIALOG_STYLE_LIST,"Elektronik satýcýsý","Telefon || Fiyat: {3BDA00}$250\nTelsiz || Fiyat: {3BDA00}$150\nFrekans ayarlayýcý || Fiyat: {3BDA00}$200\nNavigasyon || Fiyat: {3BDA00}700$\nMüzik Çalar || Fiyat: {3BDA00}500$","Satýn al","Çýkýþ");
								return 1;
							}
							else
							{
								HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
					if(GetPlayerVirtualWorld(playerid) == i)
		   			{
					    if(Businesses[i][BizType] == 3)
				    	{
					        if(Businesses[i][Products] != 0)
					        {
								ShowPlayerDialog(playerid,31,DIALOG_STYLE_LIST,"Market","Sigara || Fiyat: {3BDA00}30$\nBez || Fiyat: {3BDA00}50$\nMaske || Fiyat: {3BDA00}300$\nBýçak || Fiyat: {3BDA00}300$\nBeyzbol Sopasý || Fiyat: {3BDA00}500$\nBenzin bidonu || Fiyat: {3BDA00}300$","Satýn al","Çýkýþ");
						    	return 1;
							}
							else
							{
								HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
					if(GetPlayerVirtualWorld(playerid) == i)
					{
					    if(Businesses[i][BizType] == 5)
					    {
					        if(Businesses[i][Products] != 0)
					        {
						    	ShowPlayerDialog(playerid,42,DIALOG_STYLE_LIST,"Kýyafetçi","Kýyafet\nÞapkalar\nRaglar\nGözlükler\n","Satýn al","Çýkýþ");
						    	return 1;
		      				}
							else
							{
								HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
					if(GetPlayerVirtualWorld(playerid) == i)
					{
				    	if(Businesses[i][BizType] == 7)
				    	{
					        if(Businesses[i][Products] != 0)
					        {
								ShowPlayerDialog(playerid,35,DIALOG_STYLE_LIST,"Berber","Cesar || Fiyat: {3BDA00}10$\nAfro || Fiyat: {3BDA00}10$\nFlattop || Fiyat: {3BDA00}10$\nJhericurl || Fiyat: {3BDA00}10$\nCornrow || Fiyat: {3BDA00}10$\nHightfade || Fiyat: {3BDA00}10$","Satýn al","Ýptal");
								return 1;
							}
							else
							{
								HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
					if(GetPlayerVirtualWorld(playerid) == i)
					{
			   			if(Businesses[i][BizType] == 8)
		    			{
					        if(Businesses[i][Products] != 0)
					        {
	                            ShowPlayerDialog(playerid,500,DIALOG_STYLE_LIST,"Dövmeci","Karýn\nBel\nGöðüs\nSol göðüs\nSað göðüs\nSol kol üst taraf\nSol kol alt taraf\nSað kol üst taraf\nSað kol alt taraf\nSol bacak üst taraf\nSol bacak alt taraf\nSað bacak üst taraf\nSað bacak alt taraf","Satýn al","Çýkýþ");
								return 1;
							}
							else
							{
								HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/kiyafet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(CopOnDuty[playerid] == 1)
			{
	    		HataMesajiGonder(playerid, "Mesaide iken kýyafet deðiþtiremezsiniz.");
				return 1;
			}
			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Kýyafet deðiþimi","1. kýyafet\n2. kýyafet\n3. kýyafet" , "Seç", "Kapat");
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/sapka", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pSapka] > 0)
         	{
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new vehicleid = GetPlayerVehicleID(playerid);
		     		if(GetVehicleModel(vehicleid) == 448 || GetVehicleModel(vehicleid) == 461 || GetVehicleModel(vehicleid) == 462 || GetVehicleModel(vehicleid) == 463 || GetVehicleModel(vehicleid) == 468 || GetVehicleModel(vehicleid) == 471 || GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || GetVehicleModel(vehicleid) == 521 || GetVehicleModel(vehicleid) == 522 || GetVehicleModel(vehicleid) == 523)
					{
						if(KemerTakti[playerid] == 1)
						{
						    HataMesajiGonder(playerid, "Kafanýzda kask varken, þapka takamazsýnýz.");
						}
					}
				}
				if(SapkaTakti[playerid] == 0)
				{
					new skin, cap, ilerleme = 1;
					skin = (GetPlayerSkin(playerid) - 1);
					switch(PlayerInfo[playerid][pSapka])
					{
						case 1:    cap = 18926;
						case 2..9: cap = 18926 + PlayerInfo[playerid][pSapka];
					}
					for(new s = 0; s < sizeof(HataliKiyafetler); s++)
					{
						if(skin == HataliKiyafetler[s])
						{
							HataMesajiGonder(playerid, "Kullandýðýnýz kýyafete þapka takamazsýnýz.");
							ilerleme = 0;
						}
					}
					if(ilerleme == 1)
					{
						SapkaTakti[playerid] = 1;
						SetPlayerAttachedObject(playerid, 2, cap, 2, CapsSkinOffSet[skin][0], CapsSkinOffSet[skin][1], CapsSkinOffSet[skin][2], CapsSkinOffSet[skin][3], CapsSkinOffSet[skin][4], CapsSkinOffSet[skin][5]);
	                    BilgiMesajiGonder(playerid, "Þapkanýzý taktýnýz, çýkartmak için: {86D060}/sapka");
	                    return 1;
	                 }
				}
				else
				{
				    SapkaTakti[playerid] = 0;
				    RemovePlayerAttachedObject(playerid, 2);
					BilgiMesajiGonder(playerid, "Þapkanýzý çýkarttýnýz, takmak için: {86D060}/sapka");
     				return 1;
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Þapkanýz bulunmamaktadýr.");
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/rag", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pRag] > 0)
         	{
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new vehicleid = GetPlayerVehicleID(playerid);
		     		if(GetVehicleModel(vehicleid) == 448 || GetVehicleModel(vehicleid) == 461 || GetVehicleModel(vehicleid) == 462 || GetVehicleModel(vehicleid) == 463 || GetVehicleModel(vehicleid) == 468 || GetVehicleModel(vehicleid) == 471 || GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || GetVehicleModel(vehicleid) == 521 || GetVehicleModel(vehicleid) == 522 || GetVehicleModel(vehicleid) == 523)
					{
						if(KemerTakti[playerid] == 1)
						{
						    HataMesajiGonder(playerid, "Kafanýzda kask varken, rag takamazsýnýz.");
						}
					}
				}
				if(RagTakti[playerid] == 0)
				{
					RagTakti[playerid] = 1;
					if(PlayerInfo[playerid][pRag] ==  0)
					{
						SetPlayerAttachedObject(playerid, 3, 18911, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  1)
					{
						SetPlayerAttachedObject(playerid, 3, 18912, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  2)
					{
						SetPlayerAttachedObject(playerid, 3, 18913, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  3)
					{
						SetPlayerAttachedObject(playerid, 3, 18914, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  4)
					{
						SetPlayerAttachedObject(playerid, 3, 18915, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  5)
					{
						SetPlayerAttachedObject(playerid, 3, 18916, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  6)
					{
						SetPlayerAttachedObject(playerid, 3, 18917, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  7)
					{
						SetPlayerAttachedObject(playerid, 3, 18918, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  8)
					{
						SetPlayerAttachedObject(playerid, 3, 18919, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
					if(PlayerInfo[playerid][pRag] ==  9)
					{
						SetPlayerAttachedObject(playerid, 3, 18920, 2, 0.08, 0.01, -0.005, 90, 170, 90);
					}
                    BilgiMesajiGonder(playerid, "Ragýnýzý taktýnýz, çýkartmak için: {86D060}/rag");
                    return 1;
				}
				else
				{
				    RagTakti[playerid] = 0;
				    RemovePlayerAttachedObject(playerid, 3);
					BilgiMesajiGonder(playerid, "Ragýnýzý çýkarttýnýz, takmak için: {86D060}/rag");
     				return 1;
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Ragýnýz bulunmamaktadýr.");
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/gozluk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pGozluk] > 0)
         	{
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new vehicleid = GetPlayerVehicleID(playerid);
		     		if(GetVehicleModel(vehicleid) == 448 || GetVehicleModel(vehicleid) == 461 || GetVehicleModel(vehicleid) == 462 || GetVehicleModel(vehicleid) == 463 || GetVehicleModel(vehicleid) == 468 || GetVehicleModel(vehicleid) == 471 || GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || GetVehicleModel(vehicleid) == 521 || GetVehicleModel(vehicleid) == 522 || GetVehicleModel(vehicleid) == 523)
					{
						if(KemerTakti[playerid] == 1)
						{
						    HataMesajiGonder(playerid, "Kafanýzda kask varken, gözlük takamazsýnýz.");
						}
					}
				}
				if(GozlukTakti[playerid] == 0)
				{
				    new skin = GetPlayerSkin(playerid);
					GozlukTakti[playerid] = 1;
					new glasseid = 19006 + (PlayerInfo[playerid][pGozluk] - 1);
					SetPlayerAttachedObject(playerid, 4, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                    BilgiMesajiGonder(playerid, "Gözlüðünüzü taktýnýz, çýkartmak için: {86D060}/gozluk");
                    return 1;
				}
				else
				{
				    GozlukTakti[playerid] = 0;
				    RemovePlayerAttachedObject(playerid, 4);
					BilgiMesajiGonder(playerid, "Gözlüðünüzü çýkarttýnýz, takmak için: {86D060}/gozluk");
     				return 1;
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Gözlüðünüz bulunmamaktadýr.");
			}
	    }
	    return 1;
	}
 	if(strcmp(cmd, "/evsat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
			    new house = PlayerInfo[playerid][pHouseKey];
				if(PlayerToPoint(1.0,playerid,Houses[house][EnterX],Houses[house][EnterY],Houses[house][EnterZ]))
				{
					Houses[house][Locked] = 1;
					Houses[house][Owned] = 0;
					Houses[house][Rentable] = 0;
					Houses[house][RentCost] = 0;
					strmid(Houses[house][Owner], "None", 0, strlen("None"), 255);
					GivePlayerCash(playerid,Houses[house][HousePrice]/2);
					format(string, sizeof(string), "Evinizi %d$ karþýlýðýnda sattýnýz.", Houses[house][HousePrice]/2);
					BilgiMesajiGonder(playerid, string);
					PlayerInfo[playerid][pHouseKey] = 255;
					PlayerInfo[playerid][pSpawn] = 4;
					Delete3DTextLabel(EvTanimi[house]);
					GetCoords2DZone(Houses[house][EnterX],Houses[house][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu ev satýlýk!\nÜcret: %d$\nAdres: %s %d\nEvi satýn almak için: /satinal",Houses[house][HousePrice],houselocation,house);
		    		EvTanimi[house] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[house][EnterX], Houses[house][EnterY], Houses[house][EnterZ]+1.0, 25, 0, 1);
					OnPlayerDataSave(playerid);
					EvKaydet(house);
					format(string, sizeof(string), "%s, %d ID'li (%f, %f, %f) evi sattý.", GetPlayerNameEx(playerid), house, Houses[house][EnterX], Houses[house][EnterY], Houses[house][EnterZ]);
					EvLog(string);
					return 1;
				}
				else
				{
				    HataMesajiGonder(playerid, "Evinizin kapýsýnýn önünde deðilken evi satamazsýnýz.");
				}
			}
			else
			{
    			HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evkilit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(Houses); i++)
			{
				if (PlayerToPoint(3.0, playerid,Houses[i][EnterX], Houses[i][EnterY], Houses[i][EnterZ]) || PlayerToPoint(3.0, playerid,Houses[i][ExitX], Houses[i][ExitY], Houses[i][ExitZ]))
				{
					if(PlayerInfo[playerid][pHouseKey] == i)
					{
						if(Houses[i][Locked] == 1)
						{
							Houses[i][Locked] = 0;
							BilgiMesajiGonder(playerid, "Kapý kilidi açýldý.");
		                    PlayerActionMessage(playerid,15.0,"evin anahtarlarýný kapýya sokar ve kilidi açar.");
		                    EvKaydet(i);
							return 1;
						}
						if(Houses[i][Locked] == 0)
						{
							Houses[i][Locked] = 1;
							BilgiMesajiGonder(playerid, "Kapý kilitlendi.");
		                    PlayerActionMessage(playerid,15.0,"evin anahtarlarýný kapýya sokar ve evi kilitler.");
		                    EvKaydet(i);
							return 1;
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Bu evin sahibi siz deðilsiniz.");
					}
				}
			}
	    }
	    return 1;
	}
 	if(strcmp(cmd, "/isyerikapi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(3.0, playerid,Businesses[i][EnterX], Businesses[i][EnterY], Businesses[i][EnterZ]) || PlayerToPoint(3.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					new playername[MAX_PLAYER_NAME];
					GetPlayerName(playerid,playername,sizeof(playername));
					if(PlayerInfo[playerid][pBizKey] == i && strcmp(playername, Businesses[PlayerInfo[playerid][pBizKey]][Owner], true) == 0)
					{
						if(Businesses[i][Locked] == 1)
						{
							Businesses[i][Locked] = 0;
							BilgiMesajiGonder(playerid, "Kapý kilidi açýldý.");
 							PlayerActionMessage(playerid,15.0,"iþyerininin anahtarlarýný kapýya sokar ve kilidi açar.");
		      				IsyeriKaydet(i);
							return 1;
						}
						if(Businesses[i][Locked] == 0)
						{
							Businesses[i][Locked] = 1;
							BilgiMesajiGonder(playerid, "Kapý kilitlendi.");
		                    PlayerActionMessage(playerid,15.0,"iþyerinin anahtarlarýný kapýya sokar ve iþyerini kilitler.");
					        IsyeriKaydet(i);
							return 1;
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Bu iþyerinin sahibi siz deðilsiniz.");
					}
				}
			}
	    }
	    return 1;
	}
 	if(strcmp(cmd, "/evikirala", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(Houses); h++)
			{
				if(PlayerToPoint(2.0, playerid, Houses[h][EnterX], Houses[h][EnterY], Houses[h][EnterZ]) && Houses[h][Owned] == 1 &&  Houses[h][Rentable] == 1)
				{
					if(PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
					{
						HataMesajiGonder(playerid, "Zaten bir evim sahibisiniz.");
						return 1;
					}
					if(GetPlayerCash(playerid) >= Houses[h][RentCost])
					{
						PlayerInfo[playerid][pHouseKey] = h;
						PlayerInfo[playerid][pSpawn] = 2;
						GivePlayerCash(playerid,-Houses[h][RentCost]);
						Houses[h][Money] = Houses[h][Money]+Houses[h][RentCost];
						SetPlayerInterior(playerid,Houses[h][ExitInterior]);
						SetPlayerPos(playerid,Houses[h][ExitX],Houses[h][ExitY],Houses[h][ExitZ]);
						SetPlayerVirtualWorld(playerid,h);
						BilgiMesajiGonder(playerid, "Evi kiraladýnýz.");
						OnPlayerDataSave(playerid);
						return 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Bu ev kiralanmýyor.");
					}
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/kiraucreti", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pHouseKey];
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/kiraucreti [Ücret]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 9999)
				{
					HataMesajiGonder(playerid, "Kira $1'dan küçük, $9999'dan büyük olamaz.");
					return 1;
				}
				Houses[bouse][RentCost] = strval(tmp);
				format(string, sizeof(string), "Evinizin kira ücreti %d olarak ayarlandý.", Houses[bouse][RentCost]);
				BilgiMesajiGonder(playerid, string);
				Delete3DTextLabel(EvTanimi[PlayerInfo[playerid][pHouseKey]]);
				GetCoords2DZone(Houses[PlayerInfo[playerid][pHouseKey]][EnterX],Houses[PlayerInfo[playerid][pHouseKey]][EnterY], houselocation, MAX_ZONE_NAME);
				format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d\nKira ücreti: %d$\nOda kiralamak için evikirala !",Houses[PlayerInfo[playerid][pHouseKey]][Owner],houselocation,PlayerInfo[playerid][pHouseKey],Houses[PlayerInfo[playerid][pHouseKey]][RentCost]);
    			EvTanimi[PlayerInfo[playerid][pHouseKey]] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[PlayerInfo[playerid][pHouseKey]][EnterX], Houses[PlayerInfo[playerid][pHouseKey]][EnterY], Houses[PlayerInfo[playerid][pHouseKey]][EnterZ]+1.0, 25, 0, 1);
				EvKaydet(PlayerInfo[playerid][pHouseKey]);
				return 1;
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
				return 1;
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/kiradurumu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (PlayerInfo[playerid][pHouseKey] != 255 && strcmp(playername, Houses[PlayerInfo[playerid][pHouseKey]][Owner], true) == 0)
			{
				if(Houses[PlayerInfo[playerid][pHouseKey]][Rentable] == 0)
				{
    				BilgiMesajiGonder(playerid, "Evinizin kirasýný aktif ettiniz.");
				    Houses[PlayerInfo[playerid][pHouseKey]][Rentable] = 1;
					Delete3DTextLabel(EvTanimi[PlayerInfo[playerid][pHouseKey]]);
					GetCoords2DZone(Houses[PlayerInfo[playerid][pHouseKey]][EnterX],Houses[PlayerInfo[playerid][pHouseKey]][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d\nKira ücreti: %d$\nOda kiralamak için evikirala !",Houses[PlayerInfo[playerid][pHouseKey]][Owner],houselocation,PlayerInfo[playerid][pHouseKey],Houses[PlayerInfo[playerid][pHouseKey]][RentCost]);
		        	EvTanimi[PlayerInfo[playerid][pHouseKey]] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[PlayerInfo[playerid][pHouseKey]][EnterX], Houses[PlayerInfo[playerid][pHouseKey]][EnterY], Houses[PlayerInfo[playerid][pHouseKey]][EnterZ]+1.0, 25, 0, 1);
				    EvKaydet(PlayerInfo[playerid][pHouseKey]);
				}
				else if(Houses[PlayerInfo[playerid][pHouseKey]][Rentable] == 1)
				{
    				BilgiMesajiGonder(playerid, "Evinizin kirasýný disaktif ettiniz.");
				    Houses[PlayerInfo[playerid][pHouseKey]][Rentable] = 0;
					Delete3DTextLabel(EvTanimi[PlayerInfo[playerid][pHouseKey]]);
					GetCoords2DZone(Houses[PlayerInfo[playerid][pHouseKey]][EnterX],Houses[PlayerInfo[playerid][pHouseKey]][EnterY], houselocation, MAX_ZONE_NAME);
					format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d",Houses[PlayerInfo[playerid][pHouseKey]][Owner],houselocation, PlayerInfo[playerid][pHouseKey]);
					EvTanimi[PlayerInfo[playerid][pHouseKey]] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[PlayerInfo[playerid][pHouseKey]][EnterX], Houses[PlayerInfo[playerid][pHouseKey]][EnterY], Houses[PlayerInfo[playerid][pHouseKey]][EnterZ]+1.0, 25, 0, 1);
				    EvKaydet(PlayerInfo[playerid][pHouseKey]);
				}
				return 1;
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/isyerigirisucreti", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pBizKey];
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid,playername,sizeof(playername));
			if (bouse != 255 && strcmp(playername, Businesses[PlayerInfo[playerid][pBizKey]][Owner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/isyerigirisucreti [Miktar]");
					return 1;
				}
				if(strval(tmp) < 0 || strval(tmp) > 9999)
				{
					HataMesajiGonder(playerid, "Ücret $0'dan küçük, $9999'dan büyük olamaz.");
					return 1;
				}
				Businesses[bouse][EntranceCost] = strval(tmp);
				format(string, sizeof(string), "Ýþyerinizin giriþ ücretini %d$ olarak ayarladýnýz.", Businesses[bouse][EntranceCost]);
				BilgiMesajiGonder(playerid, string);
				Delete3DTextLabel(IsyeriTanimi[bouse]);
				format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[bouse][BusinessName],Businesses[bouse][Owner],Businesses[bouse][EntranceCost]);
    			IsyeriTanimi[bouse] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[bouse][EnterX], Businesses[bouse][EnterY], Businesses[bouse][EnterZ]+1.0, 25, 0, 1);
				IsyeriKaydet(bouse);
			}
			else
			{
			    HataMesajiGonder(playerid, "Herhangi bir iþyerinin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/isyeriismi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pBizKey];
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid,playername,sizeof(playername));
			if (bouse != 255 && strcmp(playername, Businesses[PlayerInfo[playerid][pBizKey]][Owner], true) == 0)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/isyeriismi [Ýþyeri ismi]");
					return 1;
				}
				if(PlayerToPoint(1.0,playerid,Businesses[bouse][EnterX],Businesses[bouse][EnterY],Businesses[bouse][EnterZ]) || PlayerToPoint(25.0,playerid,Businesses[bouse][ExitX],Businesses[bouse][ExitY],Businesses[bouse][ExitZ]))
				{
				    if(strfind( result , "|" , true ) == -1)
				    {
						strmid(Businesses[bouse][BusinessName], result, 0, 64, 255);
						format(string, sizeof(string), "Ýþ yerinizin ismini %s olarak deðiþtirdiniz.",Businesses[bouse][BusinessName]);
						BilgiMesajiGonder(playerid, string);
						Delete3DTextLabel(IsyeriTanimi[bouse]);
						format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[bouse][BusinessName],Businesses[bouse][Owner],Businesses[bouse][EntranceCost]);
    					IsyeriTanimi[bouse] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[bouse][EnterX], Businesses[bouse][EnterY], Businesses[bouse][EnterZ]+1.0, 25, 0, 1);
						IsyeriKaydet(bouse);
					}
					else
					{
						HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Ýþyerinizin giriþinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir iþyerinin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
 	if (strcmp(cmd, "/isyeribilgileri", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pBizKey];
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid,playername,sizeof(playername));
			if(bouse != 255 && strcmp(playername, Businesses[PlayerInfo[playerid][pBizKey]][Owner], true) == 0)
			{
 				if(PlayerToPoint(1.0,playerid,Businesses[bouse][EnterX],Businesses[bouse][EnterY],Businesses[bouse][EnterZ]) || PlayerToPoint(20.0,playerid,Businesses[bouse][ExitX],Businesses[bouse][ExitY],Businesses[bouse][ExitZ]))
				{
				    format(string, sizeof(string), "[%s]",Businesses[bouse][BusinessName]);
				    BilgiMesajiGonder(playerid, string);
					new kilityazi[256];
					if(Businesses[bouse][Locked] == 0) { kilityazi = "Kilitli deðil"; }
					if(Businesses[bouse][Locked] == 1) { kilityazi = "Kilitli"; }
					format(string, sizeof(string), "Ýþyeri ismi: %s - Kasadaki para: %d$ - Kilit: %s - Ürün: %d - Giriþ Ücreti: %d$", Businesses[bouse][BusinessName],Businesses[bouse][Till],kilityazi,Businesses[bouse][Products],Businesses[bouse][EntranceCost]);
					GenelMesajGonder(playerid, string);
					return 1;
				}
				else
				{
					HataMesajiGonder(playerid, "Ýþ yerinizin içerisinde deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir iþyerinin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
  	if(strcmp(cmd, "/isyerisat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pBizKey] != 255 && strcmp(playername, Businesses[PlayerInfo[playerid][pBizKey]][Owner], true) == 0)
			{
			    new biz = PlayerInfo[playerid][pBizKey];
				if(PlayerToPoint(1.0,playerid,Businesses[biz][EnterX],Businesses[biz][EnterY],Businesses[biz][EnterZ]))
				{
					Businesses[biz][Locked] = 1;
					Businesses[biz][Owned] = 0;
					strmid(Businesses[biz][Owner], "None", 0, strlen("None"), 255);
					GivePlayerCash(playerid,Businesses[biz][BizPrice]/2);
					format(string, sizeof(string), "Ýþyerinizi %d$'a sattýnýz.", Businesses[biz][BizPrice]/2);
					BilgiMesajiGonder(playerid, string);
					PlayerInfo[playerid][pBizKey] = 255;
					PlayerInfo[playerid][pSpawn] = 4;
					Delete3DTextLabel(IsyeriTanimi[biz]);
					format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[biz][BusinessName],Businesses[biz][BizPrice]);
   					IsyeriTanimi[biz] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[biz][EnterX], Businesses[biz][EnterY], Businesses[biz][EnterZ]+1.0, 25, 0, 1);
					OnPlayerDataSave(playerid);
					IsyeriKaydet(biz);
					format(string, sizeof(string), "%s, %d ID'li (%s, %f, %f, %f) iþyerini sattý.", GetPlayerNameEx(playerid), biz, Businesses[biz][BusinessName], Businesses[biz][EnterX], Businesses[biz][EnterY], Businesses[biz][EnterZ]);
					IsyeriLog(string);
					return 1;
				}
				else
				{
					HataMesajiGonder(playerid, "Ýþyerinizi satmak için, iþyerinizin giriþinde olmak zorundasýnýz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Herhangi bir iþyerinin sahibi deðilsiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/benzin", true) == 0)
	{
		if(IsAtGasStation(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
			    return 1;
			}
			new vehicle = GetPlayerVehicleID(playerid);
			new refillprice;
			if(Fuel[vehicle] <= 30)
			{
				refillprice = random(100);
			}
			else if(Fuel[vehicle] >= 40)
			{
				refillprice = random(70);
			}
			else if(Fuel[vehicle] >= 55)
			{
				refillprice = random(40);
			}
   			if(GetPlayerCash(playerid) >= refillprice)
   			{
   			    if(Fuel[vehicle] <= 99)
   			    {
					if(MotorDurumu[vehicle] == 1)
					{
					    HataMesajiGonder(playerid, "Motoru açýk araçlara benzin alamazsýnýz.");
					    return 1;
					}
	      			new form[128];
		        	format(form, sizeof(form), "%d$ karþýlýðýnda aracýnýzýn deposu dolduruldu.",refillprice);
		        	BilgiMesajiGonder(playerid, form);
			        GivePlayerCash(playerid,-refillprice);
			        Fuel[vehicle] = 100;
			        OutOfFuel[vehicle] = 0;
		        }
		        else
		        {
					HataMesajiGonder(playerid, "Aracýnýzýn benzin deposu zaten dolu.");
		        }
		    }
      		else
      		{
       			HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
      		}
		}
		else
		{
			HataMesajiGonder(playerid, "Benzin istasyonunda deðilsiniz.");
		}
 		return 1;
	}
	if(strcmp(cmd, "/bidonbenzin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pBenzinBidon] > 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/benzinbidon [Doldurulucak miktar]");
					return 1;
				}
				new benzin = strval(tmp);
			    if(PlayerInfo[playerid][pBenzinBidon] >= benzin)
		     	{
			     	new vehicle = GetPlayerVehicleID(playerid);
					if(!IsPlayerInAnyVehicle(playerid))
					{
					    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
					    return 1;
					}
		   		    if(Fuel[vehicle] == 100)
		   		    {
		   		        HataMesajiGonder(playerid, "Aracýn benzini zaten tamamen dolu.");
						return 1;
				   	}
		   		    if(Fuel[vehicle]+benzin > 100)
		   		    {
						HataMesajiGonder(playerid, "Toplam benzin 100'den fazla olamaz.");
						return 1;
					}
					if(MotorDurumu[vehicle] == 1)
					{
					    HataMesajiGonder(playerid, "Motoru açýk araçlara benzin koyamazsýnýz.");
					    return 1;
					}
					Fuel[vehicle] += benzin;
					PlayerInfo[playerid][pBenzinBidon] -= benzin;
					format(string, sizeof(string), "Aracýnýza benzin doldurdunuz, yeni benzin: %d", Fuel[vehicle]);
					BilgiMesajiGonder(playerid, string);
					OutOfFuel[vehicle] = 0;
				}
				else
				{
		    		HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
				}
			}
			else
			{
    			HataMesajiGonder(playerid, "Benzin bidonunuz bulunmamaktadýr.");
			}
		}
		return 1;
	}
/*
	if(strcmp(cmd, "/dil", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			format(string, sizeof(string),"Ýngilizce\nUnlu\nÝtalyanca\nRusça\nFransýzca\nÝspanyolca\nÝbranice\nÇince\nJaponca");
			ShowPlayerDialog(playerid, 827,DIALOG_STYLE_LIST,"Dil deðiþtirme",string,"Seç","Kapat");
			return 1;
	    }
	} */
	if(strcmp(cmd, "/karakter", true) == 0)
	{
		ShowStats(playerid,playerid);
		return 1;
	}
	if(strcmp(cmd, "/spawndegistir", true) == 0)
	{
		format(string, sizeof(string),"Faction spawn\nEv spawn\nOtel spawn\nTren garý\nSon kaldýðýnýz yer");
		ShowPlayerDialog(playerid, 6,DIALOG_STYLE_LIST,"Spawn yeri",string,"Seç","Kapat");
		return 1;
	}
	if(strcmp(cmd, "/afactioncmds", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
		    BilgiMesajiGonder(playerid, "[Oluþum yönetici komutlarý]");
			GenelMesajGonder(playerid, "/afactionname - /afactiontype - /afactionspawn - /afactionrankname - /afactionrankamount - /afactionjoinrank");
			GenelMesajGonder(playerid, "/agotofaction - /afactionskin - /afactionuseskins - /afactioncolor - /afactionusecolor - /afactionbank");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if(strcmp(cmd, "/abusinesscmds", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			BilgiMesajiGonder(playerid, "[Ýþyeri yönetici komutlarý]");
			GenelMesajGonder(playerid, "/abusinessname - /abusinessentrance - /abusinessexit - /abusinessprice - /abusinesssell - /abusinesstype");
			GenelMesajGonder(playerid, "/agotobusiness - /abusinessint - /abusinessproducts - /createbusiness(/cbs)");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/abuildingcmds", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			BilgiMesajiGonder(playerid, "[Bina yönetici komutlarý]");
			GenelMesajGonder(playerid, "/abuildingname - /abuildingentrance - /abuildingexit - /abuildinglock - /abuildingfee");
			GenelMesajGonder(playerid, "/agotobuilding - /abuildingint - /createbuilding(/cb)");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if(strcmp(cmd, "/ajobcmds", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			BilgiMesajiGonder(playerid, "[Meslek yönetici komutlarý]");
			GenelMesajGonder(playerid, "/ataxijobpos - /aotobusjobpos - /acleanerjobpos - /atruckjobpos - /ashippingjobpos");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if(strcmp(cmd, "/evyardim", true) == 0)
	{
		BilgiMesajiGonder(playerid, "[Ev komutlarý]");
		GenelMesajGonder(playerid, "/gir - /cik - /satinal - /evsat - /kiradurumu - /kiraucreti - /evikirala - /evkilit");
		GenelMesajGonder(playerid, "/evparacek - /evparayatir - /evmateryalkoy - /evmateryalal - /evuyusturucukoy - /evuyusturucual");
		return 1;
	}
	if(strcmp(cmd, "/factionyardim", true) == 0)
	{
	    if(PlayerInfo[playerid][pFaction] != 255)
	    {
			BilgiMesajiGonder(playerid, "[Oluþum komutlarý]");
			GenelMesajGonder(playerid, "/faction - /factionmateryal - /factionuyusturucu - /factionmateryalkoy - /factionmateryalal");
			GenelMesajGonder(playerid, "/factionuyusturucukoy - /factionuyusturucual - /factionbankaparacek - /factionparayatir - /factionbankasi - /online");
		}
		else
		{
			HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
		}
		return 1;
	}
	if(strcmp(cmd, "/telefonyardim", true) == 0)
	{
		BilgiMesajiGonder(playerid, "[Telefon komutlarý]");
		GenelMesajGonder(playerid, "/ara - /telefonac - /telefonkapa - /hoparlor - /sms");
		return 1;
	}
	if(strcmp(cmd, "/isyeriyardim", true) == 0)
	{
		BilgiMesajiGonder(playerid, "[Ýþyeri komutlarý]");
		GenelMesajGonder(playerid, "/satinal - /isyerisat - /isyeribilgileri - /isyerigirisucreti - /isyeriismi - /isyerikapi");
		GenelMesajGonder(playerid, "/isyeriparakoy - /isyeriparacek - /isyeriurunkoy");
		return 1;
	}
	if(strcmp(cmd, "/acarcmds", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			BilgiMesajiGonder(playerid, "[Araç yönetici komutlarý]");
			GenelMesajGonder(playerid, "/acartype - /acarpark - /acarcolor - /acarmodel - /acarfaction - /acarrandommodel - /aracspawnpos - /gemispawnpos");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if(strcmp(cmd, "/ahousecmds", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			BilgiMesajiGonder(playerid, "[Ev yönetici komutlarý]");
			GenelMesajGonder(playerid, "/ahouseentrance - /ahouseexit - /ahouseprice - /ahousesell - /ahouseint - /createhouse(/ch)");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/yaraliduzelt",true) == 0)
	{
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
		    KullanimMesajiGonder(playerid,"/yaraliduzelt [ID]");
		    return 1;
		}
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			new id = SQLdenBul(strval(tmp));
			ClearAnimations(playerid);
		    TextDrawHideForPlayer(id,EkranKapat[id]);
		    TogglePlayerControllable(id, true);
		    Yarali[id] = 0;
			new yazi[256];
			format(yazi,sizeof(yazi),"%s isimli yönetici yaralanmanýzý düzeltti.",GetPlayerNameEx2(playerid,id));
			BilgiMesajiGonder(id,yazi);
			format(yazi,sizeof(yazi),"%s isimli kiþinin yaralanmasýný düzelttiniz.",GetPlayerNameEx2(id,playerid));
			BilgiMesajiGonder(playerid,yazi);
			return 1;
		}
		else
		{
		    YetersizYetki(playerid,cmdtext);
		    return 1;
		}
	}
	
	if(strcmp(cmd, "/apositioncmds", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			BilgiMesajiGonder(playerid, "[Pozisyon yönetici komutlarý]");
			GenelMesajGonder(playerid, "/agotopolicedutypos - /agotopolicearrestpos - /agotopolicegunpos - /agotodrivingtestpos");
			GenelMesajGonder(playerid, "/agotoflyingtestpos - /agotoweaponlicpos -  /agotobank - /apolicedutypos - /apolicearrestpos");
			GenelMesajGonder(playerid, "/apolicegunpos - /adrivingtestpos - /aflyingtestpos - /aweaponlicensepos - /abankpos");
			GenelMesajGonder(playerid, "/aotelpos - /aotelasansorpos");
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if(strcmp(cmd, "/gooc", true) == 0 || strcmp(cmd, "/go", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (SunucuBilgi[GOOCDurum] == 0)
			{
				HataMesajiGonder(playerid, "Toplu OOC konuþma yöneticiler tarafýndan kapatýlmýþtýr.");
				return 1;
			}
			if(Muted[playerid])
			{
				HataMesajiGonder(playerid, "Yönetici tarafýndan susturulduðunuz için konuþamazsýnýz.");
				return 0;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				KullanimMesajiGonder(playerid, "[/go]oc [Toplu oyun dýþý konuþma]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pAdmin] >= 2)
				{
					format(string, sizeof(string), "[TOPLU OYUN DIÞI] Yönetici %s: %s", GetPlayerNameEx(playerid), result);
					TopluMesajGonder(string);
					OOCLog(string);
					return 1;
				}
    			else
				{
					format(string, sizeof(string), "[TOPLU OYUN DIÞI] Yardýmcý Ekip %s: %s", GetPlayerNameEx(playerid), result);
					TopluMesajGonder(string);
					OOCLog(string);
					return 1;
				}
			}
			else
			{
				format(string, sizeof(string), "[TOPLU OYUN DIÞI] %s: %s", GetPlayerNameEx(playerid), result);
				TopluMesajGonder(string);
				OOCLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/at", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	HataMesajiGonder(playerid, "Sadece aracý sürerken birilerini araçtan atabilirsiniz.");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/at [ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid)
						{
							HataMesajiGonder(playerid, "Kendi kendinizi araçtan atamazsýnýz.");
							return 1;
						}
				        if(IsPlayerInVehicle(playa,test))
				        {
							format(string, sizeof(string), "%s adlý kiþiyi araçtan attýnýz.", GetPlayerNameEx2(playa, playerid));
							BilgiMesajiGonder(playa, string);
							format(string, sizeof(string), "%s adlý kiþi sizi araçtan attý.", GetPlayerNameEx2(playerid, playa));
							BilgiMesajiGonder(playa, string);
							RemoveDriverFromVehicle(playa);
						}
						else
						{
							HataMesajiGonder(playerid, "Kiþi þuan bulunduðunuz aracýn içerisinde deðil.");
						}
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cw", true) == 0)
	{
        if(!IsPlayerConnected(playerid))
		{
		    HataMesajiGonder(playerid, "Öncelikle giriþ yapmalýsýnýz.");
		}
		else
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
	    				if(GetPlayerVehicleID(i)== GetPlayerVehicleID(playerid))
					    {
					        new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[128];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
	        				new string[512];
					        format(string, sizeof(string), "[CW]%s : %s",GetPlayerNameEx(playerid), cmdtext);
					        SendClientMessage(i, COLOR_YELLOW, string);
						}
					}
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Araç içinde olmalýsýnýz.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/awork", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(AdminDuty[playerid] == 1)
		    {
				AdminDuty[playerid] = 0;
				SetPlayerColor(playerid,COLOR_WHITE);
                SetPlayerArmour(playerid,0);
				SetPlayerHealth(playerid,100);
				BilgiMesajiGonder(playerid, "Artýk müsait durumda deðilsiniz.");
				/*format(yazi,sizeof(yazi),"%s isimli yönetici þuanda {D51A00}meþgul.",GetPlayerNameEx(playerid));
				TopluMesajGonder(yazi);*/
		    }
		    else
		    {
				AdminDuty[playerid] = 1;
				SetPlayerColor(playerid,COLOR_ADMINDUTY);
				BilgiMesajiGonder(playerid, "Artýk müsait durumdasýnýz.");
				/*format(yazi,sizeof(yazi),"%s isimli yönetici þuanda {64D500}müsait.",GetPlayerNameEx(playerid));
				TopluMesajGonder(yazi);*/
		    }
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
	if(strcmp(cmd, "/twork", true) == 0)
	{
		if (PlayerInfo[playerid][pTester] >= 1)
		{
		    if(TesterDuty[playerid] == 1)
		    {
				TesterDuty[playerid] = 0;
				SetPlayerColor(playerid,COLOR_ADMINDUTY);
                SetPlayerArmour(playerid,0);
				SetPlayerHealth(playerid,100);
				BilgiMesajiGonder(playerid, "Artýk müsait deðilsiniz.");
				/*format(yazi,sizeof(yazi),"%s isimli tester þuanda {D51A00}meþgul.",GetPlayerNameEx(playerid));
				TopluMesajGonder(yazi);*/
		    }
		    else
		    {
				TesterDuty[playerid] = 1;
				SetPlayerColor(playerid,COLOR_DARKBROWN);
				BilgiMesajiGonder(playerid, "Artýk müsait durumdasýnýz.");
				/*format(yazi,sizeof(yazi),"%s isimli tester þuanda {64D500}müsait.",GetPlayerNameEx(playerid));
				TopluMesajGonder(yazi);*/
		    }
		}
		else
		{
   			YetersizYetki(playerid, cmdtext);
		}
		return 1;
	}
 	if (strcmp(cmd, "/check", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pFaction] != 255 && PlayerInfo[playerid][pRank] == 1 || PlayerInfo[playerid][pFaction] != 255 && PlayerInfo[playerid][pRank] == 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/check [ID]");
					return 1;
				}
	            giveplayerid = SQLdenBul(strval(tmp));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
						format(string, 128, "%s, %s[%d] adlý oyuncunun karakter bilgilerini kontrol etti.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),PlayerInfo[giveplayerid][pSQLid]);
						YoneticiMesajiGonder(string);
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/up", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				return 1;
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/up2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz-3);
				return 1;
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/up3", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+500);
				return 1;
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/mute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/mute [ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						if(Muted[playa] == 0)
						{
							Muted[playa] = 1;
							format(string, sizeof(string), "%s adlý oyuncuyu susturdunuz.",GetPlayerNameEx2(playa, playerid));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý yönetici tarafýndan susturuldunuz.",GetPlayerNameEx2(playerid, playa));
							BilgiMesajiGonder(playa, string);
							format(string, 256, "%s, %s[%d] adlý oyuncuyu susturdu.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid]);
							YoneticiMesajiGonder(string);
						}
						else
						{
							Muted[playa] = 0;
							format(string, sizeof(string), "%s adlý oyuncunun susturulmasýný kaldýrdýnýz.",GetPlayerNameEx2(playa, playerid));
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý yönetici tarafýndan susturulmanýz kaldýrýldý.",GetPlayerNameEx2(playerid, playa));
							BilgiMesajiGonder(playa, string);
							format(string, 256, "%s, %s[%d] adlý oyuncunun susturulmasýný kaldýrdý.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid]);
							YoneticiMesajiGonder(string);
						}
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/uyariver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/uyariver [ID] [Gerekçe]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							KullanimMesajiGonder(playerid, "/uyariver [ID] [Gerekçe]");
							return 1;
						}
						if(PlayerInfo[giveplayerid][pAdmin] >= 5)
						{
						    HataMesajiGonder(playerid, "Lider Yöneticileri uyaramazsýnýz.");
						    return 1;
						}
						PlayerInfo[giveplayerid][pWarnings] += 1;
						format(string, sizeof(string), "%s adlý kiþiyi uyardýnýz. Gerekçe: %s", GetPlayerNameEx2(giveplayerid, playerid), (result));
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s tarafýndan uyarýldýnýz. Gerekçe: %s", GetPlayerNameEx2(playerid, giveplayerid), (result));
						BilgiMesajiGonder(giveplayerid, string);
						format(string, sizeof(string), "5. uyarýnýzda otomatik olarak yasaklanýrsýnýz, þuanki uyarý seviyeniz: %d",PlayerInfo[giveplayerid][pWarnings]);
						IpucuMesajiGonder(giveplayerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuyu uyardý. Gerekçe: %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),PlayerInfo[giveplayerid][pSQLid],(result));
						YoneticiMesajiGonder(string);
						if(PlayerInfo[giveplayerid][pWarnings] >= 4)
						{
							for(new i = 0; i < MAX_PLAYERS; i++)
							{
								format(string,sizeof(string),"%s'nin karakteri sunucudan %s tarafýndan yasaklandý. Gerekçe: 5. kez uyarýlmak",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid),result);
								CezaMesajiGonder(i, string);
							}
							AccountBanLog(string);
							PlayerInfo[giveplayerid][pBanned] = 1;
							OnPlayerDataSave(giveplayerid);
							Kick(giveplayerid);
							return 1;
						}
						return 1;
					}
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/goto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/goto [ID]");
					return 1;
				}
				new Float:plocx,Float:plocy,Float:plocz;
				new plo;
				plo = SQLdenBul(strval(tmp));
				if (IsPlayerConnected(plo))
				{
				    if(plo != INVALID_PLAYER_ID)
				    {
						GetPlayerPos(plo, plocx, plocy, plocz);
						new interior = GetPlayerInterior(plo);
						new world = GetPlayerVirtualWorld(plo);
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							SetPlayerVirtualWorld(playerid,world);
							SetPlayerInterior(playerid,interior);
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
							SetPlayerVirtualWorld(playerid,world);
							SetPlayerInterior(playerid,interior);
						}
						format(string, sizeof(string), "%s adlý oyuncunun yanýna ýþýnlandýnýz.", GetPlayerNameEx2(plo, playerid));
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s adlý yönetici yanýnýza ýþýnlandý.", GetPlayerNameEx2(playerid, plo));
						BilgiMesajiGonder(plo, string);
						format(string, 128, "%s, %s[%d] adlý oyuncunun yanýna ýþýnlandý.",GetPlayerNameEx(playerid),GetPlayerNameEx(plo),PlayerInfo[plo][pSQLid]);
						YoneticiMesajiGonder(string);
					}
					else
					{
						HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
			}
			else
			{
      			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotokb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1602.3035,2663.6599,54.9961);
				}
				else
				{
					SetPlayerPos(playerid, -1602.3035,2663.6599,54.9961);
				}
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				BilgiMesajiGonder(playerid, "El Quebrados'a ýþýnlandýnýz.");
				format(string, 128, "%s[%d] El Quebrados'a ýþýnlandý.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
				YoneticiMesajiGonder(string);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotols", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
				}
				else
				{
					SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
				}
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				BilgiMesajiGonder(playerid, "Los Santos'a ýþýnlandýnýz.");
				format(string, 128, "%s[%d] Los Santos'a ýþýnlandý.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
				YoneticiMesajiGonder(string);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotolv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				BilgiMesajiGonder(playerid, "Las Venturas'a ýþýnlandýnýz.");
				format(string, 128, "%s[%d] Las Venturas'a ýþýnlandý.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
				YoneticiMesajiGonder(string);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotosf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
				}
				else
				{
					SetPlayerPos(playerid, -1417.0,-295.8,14.1);
				}
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				BilgiMesajiGonder(playerid, "San Fierro'ya ýþýnlandýnýz.");
				format(string, 128, "%s[%d] San Fierro'ya ýþýnlandý.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
				YoneticiMesajiGonder(string);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	
  	if(strcmp(cmd, "/gethere", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/gethere [ID]");
					return 1;
				}
				new Float:plocx,Float:plocy,Float:plocz;
				new plo;
				plo = SQLdenBul(strval(tmp));
				if (IsPlayerConnected(plo))
				{
				    if(plo != INVALID_PLAYER_ID)
				    {
						GetPlayerPos(playerid, plocx, plocy, plocz);
						new interior = GetPlayerInterior(playerid);
						new world = GetPlayerVirtualWorld(playerid);
						if (GetPlayerState(plo) == 2)
						{
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							SetPlayerVirtualWorld(plo,world);
							SetPlayerInterior(plo,interior);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
							SetPlayerVirtualWorld(plo,world);
							SetPlayerInterior(plo,interior);
						}
						format(string, sizeof(string), "%s adlý oyuncuyu yanýnýza ýþýnlandýnýz.", GetPlayerNameEx2(plo, playerid));
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s adlý yönetici sizi yanýnýna ýþýnladý.", GetPlayerNameEx2(playerid, plo));
						BilgiMesajiGonder(plo, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuyu yanýna ýþýnladý.",GetPlayerNameEx(playerid),GetPlayerNameEx(plo),PlayerInfo[plo][pSQLid]);
						YoneticiMesajiGonder(string);
					}
					else
					{
						HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
			}
			else
			{
      			YetersizYetki(playerid, cmdtext);
			}

		}
		return 1;
	}
	if(strcmp(cmd, "/freeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/freeze [ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "%s adlý yönetici tarafýndan donduruldunuz.",GetPlayerNameEx2(playerid, playa));
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý kiþiyi dondurdunuz.",GetPlayerNameEx2(playa, playerid));
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuyu dondurdu.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid]);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/selamlas1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/selamlas1 [ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(playa))
			    {
			        	if (ProxDetectorS(8.0, playerid, playa))
						{
						
					        if(playa != INVALID_PLAYER_ID)
					        {
								format(string, sizeof(string), "%s isimli oyuncu sizinle selamlaþmak istiyor.\n Onaylýyor musunuz ?",GetPlayerNameEx(playerid));
		                        ShowPlayerDialog(playa,7775,DIALOG_STYLE_MSGBOX,"Selamlaþma",string,"Evet","Hayir");
		                        selamlastigim[playerid] = playa;
		                        selamlastigim[playa] = playerid;
							}
                        }
						else
						{
						    HataMesajiGonder(playerid, "Selamlaþmak istediðiniz oyuncunun yakýnýnda olmalýsýnýz.");
						}
				}
		}
		return 1;
	}
	if(strcmp(cmd, "/selamlas2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/selamlas2 [ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(playa))
			    {
			        	if (ProxDetectorS(8.0, playerid, playa))
						{
					        if(playa != INVALID_PLAYER_ID)
					        {
								format(string, sizeof(string), "%s isimli oyuncu sizinle selamlaþmak istiyor.\n Onaylýyor musunuz ?",GetPlayerNameEx(playerid));
		                        ShowPlayerDialog(playa,7776,DIALOG_STYLE_MSGBOX,"Selamlaþma",string,"Evet","Hayir");
		                        selamlastigim[playerid] = playa;
		                        selamlastigim[playa] = playerid;
							}
                        }
						else
						{
						    HataMesajiGonder(playerid, "Selamlaþmak istediðiniz oyuncunun yakýnýnda olmalýsýnýz.");
						}
				}
		}
		return 1;
	}
	if(strcmp(cmd, "/selamlas3", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/selamlas3 [ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(playa))
			    {
			        	if (ProxDetectorS(8.0, playerid, playa))
						{
					        if(playa != INVALID_PLAYER_ID)
					        {
								format(string, sizeof(string), "%s isimli oyuncu sizinle selamlaþmak istiyor.\n Onaylýyor musunuz ?",GetPlayerNameEx(playerid));
		                        ShowPlayerDialog(playa,7777,DIALOG_STYLE_MSGBOX,"Selamlaþma",string,"Evet","Hayir");
		                        selamlastigim[playerid] = playa;
		                        selamlastigim[playa] = playerid;
							}
                        }
						else
						{
						    HataMesajiGonder(playerid, "Selamlaþmak istediðiniz oyuncunun yakýnýnda olmalýsýnýz.");
						}
				}
		}
		return 1;
	}
	if(strcmp(cmd, "/uf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTester] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/uf [ID]");
					return 1;
				}
				new playa;
				playa = SQLdenBul(strval(tmp));
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "%s adlý yönetici tarafýndan çözüldünüz.",GetPlayerNameEx2(playerid, playa));
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý kiþiyi çözdünüz.",GetPlayerNameEx2(playa, playerid));
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuyu çözdü.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid]);
						YoneticiMesajiGonder(string);

					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/gametext", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					KullanimMesajiGonder(playerid, "/gametext [Yazý]");
					return 1;
				}
				format(string, sizeof(string), "~r~%s: ~w~%s",GetPlayerNameEx(playerid),result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 6);
					}
				}
				return 1;
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/ajail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/ajail [ID] [Dakika] [Gerekçe]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							KullanimMesajiGonder(playerid, "/ajail [ID] [Dakika] [Gerekçe]");
							return 1;
						}
						if(PlayerInfo[playa][pAdmin] >= 5)
						{
							HataMesajiGonder(playerid, "Lider Yöneticileri hapise atamazsýnýz.");
			    			return 1;
						}
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							format(string,sizeof(string),"%s adlý oyuncu %s tarafýndan hapise atýldý. Gerekçe: %s - %d dk.",GetPlayerNameEx(playa),GetPlayerNameEx(playerid),result, money);
							CezaMesajiGonder(i, string);
						}
						PlayerInfo[playa][pJailed] = 2;
						PlayerInfo[playa][pJailTime] = money*60;
						SetPlayerInterior(playa, 10);
						SetPlayerVirtualWorld(playa, 0);
						SetPlayerPos(playa, 227.5280,110.4332,999.0156);
						TogglePlayerControllable(playa, 0);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hapistencikar",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
             	YetersizYetki(playerid, cmdtext);
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				KullanimMesajiGonder(playerid, "/hapistencikar [ID]");
				return 1;
			}
			giveplayerid = SQLdenBul(strval(tmp));
			if(IsPlayerConnected(giveplayerid))
			{
			    if(PlayerInfo[giveplayerid][pJailed] == 0)
				{
					HataMesajiGonder(playerid, "Hapisten çýkartmaya çalýþtýðýnýz kiþi hapiste deðil.");
					return 1;
				}
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					format(string, sizeof(string), "%s adlý yönetici tarafýndan cezanýz sonlandýrýldý.", GetPlayerNameEx2(playerid, giveplayerid));
					BilgiMesajiGonder(giveplayerid, string);
					PlayerInfo[giveplayerid][pJailTime] = 0;
					PlayerInfo[giveplayerid][pJailed] = 0;
					TogglePlayerControllable(playerid, 1);
					SetPlayerSpawn(giveplayerid);
					format(string, sizeof(string), "%s, %s[%d] adlý oyuncunun hapis cezasýný bitirdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),PlayerInfo[giveplayerid][pSQLid]);
					YoneticiMesajiGonder(string);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						format(string,sizeof(string),"%s adlý oyuncu %s adlý yönetici tarafýndan hapisten çýkartýldý.",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
						CezaMesajiGonder(i, string);
					}
				}
			}
	    }
	    return 1;
	}
 	if (strcmp(cmd, "/logoutall", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(playerid != i)
					    {
					        if(PlayerInfo[i][pAdmin] < 5)
					        {
								OnPlayerDataSave(i);
      							Kick(i);
      						}
      					}
					}
				}
				BilgiMesajiGonder(playerid, "Bütün oyuncular sunucudan atýldý.");
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/money", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/money [ID] [Miktar]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerCash(playa, money);
						format(string, sizeof(string), "%s adlý yönetici paranýzý %d$ olarak ayarladý.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncunun parasýný %d$ olarak ayarladýnýz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncunun parasýný %d$ olarak ayarladý.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid], money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/agiveproducts", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/agiveproducts [ID] [Ürün sayýsý]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pProducts] += money;
						format(string, sizeof(string), "%s adlý yönetici size %d kadar ürün verdi.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncuya %d kadar ürün verdiniz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuya %d kadar ürün verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/asetproducts", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/asetproducts [ID] [Ürün sayýsý]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pProducts] = money;
						format(string, sizeof(string), "%s adlý yönetici ürün sayýnýzý %d yaptý.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncunun ürününü %d yaptýnýz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncunun ürününü %d yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/agivemats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/agivemats [ID] [Materyal sayýsý]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pMaterials] += money;
						format(string, sizeof(string), "%s adlý yönetici size %d kadar materyal verdi.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncuya %d kadar materyal verdiniz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuya %d kadar materyal verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/asetmats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/asetmats [ID] [Materyal sayýsý]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pMaterials] = money;
						format(string, sizeof(string), "%s adlý yönetici materyal sayýnýzý %d yaptý.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncunun materyalini %d yaptýnýz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncunun materyalini %d yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asetdrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/asetdrugs [ID] [Uyuþturucu sayýsý]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pDrugs] = money;
						format(string, sizeof(string), "%s adlý yönetici uyuþturucu sayýnýzý %d yaptý.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncunun uyuþturucusunu %d yaptýnýz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncunun uyuþturucusunu %d yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/agivedrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/agivedrugs [ID] [Uyuþturucu sayýsý]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pDrugs] += money;
						format(string, sizeof(string), "%s adlý yönetici size %d kadar uyuþturucu verdi.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncuya %d kadar uyuþturucu verdiniz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuya %d kadar uyuþturucu verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/givemoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pSQLid] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/givemoney [ID] [Miktar]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerCash(playa, money);
						format(string, sizeof(string), "%s adlý yönetici size %d$ verdi.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncuya %d$ verdiniz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuya %d$ verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else if (PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pSQLid] == 22)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/givemoney [ID] [Miktar]");
					return 1;
				}
				new playa;
				new money;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerCash(playa, money);
						format(string, sizeof(string), "%s adlý yönetici size %d$ verdi.",GetPlayerNameEx2(playerid, playa), money);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncuya %d$ verdiniz.",GetPlayerNameEx2(playa, playerid), money);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuya %d$ verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],money);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/weatherall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    KullanimMesajiGonder(playerid, "/weatherall [Ayarlanacak hava durumu sayýsý]");
				    return 1;
				}
				new weather;
				weather = strval(tmp);
				if(weather < 0||weather > 45)
				{
					HataMesajiGonder(playerid, "Hava durumu 0'dan küçük, 45'den büyük olamaz.");
					return 1;
				}
				SetWeather(weather);
				/*format(string, sizeof(string), "%s tarafýndan hava durumu deðiþtirildi.", GetPlayerNameEx(playerid));
				TopluMesajGonder(string);*/
				format(string, 256, "%s[%d] hava durumunu %d olarak deðiþtirdi.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid],weather);
				YoneticiMesajiGonder(string);
			}
			else
			{
      			YetersizYetki(playerid, cmdtext);
			}
			return 1;
		}
	}
 	if(strcmp(cmd, "/sethp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pTester] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/sethp [ID] [Can]");
					return 1;
				}
				new playa;
				new health;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				health = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
						format(string, sizeof(string), "%s adlý yönetici canýnýzý %d yaptý.",GetPlayerNameEx2(playerid, playa), health);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncunun canýný %d yaptýnýz.",GetPlayerNameEx2(playa, playerid), health);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncunun canýný %d yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],health);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setarmour", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pTester] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/setarmour [ID] [Çelik yelek]");
					return 1;
				}
				new playa;
				new health;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				health = strval(tmp);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(playa, health);
						format(string, sizeof(string), "%s adlý yönetici çelik yeleðinizi %d yaptý.",GetPlayerNameEx2(playerid, playa), health);
						BilgiMesajiGonder(playa, string);
						format(string, sizeof(string), "%s adlý oyuncunun çelik yeleðini %d yaptýnýz.",GetPlayerNameEx2(playa, playerid), health);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncunun çelik yeleðini %d yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],health);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/givegun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/givegun [SQL ID] [Silah ID] [Kurþun]");
					GenelMesajGonder(playerid, "1: Muþta - 2: Golf sopasý - 3: Jop - 4: Býçak - 5: Beyzbol sopasý");
					GenelMesajGonder(playerid, "6: Kürek - 7: Bilardo sopasý - 8: Katana - 9: Testere - 10: Mor yapay penis");
					GenelMesajGonder(playerid, "11: Küçük beyaz yapay penis - 12: Büyük beyaz yapay penis - 13: Gümüþ yapay penis");
					GenelMesajGonder(playerid, "14: Çicek - 15: Baston - 16: El bombasý - 17: Sis bombasý - 18: Molotof kokteyli");
					GenelMesajGonder(playerid, "22: 9mm pistol - 23: 9mm susturuculu pistol - 24: Desert eagle - 25: Pompalý");
					GenelMesajGonder(playerid, "26: Çift el pompalý - 27: Combat pompalý - 28: Micro SMG - 29: MP5 - 30: AK-47");
					GenelMesajGonder(playerid, "31: M4 - 32: Tec9 - 33: Köy tüfeði - 34: Keskin niþancý tüfeði - 35: Roketatar");
					GenelMesajGonder(playerid, "36: HS Roketatar - 37: Ateþ püskürtücü - 38: Minigun - 39: Uzaktan kumandalý bomba");
					GenelMesajGonder(playerid, "40: Uzaktan kumanda - 41: Spray - 42: Yangýn söndürücü - 43: Kamera");
					GenelMesajGonder(playerid, "44: Termal gözlükler - 45: Gece görüþ dürbünü - 46: Paraþüt");
					return 1;
				}
				new playa;
				new gun;
				new ammo;
				playa = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				gun = strval(tmp);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/givegun [SQL ID] [Silah ID] [Kurþun]");
					GenelMesajGonder(playerid, "1: Muþta - 2: Golf sopasý - 3:Jop - 4: Býçak - 5: Beyzbol sopasý");
					GenelMesajGonder(playerid, "6: Kürek - 7: Bilardo sopasý - 8: Katana - 9: Testere - 10: Mor yapay penis");
					GenelMesajGonder(playerid, "11: Küçük beyaz yapay penis - 12: Büyük beyaz yapay penis - 13: Gümüþ yapay penis");
					GenelMesajGonder(playerid, "14: Çicek - 15: Baston - 16: El bombasý - 17: Sis bombasý - 18: Molotof kokteyli");
					GenelMesajGonder(playerid, "22: 9mm pistol - 23: 9mm susturuculu pistol - 24: Desert eagle - 25: Pompalý");
					GenelMesajGonder(playerid, "26: Çift el pompalý - 27: Combat pompalý - 28: Micro SMG - 29: MP5 - 30: AK-47");
					GenelMesajGonder(playerid, "31: M4 - 32: Tec9 - 33: Köy tüfeði - 34: Keskin niþancý tüfeði - 35: Roketatar");
					GenelMesajGonder(playerid, "36: HS Roketatar - 37: Ateþ püskürtücü - 38: Minigun - 39: Uzaktan kumandalý bomba");
					GenelMesajGonder(playerid, "40: Uzaktan kumanda - 41: Spray - 42: Yangýn söndürücü - 43: Kamera");
					GenelMesajGonder(playerid, "44: Termal gözlükler - 45: Gece görüþ dürbünü - 46: Paraþüt");
					return 1;
				}
				if(PlayerInfo[playerid][pSQLid]== 1 || PlayerInfo[playerid][pSQLid]== 22)
				{
					if(gun > 1 && gun < 47)
					{
						tmp = strtok(cmdtext, idx);
						ammo = strval(tmp);
						new silah=1;
						if(ammo > 0)
						{
						    if(IsPlayerConnected(playa))
						    {
						        if(playa != INVALID_PLAYER_ID)
						        {
						            if(gun==22)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `9mm` = '1',`9mmm` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
	         							new gelenveri;
										format(query, sizeof(query), "SELECT `9mm` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `9mm` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==23)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `spistol` = '1',`spistolm` = '%d' WHERE `ad` = '%s'", ammo,GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `spistol` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `spistol` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==25)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `shoutgun` = '1',`shoutgunm` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `shoutgun` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `shoutgun` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==28)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `uzi` = '1',`uzim` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `uzi` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `uzi` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==30)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `ak47` = '1',`ak47m` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `ak47` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `ak47` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==31)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `m4` = '1',`m4m` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `m4` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `m4` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==32)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `tec9` = '1',`tec9m` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `tec9` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `tec9` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==34)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `sniper` = '1',`sniperm` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `sniper` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `sniper` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==4)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `bicak` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `bicak` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `bicak` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==8)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `katana` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `katana` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `katana` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==15)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `baston` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `baston` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `baston` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==1)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `musta` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `musta` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `musta` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==2)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `golf` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `golf` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `golf` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==6)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `kurek` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `kurek` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `kurek` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==46)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `parasut` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `parasut` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `parasut` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==14)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `cicek` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `cicek` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `cicek` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==5)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `sopa` = '1' WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `sopa` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `sopa` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==18)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `molotof` = '1',`molotofm` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==26)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `sawnoff` = '1',`sawnoffm` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `sawnoff` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `sawnoff` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==29)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `mp5` = '1',`mp5m` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `mp5` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `mp5` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun=33)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `tufek` = '1',`tufekm` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `tufek` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `tufek` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==35)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `roket` = '1',`roketm` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `roket` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `roket` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==42)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `yangin` = '1',`yangin` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `yangin` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `yangin` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==43)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `kamera` = '1',`kamream` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `kamera` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `kamera` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
									else if(gun==41)
						            {
						                new query[128];
										format(query, sizeof(query), "UPDATE `osilah` SET `spray` = '1',`spraym` = '%d' WHERE `ad` = '%s'", ammo, GetPlayerNameSave(playa));
										mysql_query(query);
										new gelenveri;
										format(query, sizeof(query), "SELECT `spray` FROM `ssayi` WHERE `ad` = '%s'", GetPlayerNameSave(playa));
										mysql_query(query);
										mysql_store_result();
										gelenveri = mysql_fetch_int();
										mysql_free_result();
										format(query, sizeof(query), "UPDATE `ssayi` SET `spray` = '%d' WHERE `ad` = '%s'", gelenveri+1, GetPlayerNameSave(playa));
										mysql_query(query);
										format(string, sizeof(string), "%s adlý yönetici size %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx2(playerid, playa), gun, ammo);
										BilgiMesajiGonder(playa, string);
										format(string, sizeof(string), "%s adlý oyuncuya %d ID'li silahý %d mermi ile verdiniz.",GetPlayerNameEx2(playa, playerid), gun, ammo);
										BilgiMesajiGonder(playerid, string);
										format(string, 128, "%s, %s [%d] adlý oyuncuya %d ID'li silahý %d mermi ile verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(playa),PlayerInfo[playa][pSQLid],gun,ammo);
										YoneticiMesajiGonder(string);
									}
								}
							}
					}
					}
					else
					{
					    HataMesajiGonder(playerid, "Mermi 0'dan küçük olamaz.");
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Silah ID'si 1'den küçük, 46'dan büyük olamaz.");
				}
			}
			else
			{
     			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/yoneticiyap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/yoneticiyap [ID] [Seviye]");
					return 1;
				}
				new para1;
				new level;
				para1 = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						PlayerInfo[para1][pAdmin] = level;
						format(string, sizeof(string), "%s adlý yönetici sizi %d seviye yönetici yaptý.", GetPlayerNameEx2(playerid, para1),level);
						BilgiMesajiGonder(para1, string);
						format(string, sizeof(string), "%s adlý oyuncuyu %d seviye yönetici yaptýnýz.", GetPlayerNameEx2(para1, playerid),level);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuyu %d seviye yönetici yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(para1),PlayerInfo[para1][pSQLid],level);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/testeryap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/testeryap [ID] [Seviye]");
					return 1;
				}
				new para1;
				new level;
				para1 = SQLdenBul(strval(tmp));
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						PlayerInfo[para1][pTester] = level;
						format(string, sizeof(string), "%s adlý yönetici sizi %d seviye tester yaptý.", GetPlayerNameEx2(playerid, para1),level);
						BilgiMesajiGonder(para1, string);
						format(string, sizeof(string), "%s adlý oyuncuyu %d seviye tester yaptýnýz.", GetPlayerNameEx2(para1, playerid),level);
						BilgiMesajiGonder(playerid, string);
						format(string, 128, "%s, %s[%d] adlý oyuncuyu %d seviye tester yaptý.",GetPlayerNameEx(playerid),GetPlayerNameEx(para1),PlayerInfo[para1][pSQLid],level);
						YoneticiMesajiGonder(string);
					}
				}
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/tod", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					KullanimMesajiGonder(playerid, "/tod [Saat]");
					return 1;
				}
	            new hour;
				hour = strval(tmp);
				if(hour < 0 || hour > 24)
				{
				    HataMesajiGonder(playerid, "Saat 0'den küçük, 24'den büyük olamaz.");
				    return 1;
				}
	            SetWorldTime(hour);
				/*format(string, sizeof(string), "%s tarafýndan saat deðiþtirildi.", GetPlayerNameEx(playerid));
				TopluMesajGonder(string);*/
				format(string, 256, "%s[%d] saati %d olarak deðiþtirdi.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid],hour);
				YoneticiMesajiGonder(string);
			}
			else
			{
    			YetersizYetki(playerid, cmdtext);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/silahlar", true) == 0)
	{
	    BilgiMesajiGonder(playerid, "[47RolePlay - Silah komutlarý]");
	    GenelMesajGonder(playerid, "/9mm - /spistol - /shoutgun - /tec9 - /uzi - /m4");
	    GenelMesajGonder(playerid, "/ak47 - /sniper - /molotof - /sawnoff - /mp5");
	    GenelMesajGonder(playerid, "/tufek - /roket - /yangin - /kamera - /spray");
	    GenelMesajGonder(playerid, "/sopa - /katana - /bicak - /baston - /musta");
	    GenelMesajGonder(playerid, "/golf - /kurek - /parasut - /cicek");
	}
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
	    if(PlayerInfo[playerid][pTester] >= 1)
	    {
	        BilgiMesajiGonder(playerid, "{CC0000}[Tester Komutlarý]");
		    GenelMesajGonder(playerid, "/oyuncuizle - /izlekapat - /twork - /freeze - /unfreeze -");
			GenelMesajGonder(playerid, "/goto - /gotols - /gotolv - /gotosf - /gethere - /gotokb - /getcar - /gotocar");
	    }
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		    BilgiMesajiGonder(playerid, "{CC0000}[Helper Komutlarý]");
		    GenelMesajGonder(playerid, "/oyuncuizle - /aracizle - /izlekapat - /awork - /aracbenzin - /ajail - /silahlarinisil");
			GenelMesajGonder(playerid, "/check - /up - /freeze - /unfreeze - /admin - /akapat - /sqlid - /hapistencikar");
			GenelMesajGonder(playerid, "/goto - /gotols - /gotolv - /gotosf - /gethere - /gotokb - /getcar - /gotocar - /uyariver");
		}
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
		    BilgiMesajiGonder(playerid, "{CC0000}[Game Admins Komutlarý]");
			GenelMesajGonder(playerid, "/setint - /setww - /setskin - /spawnet - /masked - /aractamir");
			GenelMesajGonder(playerid, "/ck - /kick - /silahkontrol - /mute - /raporkontrol -  /aooc - /ban");
			GenelMesajGonder(playerid, "/gametext - /sethp - /setarmour - /givegun - /banaccount - /ver");
		}
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
		    BilgiMesajiGonder(playerid, "{CC0000}[Game Admins Komutlarý]");
		    GenelMesajGonder(playerid, "/cc - /aserverinfo - /respawnallcars - /respawnthiscar - /modifiye - /modifiyebitir - /tamir - /tamirbitir");
		    GenelMesajGonder(playerid, "/weatherall - /tod");
		}
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
		    BilgiMesajiGonder(playerid, "{CC0000}[Game Admins Komutlarý]");
			GenelMesajGonder(playerid, "/isimdegistir - /setstat - /abuildingcmds - /afactioncmds - /ahousecmds - /abusinesscmds - /acarcmds - /arac");
			GenelMesajGonder(playerid, "/apositioncmds - /ajobcmds - /acivilianspawn - /afactionkick - /oocstatus /logoutall - /money - /ackapat");
			GenelMesajGonder(playerid, "/agiveproducts - /asetproducts - /agivemats - /asetmats - /agivedrugs - /asetdrugs - /givemoney");
		}
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		    BilgiMesajiGonder(playerid, "{CC0000}[Lead Admins Komutlarý]");
            GenelMesajGonder(playerid, "/sunucuguncelle - /yoneticiyap - /lideryap - /kayitet - /givemoney - /money");
		}
		return 1;
	}
	if(strcmp(cmd, "/gir", true) == 0)
	{
		for(new i = 0; i < sizeof(Building); i++)
		{
			if (PlayerToPoint(1.0, playerid,Building[i][EnterX], Building[i][EnterY], Building[i][EnterZ]))
			{
			    if(GetPlayerVirtualWorld(playerid) == Building[i][EnterWorld])
			    {
					if(Building[i][Locked] == 0)
					{
					    if(GetPlayerCash(playerid) >= Building[i][EntranceFee])
					    {
							SetPlayerInterior(playerid,Building[i][ExitInterior]);
							SetPlayerVirtualWorld(playerid,i);
							SetPlayerPos(playerid,Building[i][ExitX],Building[i][ExitY],Building[i][ExitZ]);
							SetPlayerFacingAngle(playerid,Building[i][ExitAngle]);
							GivePlayerCash(playerid,-Building[i][EntranceFee]);
							TogglePlayerControllable(playerid, 0);
							SetTimerEx("AdamDuzelt", 1000, false,"i",playerid);
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Yeterli paraniz bulunmamaktadir.", 5000, 1);
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
		for(new i = 0; i < sizeof(Houses); i++)
		{
			if (PlayerToPoint(1.0, playerid,Houses[i][EnterX], Houses[i][EnterY], Houses[i][EnterZ]))
			{
				if(GetPlayerVirtualWorld(playerid) == Houses[i][EnterWorld])
			    {
					if(PlayerInfo[playerid][pHouseKey] == i || Houses[i][Locked] == 0)
					{
						SetPlayerInterior(playerid,Houses[i][ExitInterior]);
						SetPlayerPos(playerid,Houses[i][ExitX],Houses[i][ExitY],Houses[i][ExitZ]);
						SetPlayerVirtualWorld(playerid,i);
						SetPlayerFacingAngle(playerid,Houses[i][ExitAngle]);
					}
 					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
		for(new i = 0; i < sizeof(Businesses); i++)
		{
			if (PlayerToPoint(1.0, playerid,Businesses[i][EnterX], Businesses[i][EnterY], Businesses[i][EnterZ]))
			{
	 			if(GetPlayerVirtualWorld(playerid) == Businesses[i][EnterWorld])
	    		{
					if(PlayerInfo[playerid][pBizKey] == i || GetPlayerCash(playerid) >= Businesses[i][EntranceCost])
					{
						if(PlayerInfo[playerid][pBizKey] != i)
						{
							if(Businesses[i][Locked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
								return 1;
							}
							if(Businesses[i][Products] == 0)
							{
								GameTextForPlayer(playerid, "~r~Isyerinin yeterli urunu yok.", 5000, 1);
								return 1;
							}
							if(KiyafetAliyor[playerid] == 1 || Sapka[playerid] > -1 || Rag[playerid] > -1 || Gozluk[playerid] > -1)
							{
								HataMesajiGonder(playerid, "Þuan buradan çýkamazsýnýz.");
								return 1;
							}
							GivePlayerCash(playerid,-Businesses[i][EntranceCost]);
							Businesses[i][Till] += Businesses[i][EntranceCost];
							Businesses[i][Products]--;
							SetPlayerInterior(playerid,Businesses[i][ExitInterior]);
							SetPlayerPos(playerid,Businesses[i][ExitX],Businesses[i][ExitY],Businesses[i][ExitZ]);
							SetPlayerVirtualWorld(playerid,i);
							SetPlayerFacingAngle(playerid,Businesses[i][ExitAngle]);
							IsyeriKaydet(i);
						}
						else
						{
							SetPlayerInterior(playerid,Businesses[i][ExitInterior]);
							SetPlayerPos(playerid,Businesses[i][ExitX],Businesses[i][ExitY],Businesses[i][ExitZ]);
							SetPlayerVirtualWorld(playerid,i);
							SetPlayerFacingAngle(playerid,Businesses[i][ExitAngle]);
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
					}
				}
			}
		}
		if(PlayerToPoint(0.60, playerid, 1583.2603,-1637.0574,13.3905))
		{
		    SetPlayerPos(playerid,1583.3107,-1638.6350,13.3197);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/cik", true) == 0)
	{
		if(PlayerToPoint(3, playerid, 2284.4546,-1134.9675,1053.8984))
		{
		    SetPlayerPos(playerid, DynamicOtel[oAsansorX], DynamicOtel[oAsansorY], DynamicOtel[oAsansorZ]);
		    SetPlayerInterior(playerid, DynamicOtel[oAsansorInt]);
			SetPlayerVirtualWorld(playerid, DynamicOtel[oAsansorVW]);
			Otelde[playerid] = 0;
			return 1;
		}
		for(new i = 0; i < sizeof(Building); i++)
		{
			if (PlayerToPoint(1, playerid,Building[i][ExitX], Building[i][ExitY], Building[i][ExitZ]))
			{
			    if(GetPlayerVirtualWorld(playerid) == i)
			    {
					if(Building[i][Locked] == 0)
					{
						if(KiyafetAliyor[playerid] == 1 || Sapka[playerid] > -1 || Rag[playerid] > -1 || Gozluk[playerid] > -1)
						{
							HataMesajiGonder(playerid, "Þuan buradan çýkamazsýnýz.");
							return 1;
						}
                        if(BenchPresses[playerid] != 0)
                        {
							HataMesajiGonder(playerid, "Þuan buradan çýkamazsýnýz.");
							return 1;
						}
						SetPlayerInterior(playerid,Building[i][EnterInterior]);
						SetPlayerVirtualWorld(playerid,Building[i][EnterWorld]);
						SetPlayerPos(playerid,Building[i][EnterX],Building[i][EnterY],Building[i][EnterZ]);
						SetPlayerFacingAngle(playerid,Building[i][EnterAngle]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
 		for(new i = 0; i < sizeof(Houses); i++)
		{
			if (PlayerToPoint(3.0, playerid,Houses[i][ExitX], Houses[i][ExitY], Houses[i][ExitZ]))
			{
   				if(GetPlayerVirtualWorld(playerid) == i)
			    {
			        if(Houses[i][Locked] == 0)
					{
						SetPlayerInterior(playerid,Houses[i][EnterInterior]);
						SetPlayerPos(playerid,Houses[i][EnterX],Houses[i][EnterY],Houses[i][EnterZ]);
						SetPlayerVirtualWorld(playerid,Houses[i][EnterWorld]);
						SetPlayerFacingAngle(playerid,Houses[i][EnterAngle]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
  		for(new i = 0; i < sizeof(Businesses); i++)
		{
			if (PlayerToPoint(3, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
			{
			    if(GetPlayerVirtualWorld(playerid) == i)
			    {
					if(Businesses[i][Locked] == 0)
					{
						SetPlayerInterior(playerid,Businesses[i][EnterInterior]);
						SetPlayerVirtualWorld(playerid,Businesses[i][EnterWorld]);
						SetPlayerPos(playerid,Businesses[i][EnterX],Businesses[i][EnterY],Businesses[i][EnterZ]);
						SetPlayerFacingAngle(playerid,Businesses[i][EnterAngle]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
		if(PlayerToPoint(0.60, playerid, 1583.3107,-1638.6350,13.3197))
		{
		    SetPlayerPos(playerid,1583.2603,-1637.0574,13.3905);
		}
		return 1;
 	}
	if(strcmp(cmd, "/animasyonlar", true) == 0 || strcmp(cmd, "/animler", true) == 0)
	{
	 	BilgiMesajiGonder(playerid, "[Animasyon listesi]");
	    GenelMesajGonder(playerid, "/kusmak - /elsalla - /isyan - /nah - /sohbet - /spor - /yaslan - /isemek - /ellerhavaya - /kelepce");
	    GenelMesajGonder(playerid, "/ticaret1 - /ticaret2 - /kriz - /maske - /siktir - /yoltarif - /bomba - /sarhos - /yorulmak - /bagirmak ");
	    GenelMesajGonder(playerid, "/dusmek - /dusmek2 - /sprey - /hediye - /dikil - /saklan - /kazandim");
	    GenelMesajGonder(playerid, "/pandik1 - /pandik2 - /yarali1 - /yarali2 - /artistlik - /kolkaldir - /yerdetokat - /yuru - /kahkaha");
	    GenelMesajGonder(playerid, "/kafaat - /tokat - /dizvur - /dirsekat - /yerdeyumruk - /tekme1 - /tekme2 - /boks - /karete - /sopa");
	    GenelMesajGonder(playerid, "/firlat - /yat - /nakavt - /sigaraanim - /basket - /selam - /dans - /opucuk1 - /opucuk2 - /masturbasyon");
	    GenelMesajGonder(playerid, "/kollar - /otur - /caprazkollar - /nisanal - /sex - /striptiz - /rap - /dj - /kafasalla - /hayatkacis - /gel");
		return 1;
	}
	if(Yerde[playerid] == 0)
	{
	// Fýrlatma Animleri
	if(strcmp(cmdtext, "/firlat", true) == 0){ KullanimMesajiGonder(playerid, "/firlat [1-2]"); return 1; }
	if(strcmp(cmdtext, "/firlat1", true) == 0) { OnePlayAnim(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/firlat2", true) == 0) { OnePlayAnim(playerid,"GRENADE","WEAPON_throw",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }

	// Yatma Animleri
	if(strcmp(cmdtext, "/yat", true) == 0) { KullanimMesajiGonder(playerid, "/yat [1-3]"); return 1; }
 	if(strcmp(cmdtext, "/yat1", true) == 0) { LoopingAnim(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/yat2", true) == 0) { LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/yat3", true) == 0) { LoopingAnim(playerid,"BEACH","Lay_Bac_Loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }

	// Nakavt
 	if(strcmp(cmdtext, "/nakavt", true) == 0) { KullanimMesajiGonder(playerid, "/nakavt [1-3]"); return 1; }
	if(strcmp(cmdtext, "/nakavt1", true) == 0) { LoopingAnim(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/nakavt2", true) == 0) { LoopingAnim(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/nakavt3", true) == 0) { LoopingAnim(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }

	// Sigara Animleri
 	if(strcmp(cmdtext, "/sigaraanim", true) == 0) { KullanimMesajiGonder(playerid, "/sigaraanim [1-4]"); return 1; }
 	if(strcmp(cmdtext, "/sigaraanim1", true) == 0) { LoopingAnim(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/sigaraanim2", true) == 0) { LoopingAnim(playerid,"SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/sigaraanim3", true) == 0) { LoopingAnim(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/sigaraanim4", true) == 0) { OnePlayAnim(playerid,"SMOKING","M_smk_out", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }

	// Basketbol Animleri
 	if(strcmp(cmdtext, "/basket", true) == 0) { KullanimMesajiGonder(playerid, "/basket [1-6]"); return 1; }
 	if(strcmp(cmdtext, "/basket1", true) == 0) { LoopingAnim(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/basket2", true) == 0) { OnePlayAnim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/basket3", true) == 0) { OnePlayAnim(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/basket4", true) == 0) { LoopingAnim(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/basket5", true) == 0) { LoopingAnim(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/basket6", true) == 0) { LoopingAnim(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }

	// Selamlaþma Animleri
	if(strcmp(cmdtext, "/selam", true) == 0) { KullanimMesajiGonder(playerid, "/selam [1-3]"); return 1; }
	if(strcmp(cmdtext, "/selamlas", true) == 0) { KullanimMesajiGonder(playerid, "/selamlas[1-3]"); return 1; }
	if(strcmp(cmdtext, "/selam1", true) == 0) { OnePlayAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/selam2", true) == 0) { OnePlayAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/selam3", true) == 0) { OnePlayAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }

	// Dans Animleri
	if(strcmp(cmdtext, "/dans", true) == 0) { KullanimMesajiGonder(playerid, "/dans [1-4]"); return 1; }
	if(strcmp(cmdtext, "/dans1", true) == 0) { SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/dans2", true) == 0) { SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/dans3", true) == 0) { SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/dans4", true) == 0) { SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4); AnimYapiyor[playerid] = 1; return 1; }

	// Rap Animleri
	if(strcmp(cmdtext, "/rap", true) == 0) { KullanimMesajiGonder(playerid, "/rap [1-4]"); return 1; }
	if(strcmp(cmdtext, "/rap1", true) == 0) { LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/rap2", true) == 0) { LoopingAnim(playerid,"RAPPING","RAP_B_Loop",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/rap3", true) == 0) { LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/rap4", true) == 0) { LoopingAnim(playerid,"CLOTHES","CLO_Buy", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }

	// Mastürbasyon Komutlarý
	if(strcmp(cmdtext, "/masturbasyon", true) == 0) { KullanimMesajiGonder(playerid, "/masturbasyon [1-3]"); return 1; }
	if(strcmp(cmdtext, "/masturbasyon1", true) == 0) { LoopingAnim(playerid,"PAULNMAC","wank_in",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/masturbasyon2", true) == 0) { LoopingAnim(playerid,"PAULNMAC","wank_loop",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/masturbasyon3", true) == 0) { LoopingAnim(playerid,"PAULNMAC","wank_out",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }

	// Niþan Alma
	if (strcmp(cmdtext, "/nisanal", true) == 0) { KullanimMesajiGonder(playerid, "/nisanal [1-3]"); return 1; }
	if (strcmp(cmdtext, "/nisanal1", true) == 0) { LoopingAnim(playerid,"PED","gang_gunstand",4.0,1,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
 	if (strcmp(cmdtext, "/nisanal2",true) == 0) { LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/nisanal3", true) == 0) { LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }

	// Çapraz Kollar
	if (strcmp(cmdtext, "/caprazkollar", true) == 0) { KullanimMesajiGonder(playerid, "/caprazkollar [1-3]"); return 1; }
	if (strcmp(cmdtext, "/caprazkollar1", true) == 0) { LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/caprazkollar2", true) == 0) { LoopingAnim(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1); AnimYapiyor[playerid] = 1; return 1; }
 	if (strcmp(cmdtext, "/caprazkollar3", true) == 0) { LoopingAnim(playerid, "DEALER", "DEALER_IDLE_01", 4.0, 0, 1, 1, 1, -1); AnimYapiyor[playerid] = 1; return 1; }

	// Oturma Animleri
	if(strcmp(cmdtext, "/otur", true) == 0) { KullanimMesajiGonder(playerid, "/otur [1-8]"); return 1; }
	if(strcmp(cmdtext, "/otur1", true) == 0) { LoopingAnim(playerid,"PED","SEAT_idle", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/otur2", true) == 0) { LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/otur3", true) == 0) { ApplyAnimation(playerid,"PED", "SEAT_idle", 2.000001, 0, 0, 0, 1, 1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/otur4", true) == 0) { ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,0,0,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/otur5", true) == 0) { LoopingAnim(playerid,"BEACH", "ParkSit_W_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/otur6", true) == 0) { ApplyAnimation(playerid,"INT_OFFICE", "OFF_Sit_Bored_Loop", 1.800001, 0, 0, 0, 1, 600); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/otur7", true) == 0) { ApplyAnimation(playerid,"JST_BUISNESS", "girl_02", 1.800001, 0, 0, 0, 1, 600); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/otur8", true) == 0) { ApplyAnimation(playerid,"MISC","SEAT_LR",4.1,0,0,0,1,1); return 1; }

	// Striptiz Animleri
	if(strcmp(cmdtext, "/striptiz", true) == 0) { KullanimMesajiGonder(playerid, "/striptiz [1-7]"); return 1; }
	if(strcmp(cmdtext, "/striptiz1", true) == 0) { LoopingAnim(playerid,"STRIP","strip_A",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/striptiz2", true) == 0) { LoopingAnim(playerid,"STRIP","strip_B",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/striptiz3", true) == 0) { LoopingAnim(playerid,"STRIP","strip_C",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/striptiz4", true) == 0) { LoopingAnim(playerid,"STRIP","strip_D",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/striptiz5", true) == 0) { LoopingAnim(playerid,"STRIP","strip_E",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/striptiz6", true) == 0) { LoopingAnim(playerid,"STRIP","strip_F",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/striptiz7", true) == 0) { LoopingAnim(playerid,"STRIP","strip_G",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }

	// Sex Animleri
	if(strcmp(cmdtext, "/sex", true) == 0) { KullanimMesajiGonder(playerid, "/sex [1-8]"); return 1; }
	if(strcmp(cmdtext, "/sex1", true) == 0) { LoopingAnim(playerid,"SNM","SPANKING_IDLEW",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/sex2", true) == 0) { LoopingAnim(playerid,"SNM","SPANKING_IDLEP",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/sex3", true) == 0) { LoopingAnim(playerid,"SNM","SPANKINGW",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/sex4", true) == 0) { LoopingAnim(playerid,"SNM","SPANKINGP",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/sex5", true) == 0) { LoopingAnim(playerid,"SNM","SPANKEDW",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/sex6", true) == 0) { LoopingAnim(playerid,"SNM","SPANKEDP",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
 	if(strcmp(cmdtext, "/sex7", true) == 0) { LoopingAnim(playerid,"SNM","SPANKING_ENDW",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/sex8", true) == 0) { LoopingAnim(playerid,"SNM","SPANKING_ENDP",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }

	// Kollar
	if(strcmp(cmdtext, "/kollar", true) == 0) { KullanimMesajiGonder(playerid, "/kollar [1-5]"); return 1; }
	if(strcmp(cmdtext, "/kollar1", true) == 0){ ApplyAnimation(playerid,"GHANDS","gsign1",4.0,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/kollar2", true) == 0){ ApplyAnimation(playerid,"GHANDS","gsign2",4.0,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/kollar3", true) == 0){ ApplyAnimation(playerid,"GHANDS","gsign3",4.0,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/kollar4", true) == 0){ ApplyAnimation(playerid,"GHANDS","gsign4",4.0,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if(strcmp(cmdtext, "/kollar5", true) == 0){ ApplyAnimation(playerid,"GHANDS","gsign5",4.0,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }

	// Diðer Animler
	if (strcmp(cmdtext, "/doktor", true) == 0) { ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/tekme1", true) == 0) { ApplyAnimation(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/tekme2", true) == 0) { ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/dj", true) == 0) { LoopingAnim(playerid,"GYMNASIUM","gym_tread_celebrate", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/ellerhavaya", true) == 0){ SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/saklan", true) == 0){ LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yaslan", true) == 0){ LoopingAnim(playerid,"GANGS","leanIDLE", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/gel", true) == 0){ ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yoltarif", true) == 0){ ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/dikil", true) == 0){ LoopingAnim(playerid,"WUZI","Wuzi_stand_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yarali2", true) == 0){ LoopingAnim(playerid,"SWAT","gnstwall_injurd", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kolkaldir", true) == 0){ LoopingAnim(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yerdetokat", true) == 0){ ApplyAnimation(playerid,"MISC","bitchslap",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/dusmek", true) == 0){ LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/dusmek2", true) == 0){ LoopingAnim(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kafaat", true) == 0){ OnePlayAnim(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/sprey", true) == 0){ OnePlayAnim(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/sopa", true) == 0){ LoopingAnim(playerid,"BASEBALL","Bat_IDLE",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/hayatkacis", true) == 0){ LoopingAnim(playerid,"PED","EV_dive",4.0,0,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yorulmak", true) == 0){ LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/tokat", true) == 0){ OnePlayAnim(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/boks", true) == 0){ LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/isyan", true) == 0){ LoopingAnim(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/nah", true) == 0){ OnePlayAnim(playerid,"RIOT","RIOT_FUKU",2.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/bagirmak", true) == 0){ OnePlayAnim(playerid,"RIOT","RIOT_shout",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kelepce", true) == 0){ OnePlayAnim(playerid,"SWORD","sword_block",50.0,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/dizvur", true) == 0){ OnePlayAnim(playerid,"FIGHT_D","FightD_2",4.0,0,1,1,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/dirsekat", true) == 0){ OnePlayAnim(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yerdeyumruk", true) == 0){ OnePlayAnim(playerid,"FIGHT_B","FightB_G",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/karete", true) == 0){ LoopingAnim(playerid,"FIGHT_D","FightD_IDLE",4.0,1,1,1,1,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/hediye", true) == 0){ ApplyAnimation(playerid,"KISSING","gift_give",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yarali1", true) == 0){ LoopingAnim(playerid,"SWEET","Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/pandik2", true) == 0){ ApplyAnimation(playerid,"SWEET","ho_ass_slapped",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/pandik1", true) == 0){ ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
 	if (strcmp(cmdtext, "/yuru", true) == 0){ ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/sarhos", true) == 0){ LoopingAnim(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/yuru2", true) == 0){ LoopingAnim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/artistlik", true) == 0){ OnePlayAnim(playerid,"benchpress","gym_bp_celebrate", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kazandim", true) == 0){ OnePlayAnim(playerid,"CASINO","Roulette_win", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/ticaret2", true) == 0){ OnePlayAnim(playerid,"DEALER","DRUGS_BUY", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kafasalla", true) == 0){ LoopingAnim(playerid,"FOOD","SHP_Thank", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "invite1", true) == 0){ ApplyAnimation(playerid,"GANGS","Invite_Yes",4.1,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/invite2", true) == 0){ ApplyAnimation(playerid,"GANGS","Invite_No",4.1,0,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/sit", true) == 0){ LoopingAnim(playerid,"INT_OFFICE","OFF_Sit_Type_Loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/masturbasyon2", true) == 0){ LoopingAnim(playerid,"MISC","Scratchballs_01", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/bomba", true) == 0){ ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kahkaha", true) == 0){ ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/maske", true) == 0){ ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kusmak", true) == 0){ ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/eat", true) == 0){ ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/elsalla", true) == 0){ LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/ticaret1", true) == 0){ OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/kriz",true) == 0){ LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/sigara2", true) == 0){ LoopingAnim(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/sohbet", true) == 0){ LoopingAnim(playerid,"PED","IDLE_CHAT",4.1,1,1,1,1,1); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/siktir", true) == 0){ ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/spor", true) == 0){ LoopingAnim(playerid,"PARK","Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/chairsit", true) == 0){ LoopingAnim(playerid,"BAR","dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	if (strcmp(cmdtext, "/opucuk1", true) == 0){ ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.0,0,0,0,0,0); AnimYapiyor[playerid] = 1; return 1; }
    if (strcmp(cmdtext, "/opucuk2", true) == 0){ ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02", 4.0, 0, 0, 0, 0, 0); AnimYapiyor[playerid] = 1; return 1; }
	}
	if(strcmp(cmd, "/saat", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new mtext[20];
			new year, month,day;
			getdate(year, month, day);
			if(month == 1) { mtext = "Ocak"; }
			else if(month == 2) { mtext = "Subat"; }
			else if(month == 3) { mtext = "Mart"; }
			else if(month == 4) { mtext = "Nisan"; }
			else if(month == 5) { mtext = "Mayis"; }
			else if(month == 6) { mtext = "Haziran"; }
			else if(month == 7) { mtext = "Temmuz"; }
			else if(month == 8) { mtext = "Agustos"; }
			else if(month == 9) { mtext = "Eylul"; }
			else if(month == 10) { mtext = "Ekim"; }
			else if(month == 11) { mtext = "Kasým"; }
			else if(month == 12) { mtext = "Aralýk"; }
		    new hour,minuite,second;
			gettime(hour,minuite,second);
			FixHour(hour);
			hour = shifthour;
			format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d:%d~g~|", day, mtext, hour, minuite,second);
			GameTextForPlayer(playerid, string, 5000, 1);
			PlayerActionMessage(playerid,15.0,"kolunu kaldýrýr ve saatine doðru bakar.");
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
			if(TamirEdiyor[playerid] == 1)
			{
				format(string, sizeof(string), "Tamir kalan süre: %d saniye.", TamirSuresi[TamirArac[playerid]]);
				BilgiMesajiGonder(playerid, string);
			}
			if(ModifiyeYapiyor[playerid] == 1)
			{
				format(string, sizeof(string), "Modifiye kalan süre: %d saniye.", ModifiyeZaman[playerid]);
				BilgiMesajiGonder(playerid, string);
			}
			if(BalikTutuyor[playerid] == 1)
			{
				format(string, sizeof(string), "Balýk tutma kalan süre: %d saniye.", BalikSure[playerid]);
				BilgiMesajiGonder(playerid, string);
			}
			if(PlayerInfo[playerid][pJailed] > 0)
			{
				format(string, sizeof(string), "Hapis kalan süre: %d saniye.", PlayerInfo[playerid][pJailTime]);
				BilgiMesajiGonder(playerid, string);
			}
			if(TirTurunda[playerid] == 1)
			{
				if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_TIRCILIK7)
				{
					format(string, sizeof(string), "Ürün yüklenme süre: %d saniye.", TasidigiYukZaman[playerid]);
					BilgiMesajiGonder(playerid, string);
				}
			}
			if(GemiTurunda[playerid] == 1)
			{
				if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_GEMICILIK14)
				{
					format(string, sizeof(string), "Materyal yüklenme süre: %d saniye.", TasidigiYukZaman[playerid]);
					BilgiMesajiGonder(playerid, string);
				}
			}
		}
		return 1;
	}
	
	}
 	else
	{
		HataMesajiGonder(playerid, "Sunucuya giriþ yapmanýz gerekiyor.");
		return 1;
	}
	format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
	return HataMesajiGonder(playerid, string);
}
forward KapiKapat(kapim, Float:kapiX, Float:kapiY, Float:kapiZ);
public KapiKapat(kapim, Float:kapiX, Float:kapiY, Float:kapiZ)
{
    MoveObject(kapim, kapiX, kapiY, kapiZ, 1.5);
	return 1;
}
public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		MySQLCheckConnection();
		new newaccountsqlid = MySQLCreateAccount(GetPlayerNameSave(playerid), password);
		if (newaccountsqlid != 0)
		{
			SetPVarInt(playerid, "SQLID", newaccountsqlid);
			strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 50);
			OnPlayerDataSave(playerid);
			return 1;
		}
		else
		{
			Kick(playerid);
			return 0;
		}
	}
	return 1;
}
public OnPlayerLogin(playerid,password[])
{
	GetFromAccountStr(GetPlayerNameSave(playerid), "sifre", PlayerInfo[playerid][pKey]);
	if(strcmp(PlayerInfo[playerid][pKey],password, true ) == 0 )
	{
		LoadAccountVariables(playerid);
		PlayerInfo[playerid][OyunDurum] = 0;
	}
	else
	{
		new yazi[128];
		HataSayisi[playerid] ++;
		if(HataSayisi[playerid] == 3)
		{
			HataMesajiGonder(playerid, "Ard arda 3 kere hatalý þifre girdiniz ve sunucudan atýldýnýz.");
			Kick(playerid);
			return 1;
		}
		format(yazi,128,"Þifrenizi hatalý girdiniz.Lütfen þifrenizi girin.");
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Sunucuya Giriþ",yazi,"Giriþ","Cýkýþ");
		return 1;
	}
	SetPlayerColor(playerid,COLOR_CIVILIAN);
	if(PlayerInfo[playerid][pBanned] == 1)
	{
		BilgiMesajiGonder(playerid, "Karakteriniz sunucudan yasaklanmýþtýr.");
		IpucuMesajiGonder(playerid, "Eðer hatalý olduðunu düþünüyorsanýz www.diana-rp.com adresini ziyaret edin.");
 		Kick(playerid);
	}
	if(PlayerInfo[playerid][pCK] == 2 || PlayerInfo[playerid][pCK] == 3)
	{
		 BilgiMesajiGonder(playerid, "Karakteriniz ölmüþtür, tekrar kayýt olabilirsiniz.");
		 IpucuMesajiGonder(playerid, "Eðer CK iþleminizin hatalý olduðunu düþünüyorsanýz www.diana-rp.com adresini ziyaret edin.");
		 Kick(playerid);
	}
	new string[256];
	gPlayerLogged[playerid] = 1;
	SetPlayerCash(playerid,PlayerInfo[playerid][pCash]);
	TextDrawHideForPlayer(playerid,SehriAlem1);
	TextDrawShowForPlayer(playerid,SehriAlem);
	if(PlayerInfo[playerid][IlkGiris] == 0)
	{
		new Dovme[32];
		new EvlendigiKisi[32];
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pCash] = 200;
		PlayerInfo[playerid][pBank] = 0;
		PlayerInfo[playerid][pKasSeviyesi] = 1;
		PlayerInfo[playerid][pKasDurumu] = 0;
		new vatno = 1000000 + random(9000000);
  		PlayerInfo[playerid][pVatno] = vatno;
		new bankno = 10000000 + random(90000000);
  		PlayerInfo[playerid][pBankNumber] = bankno;
		SetPlayerCash(playerid,PlayerInfo[playerid][pCash]);
		format(EvlendigiKisi, sizeof(EvlendigiKisi), "Bekar");
		strmid(PlayerInfo[playerid][pEvlendigiKisi], EvlendigiKisi, 0, strlen(EvlendigiKisi), 32);
		format(Dovme, sizeof(Dovme), "Yok");
		strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
		ShowPlayerDialog(playerid, 62, DIALOG_STYLE_LIST, "Cinsiyetinizi Seçin","Erkek\nBayan" , "Seç", "Kapat");
		PlayerInfo[playerid][pFaction] = 255;
		PlayerInfo[playerid][pSpawn] = 4;
		PlayerInfo[playerid][pHouseKey] = 255;
		PlayerInfo[playerid][pBizKey] = 255;
		PlayerInfo[playerid][pPhoneC] = 255;
		PlayerInfo[playerid][pDil] = 1;
		PlayerInfo[playerid][pIngilizce] = 5;
		PlayerInfo[playerid][pHP] = 100;
		PlayerInfo[playerid][IlkGiris] = 1;
	}
	SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin],CivilianSpawn[X],CivilianSpawn[Y],CivilianSpawn[Z],0,0,0,0,0,0,0);
	SpawnPlayer(playerid);
	format(string, 256, "%s[%d] karakterine giriþ yaptý.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
	YoneticiMesajiGonder(string);
	ClearScreen(playerid);
	new yazi[300];
	format(yazi,sizeof(yazi),"Sunucuya hoþ geldiniz, %s.",GetPlayerNameEx(playerid));
	GenelMesajGonder(playerid, yazi);
	//IpucuMesajiGonder(playerid,"Sunucu hakkýnda yardým almak için /yardim komutunu kullanabilirsiniz.");
	//IpucuMesajiGonder(playerid,"Yöneticilerden yardým istemek için /rapor komutunu kullanabilirsiniz.");
	SetPlayerInterior(playerid, 0);
	TogglePlayerControllable(playerid, true);
	SetTimerEx("OyuncuSilahlariniYukle",250,false,"i",playerid);
	PlayerInfo[playerid][OyunDurum] = 0;
	Silahelinde[playerid]=0;
		mmelinde[playerid]=0;
		radyocaliyor[playerid]=0;
		spistolelinde[playerid]=0;
		shoutgunelinde[playerid]=0;
		tec9elinde[playerid]=0;
		uzielinde[playerid]=0;
		m4elinde[playerid]=0;
		ak47elinde[playerid]=0;
		sniperelinde[playerid]=0;
		mustaelinde[playerid]=0;
		golfelinde[playerid]=0;
		kurekelinde[playerid]=0;
		molotofelinde[playerid]=0;
		sawnoffelinde[playerid]=0;
		mp5elinde[playerid]=0;
		tufekelinde[playerid]=0;
		roketelinde[playerid]=0;
		yanginelinde[playerid]=0;
		parasutelinde[playerid]=0;
		kameraelinde[playerid]=0;
		sprayelinde[playerid]=0;
		cicekelinde[playerid]=0;
		bastonelinde[playerid]=0;
		bicakelinde[playerid]=0;
		sopaelinde[playerid]=0;
	for(new i = 0; i < 47; i++)
	{
		OyuncuSilahlari[playerid][i] = false;
	}
	return 1;
}
public OnPlayerDataSave(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			MySQLCheckConnection();
			new query[MAX_STRING];
			format(query, MAX_STRING, "UPDATE Oyuncular SET ");
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "sifre", PlayerInfo[playerid][pKey]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Seviye", PlayerInfo[playerid][pLevel]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Admin", PlayerInfo[playerid][pAdmin]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "IlkGiris", PlayerInfo[playerid][IlkGiris]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "OyunDurum", PlayerInfo[playerid][OyunDurum]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Cinsiyet", PlayerInfo[playerid][pSex]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Yas", PlayerInfo[playerid][pAge]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "HP", PlayerInfo[playerid][pHP]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "Armour", PlayerInfo[playerid][pArmour]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "SandvicSayi", PlayerInfo[playerid][pYiyecekSayisi]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "IcecekSayi", PlayerInfo[playerid][pIcecekSayisi]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Bez", PlayerInfo[playerid][pBez]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Olta", PlayerInfo[playerid][pOlta]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Sigara", PlayerInfo[playerid][pSigara]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Maske", PlayerInfo[playerid][pMask]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Yiyecek", PlayerInfo[playerid][pYiyecek]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Icecek", PlayerInfo[playerid][pIcecek]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Tuvalet", PlayerInfo[playerid][pTuvalet]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Gelisim", PlayerInfo[playerid][pExp]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Para", PlayerInfo[playerid][pCash]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Para2", PlayerInfo[playerid][pBank]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "BankaNumarasi", PlayerInfo[playerid][pBankNumber]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Kiyafet", PlayerInfo[playerid][pSkin]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Kiyafet1", PlayerInfo[playerid][pKiyafet1]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Kiyafet2", PlayerInfo[playerid][pKiyafet2]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Kiyafet3", PlayerInfo[playerid][pKiyafet3]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "DogumYeri", PlayerInfo[playerid][pDogumYeri]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "TenRengi", PlayerInfo[playerid][pTenRengi]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Spawn", PlayerInfo[playerid][pSpawn]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "MedeniHal", PlayerInfo[playerid][pMedeniHal]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Ozellik", PlayerInfo[playerid][pOzellik]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "EvlendigiKisi", PlayerInfo[playerid][pEvlendigiKisi]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Navigasyon", PlayerInfo[playerid][pNavigasyon]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "FS", PlayerInfo[playerid][pFS]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Boxing", PlayerInfo[playerid][pBoxiSkill]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "KneeHead", PlayerInfo[playerid][pKneeSkill]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "KungFu", PlayerInfo[playerid][pKungSkill]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "GrabKick", PlayerInfo[playerid][pGrabSkill]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Elbow", PlayerInfo[playerid][pElbowSkill]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Sac", PlayerInfo[playerid][pSac]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme1", PlayerInfo[playerid][pDovme1]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme2", PlayerInfo[playerid][pDovme2]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme3", PlayerInfo[playerid][pDovme3]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme4", PlayerInfo[playerid][pDovme4]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme5", PlayerInfo[playerid][pDovme5]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme6", PlayerInfo[playerid][pDovme6]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme7", PlayerInfo[playerid][pDovme7]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme8", PlayerInfo[playerid][pDovme8]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme9", PlayerInfo[playerid][pDovme9]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme10", PlayerInfo[playerid][pDovme10]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme11", PlayerInfo[playerid][pDovme11]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme12", PlayerInfo[playerid][pDovme12]);
			MySQLUpdatePlayerStr(query, GetPVarInt(playerid, "SQLid"), "Dovme13", PlayerInfo[playerid][pDovme13]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Dil", PlayerInfo[playerid][pDil]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Ingilizce", PlayerInfo[playerid][pIngilizce]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "IngilizceZaman", PlayerInfo[playerid][pIngilizceZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Unlu", PlayerInfo[playerid][pUnlu]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "MuzikCalar", PlayerInfo[playerid][pMuzikCalar]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Italyanca", PlayerInfo[playerid][pItalyanca]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "ItalyancaZaman", PlayerInfo[playerid][pItalyancaZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Rusca", PlayerInfo[playerid][pRusca]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "RuscaZaman", PlayerInfo[playerid][pRuscaZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Fransizca", PlayerInfo[playerid][pFransizca]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "FransizcaZaman", PlayerInfo[playerid][pFransizcaZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Ispanyolca", PlayerInfo[playerid][pIspanyolca]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "IspanyolcaZaman", PlayerInfo[playerid][pIspanyolcaZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Ibranice", PlayerInfo[playerid][pIbranice]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "IbraniceZaman", PlayerInfo[playerid][pIbraniceZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Cince", PlayerInfo[playerid][pCince]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "CinceZaman", PlayerInfo[playerid][pCinceZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Japonca", PlayerInfo[playerid][pJaponca]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "JaponcaZaman", PlayerInfo[playerid][pJaponcaZaman]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Benzin", PlayerInfo[playerid][pBenzinBidon]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Sapka", PlayerInfo[playerid][pSapka]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Gozluk", PlayerInfo[playerid][pGozluk]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Rag", PlayerInfo[playerid][pRag]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "OdaNumarasi", PlayerInfo[playerid][pOdaNumarasi]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "OdaKilit", PlayerInfo[playerid][pOdaKilit]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Vatno", PlayerInfo[playerid][pVatno]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Drugs", PlayerInfo[playerid][pDrugs]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Materials", PlayerInfo[playerid][pMaterials]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Job", PlayerInfo[playerid][pJob]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "PlayingHours", PlayerInfo[playerid][pPlayingHours]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "AllowedPayday", PlayerInfo[playerid][pAllowedPayday]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "PayCheck", PlayerInfo[playerid][pPayCheck]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Faction", PlayerInfo[playerid][pFaction]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Rank", PlayerInfo[playerid][pRank]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "HouseKey", PlayerInfo[playerid][pHouseKey]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "BizKey", PlayerInfo[playerid][pBizKey]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Banned", PlayerInfo[playerid][pBanned]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Warnings", PlayerInfo[playerid][pWarnings]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "CK", PlayerInfo[playerid][pCK]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "CarLic", PlayerInfo[playerid][pCarLic]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "FlyLic", PlayerInfo[playerid][pFlyLic]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "WepLic", PlayerInfo[playerid][pWepLic]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "PhoneNumber", PlayerInfo[playerid][pPhoneNumber]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "PhoneC", PlayerInfo[playerid][pPhoneC]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Telsiz", PlayerInfo[playerid][pTelsiz]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Frekans", PlayerInfo[playerid][pFrekans]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "FrekansAyarlayici", PlayerInfo[playerid][pFrekansAyarlayici]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Jailed", PlayerInfo[playerid][pJailed]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "JailTime", PlayerInfo[playerid][pJailTime]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "Products", PlayerInfo[playerid][pProducts]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "KasSeviyesi", PlayerInfo[playerid][pKasSeviyesi]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "KasDurumu", PlayerInfo[playerid][pKasDurumu]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS1X", PlayerInfo[playerid][pNavigasyon1X]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS1Y", PlayerInfo[playerid][pNavigasyon1Y]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS1Z", PlayerInfo[playerid][pNavigasyon1Z]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS2X", PlayerInfo[playerid][pNavigasyon2X]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS2Y", PlayerInfo[playerid][pNavigasyon2Y]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS2Z", PlayerInfo[playerid][pNavigasyon2Z]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS3X", PlayerInfo[playerid][pNavigasyon3X]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS3Y", PlayerInfo[playerid][pNavigasyon3Y]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "GPS3Z", PlayerInfo[playerid][pNavigasyon3Z]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "CrashX", PlayerInfo[playerid][pSpawnX]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "CrashY", PlayerInfo[playerid][pSpawnY]);
			MySQLUpdatePlayerFlo(query, GetPVarInt(playerid, "SQLid"), "CrashZ", PlayerInfo[playerid][pSpawnZ]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "CrashInt", PlayerInfo[playerid][pSpawnInt]);
			MySQLUpdatePlayerInt(query, GetPVarInt(playerid, "SQLid"), "CrashW", PlayerInfo[playerid][pSpawnW]);
			MySQLUpdateFinish(query, GetPVarInt(playerid, "SQLid"));
		}
	}
	return 1;
}

forward DepoKaydet();
public DepoKaydet()
{
	DepoKaydetFlo("x",DepoSistemi[X]);
	DepoKaydetFlo("y",DepoSistemi[Y]);
	DepoKaydetFlo("z",DepoSistemi[Z]);
	DepoKaydetInt("vw",DepoSistemi[World]);
	DepoKaydetInt("int",DepoSistemi[Interior]);
	DepoKaydetFlo("a",DepoSistemi[Angle]);
	DepoKaydetInt("silah1",DepoSistemi[Silah1]);
	DepoKaydetInt("silah2",DepoSistemi[Silah2]);
	DepoKaydetInt("silah3",DepoSistemi[Silah3]);
	DepoKaydetInt("silah4",DepoSistemi[Silah4]);
	DepoKaydetInt("silah5",DepoSistemi[Silah5]);
	DepoKaydetInt("silah6",DepoSistemi[Silah6]);
	DepoKaydetInt("silah7",DepoSistemi[Silah7]);
	DepoKaydetInt("silah8",DepoSistemi[Silah8]);
	DepoKaydetInt("silah9",DepoSistemi[Silah9]);
	DepoKaydetInt("silah10",DepoSistemi[Silah10]);
	DepoKaydetInt("silah11",DepoSistemi[Silah11]);
	DepoKaydetInt("silah12",DepoSistemi[Silah12]);
	DepoKaydetInt("silah13",DepoSistemi[Silah13]);
	DepoKaydetInt("silah14",DepoSistemi[Silah14]);
	DepoKaydetInt("silah15",DepoSistemi[Silah15]);
	DepoKaydetInt("silah16",DepoSistemi[Silah16]);
	DepoKaydetInt("silah17",DepoSistemi[Silah17]);
	DepoKaydetInt("silah18",DepoSistemi[Silah18]);
	DepoKaydetInt("silah19",DepoSistemi[Silah19]);
	DepoKaydetInt("silah20",DepoSistemi[Silah20]);
	DepoKaydetInt("silah21",DepoSistemi[Silah21]);
	DepoKaydetInt("silah22",DepoSistemi[Silah22]);
	DepoKaydetInt("silah23",DepoSistemi[Silah23]);
	DepoKaydetInt("silah24",DepoSistemi[Silah24]);
	DepoKaydetInt("silah25",DepoSistemi[Silah25]);
	DepoKaydetInt("silah26",DepoSistemi[Silah26]);
	DepoKaydetInt("silah27",DepoSistemi[Silah27]);
	DepoKaydetInt("silah28",DepoSistemi[Silah28]);
	DepoKaydetInt("silah29",DepoSistemi[Silah29]);
	DepoKaydetInt("silah30",DepoSistemi[Silah30]);
	DepoKaydetInt("silah31",DepoSistemi[Silah31]);
	DepoKaydetInt("silah32",DepoSistemi[Silah32]);
	DepoKaydetInt("silah33",DepoSistemi[Silah33]);
	DepoKaydetInt("silah34",DepoSistemi[Silah34]);
	DepoKaydetInt("silah35",DepoSistemi[Silah35]);
	DepoKaydetInt("silah36",DepoSistemi[Silah36]);
	DepoKaydetInt("silah37",DepoSistemi[Silah37]);
	DepoKaydetInt("silah38",DepoSistemi[Silah38]);
	DepoKaydetInt("silah39",DepoSistemi[Silah39]);
	DepoKaydetInt("silah40",DepoSistemi[Silah40]);
	DepoKaydetInt("silah41",DepoSistemi[Silah41]);
	DepoKaydetInt("silah42",DepoSistemi[Silah42]);
	DepoKaydetInt("silah43",DepoSistemi[Silah43]);
	DepoKaydetInt("silah44",DepoSistemi[Silah44]);
	DepoKaydetInt("silah45",DepoSistemi[Silah45]);
	DepoKaydetInt("silah46",DepoSistemi[Silah46]);
	DepoKaydetInt("silah47",DepoSistemi[Silah47]);
	DepoKaydetInt("silah48",DepoSistemi[Silah48]);
	DepoKaydetInt("silah49",DepoSistemi[Silah49]);
	DepoKaydetInt("silah50",DepoSistemi[Silah50]);
	DepoKaydetInt("mermi1",DepoSistemi[Mermi1]);
	DepoKaydetInt("mermi2",DepoSistemi[Mermi2]);
	DepoKaydetInt("mermi3",DepoSistemi[Mermi3]);
	DepoKaydetInt("mermi4",DepoSistemi[Mermi4]);
	DepoKaydetInt("mermi5",DepoSistemi[Mermi5]);
	DepoKaydetInt("mermi6",DepoSistemi[Mermi6]);
	DepoKaydetInt("mermi7",DepoSistemi[Mermi7]);
	DepoKaydetInt("mermi8",DepoSistemi[Mermi8]);
	DepoKaydetInt("mermi9",DepoSistemi[Mermi9]);
	DepoKaydetInt("mermi10",DepoSistemi[Mermi10]);
	DepoKaydetInt("mermi11",DepoSistemi[Mermi11]);
	DepoKaydetInt("mermi12",DepoSistemi[Mermi12]);
	DepoKaydetInt("mermi13",DepoSistemi[Mermi13]);
	DepoKaydetInt("mermi14",DepoSistemi[Mermi14]);
	DepoKaydetInt("mermi15",DepoSistemi[Mermi15]);
	DepoKaydetInt("mermi16",DepoSistemi[Mermi16]);
	DepoKaydetInt("mermi17",DepoSistemi[Mermi17]);
	DepoKaydetInt("mermi18",DepoSistemi[Mermi18]);
	DepoKaydetInt("mermi19",DepoSistemi[Mermi19]);
	DepoKaydetInt("mermi20",DepoSistemi[Mermi20]);
	DepoKaydetInt("mermi21",DepoSistemi[Mermi21]);
	DepoKaydetInt("mermi22",DepoSistemi[Mermi22]);
	DepoKaydetInt("mermi23",DepoSistemi[Mermi23]);
	DepoKaydetInt("mermi24",DepoSistemi[Mermi24]);
	DepoKaydetInt("mermi25",DepoSistemi[Mermi25]);
	DepoKaydetInt("mermi26",DepoSistemi[Mermi26]);
	DepoKaydetInt("mermi27",DepoSistemi[Mermi27]);
	DepoKaydetInt("mermi28",DepoSistemi[Mermi28]);
	DepoKaydetInt("mermi29",DepoSistemi[Mermi29]);
	DepoKaydetInt("mermi30",DepoSistemi[Mermi30]);
	DepoKaydetInt("mermi31",DepoSistemi[Mermi31]);
	DepoKaydetInt("mermi32",DepoSistemi[Mermi32]);
	DepoKaydetInt("mermi33",DepoSistemi[Mermi33]);
	DepoKaydetInt("mermi34",DepoSistemi[Mermi34]);
	DepoKaydetInt("mermi35",DepoSistemi[Mermi35]);
	DepoKaydetInt("mermi36",DepoSistemi[Mermi36]);
	DepoKaydetInt("mermi37",DepoSistemi[Mermi37]);
	DepoKaydetInt("mermi38",DepoSistemi[Mermi38]);
	DepoKaydetInt("mermi39",DepoSistemi[Mermi39]);
	DepoKaydetInt("mermi40",DepoSistemi[Mermi40]);
	DepoKaydetInt("mermi41",DepoSistemi[Mermi41]);
	DepoKaydetInt("mermi42",DepoSistemi[Mermi42]);
	DepoKaydetInt("mermi43",DepoSistemi[Mermi43]);
	DepoKaydetInt("mermi44",DepoSistemi[Mermi44]);
	DepoKaydetInt("mermi45",DepoSistemi[Mermi45]);
	DepoKaydetInt("mermi46",DepoSistemi[Mermi46]);
	DepoKaydetInt("mermi47",DepoSistemi[Mermi47]);
	DepoKaydetInt("mermi48",DepoSistemi[Mermi48]);
	DepoKaydetInt("mermi49",DepoSistemi[Mermi49]);
	DepoKaydetInt("mermi50",DepoSistemi[Mermi50]);
	return 1;
}

forward DepoKaydetStr(sutun[], deger[]);
public DepoKaydetStr(sutun[], deger[])
{
	new string[128];
	format(string, sizeof(string), "UPDATE `depo` SET `%s` = '%s'", sutun, deger);
    mysql_query(string);
    return 1;
}
forward DepoKaydetInt(sutun[], deger);
public DepoKaydetInt(sutun[], deger)
{
    new string[128];
	format(string, sizeof(string), "UPDATE `depo` SET `%s` = '%d'", sutun, deger);
    mysql_query(string);
    return 1;
}
forward DepoKaydetFlo(sutun[], Float:deger);
public DepoKaydetFlo(sutun[], Float:deger)
{
    new string[128];
	format(string, sizeof(string), "UPDATE `depo` SET `%s` = '%f'", sutun, deger);
    mysql_query(string);
    return 1;
}

public Update()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i] == 1)
		    {
				if(PlayerInfo[i][pAllowedPayday] < 6)
				{
					PlayerInfo[i][pAllowedPayday] ++;
				}
			}
		}
	}
}
public PayDay()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i] == 1)
		    {
				new wstring[256];
  				PlayerInfo[i][pPayCheck] = 0;
				PlayerInfo[i][pAllowedPayday] = 0;
				PlayerInfo[i][pExp]++;
				PlayerInfo[i][pPlayingHours] += 1;
				new nxtlevel = PlayerInfo[i][pLevel]+1;
				new expamount = nxtlevel*levelexp;
  				new string[128];
				new year, month,day;
				getdate(year, month, day);
  				new hour,minute,second;
				gettime(hour,minute,second);
				if(minute < 10 && hour < 10) { format(string, sizeof(string), "{33FF00}Tarih: {FFFFFF}%d %s %d - {33FF00}Saat: {FFFFFF}0%d:0%d", day, GetMonthName(month), year, hour, minute); }
				else if(minute < 10 && hour >= 10) { format(string, sizeof(string), "{33FF00}Tarih: {FFFFFF}%d %s %d - {33FF00}Saat: {FFFFFF}%d:0%d ", day, GetMonthName(month), year, hour, minute); }
				else if(minute >= 10 && hour < 10) { format(string, sizeof(string), "{33FF00}Tarih: {FFFFFF}%d %s %d - {33FF00}Saat: {FFFFFF}0%d:%d", day, GetMonthName(month), year, hour, minute); }
				else if(minute >= 10 && hour >= 10) { format(string, sizeof(string), "{33FF00}Tarih: {FFFFFF}%d %s %d - {33FF00}Saat: {FFFFFF}%d:%d", day, GetMonthName(month), year, hour, minute); }
				GenelMesajGonder(i, string);
				SetWorldTime(hour);
				if(PlayerInfo[i][pExp] > expamount)
				{
   					PlayerInfo[i][pExp] = 0;
					PlayerInfo[i][pLevel]++;
					format(wstring, sizeof(wstring), "Karakteriniz seviye atlamýþtýr, yeni seviyeniz: %d", PlayerInfo[i][pLevel]);
					BilgiMesajiGonder(i, wstring);
					expamount = nxtlevel*levelexp;
					format(wstring, sizeof(wstring), "Bir dahaki seviye için istenilen puanlar: %d/%d", PlayerInfo[i][pExp],expamount);
					IpucuMesajiGonder(i, wstring);
				}
				if(PlayerInfo[i][pOdaNumarasi] > 0)
				{
				    if(GetPlayerCash(i) < 15)
				    {
						BilgiMesajiGonder(i, "Otel masraflarýný karþýlýyamadýnýz ve otelden atýldýnýz.");
						PlayerInfo[i][pOdaNumarasi] = 0;
						PlayerInfo[i][pOdaKilit] = 1;
						PlayerInfo[i][pSpawn] = 4;
				    }
				    else
				    {
				        GivePlayerCash(i, -15);
				        BilgiMesajiGonder(i, "Otel masrafý olarak $15 ödediniz.");
				    }
				}
			}
			else
			{
				return 1;
			}
		}
	}
	return 1;
}
stock GetMonthName(month)
{
	new sonuc[8];
    if(month == 1) { sonuc = "Ocak"; }
	else if(month == 2) { sonuc = "Þubat"; }
	else if(month == 3) { sonuc = "Mart"; }
	else if(month == 4) { sonuc = "Nisan"; }
	else if(month == 5) { sonuc = "Mayýs"; }
	else if(month == 6) { sonuc = "Haziran"; }
	else if(month == 7) { sonuc = "Temmuz"; }
	else if(month == 8) { sonuc = "Aðustos"; }
	else if(month == 9) { sonuc = "Eylül"; }
	else if(month == 10) { sonuc = "Ekim"; }
	else if(month == 11) { sonuc = "Kasým"; }
	else if(month == 12) { sonuc = "Aralýk"; }
    return sonuc;
}
public SaveServer()
{
 	for(new i; i < sizeof(Building); i++)
	{
 		BinaKaydet(i);
	}
 	for(new i; i < sizeof(DynamicFactions); i++)
	{
 		FactionKaydet(i);
	}
 	for(new i; i < sizeof(Houses); i++)
	{
	    EvKaydet(i);
	}
 	for(new i; i < sizeof(Businesses); i++)
	{
	    IsyeriKaydet(i);
	}
 	for(new i; i < sizeof(DynamicCars); i++)
	{
	    AracKaydet(i);
	}
	OtelKaydet();
	MeslekKaydet();
	DepoKaydet();
	LokasyonKaydet();
	LokasyonKaydet2();
	LokasyonKaydet3();
	return 1;
}
public UpdateData()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerDataSave(i);
		}
	}
	UpdateScore();
	SyncTime();
	return 1;
}
public UpdateMoney()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i])
		    {
			 	if(GetPlayerCash(i) != GetPlayerCash(i))
			 	{
 	 				new hack = GetPlayerCash(i) - GetPlayerCash(i);
			  		if(hack >= 5000)
			  		{
					  	new string[128];
					    format(string, sizeof(string), "%s (%d) %d$ kadar bir para hilesi yapmaya çalýþmýþtýr.",GetPlayerNameEx(i),PlayerInfo[i][pSQLid], hack);
					    HackLog(string);
			  		}
			 		ResetMoneyBar(i);
					UpdateMoneyBar(i,PlayerInfo[i][pCash]);
				}
			}
		}
	}
	return 1;
}
public UpdateScore()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerScore(i, PlayerInfo[i][pLevel]);
		}
	}
	return 1;
}
OyuncununSilahKlasorIsmi(playerid)
{
    new name[24], full[50];
    GetPlayerName(playerid,name,sizeof(name));
    format(full,sizeof(full),"S-RP_Scriptfiles/OyuncuSilahlari/%s.txt",name);
    return full;
}
OyuncuSilahlariniKaydet(playerid)
{
    new i;
	new klasor[50];
	new string[128];
	new silah;
	new mermi;
    klasor = OyuncununSilahKlasorIsmi(playerid);
    if (!dini_Exists(klasor)) dini_Create(klasor);
    for (i = 1; i < 13; i++)
    {
        GetPlayerWeaponData(playerid, i, silah, mermi);
        format(string,sizeof(string),"Silah - %d",i);
        dini_IntSet(klasor, string, silah);
        format(string,sizeof(string),"Mermi - %d",i);
        dini_IntSet(klasor, string, mermi);
        dini_IntSet(klasor, string, mermi == 65535 ? 0 : mermi);
        ResetPlayerWeapons(playerid);
    }
}
forward OyuncuSilahlariniYukle(playerid);
public OyuncuSilahlariniYukle(playerid)
{
    new i;
	new klasor[50];
	new string[128];
	new silah;
	new mermi;
    klasor = OyuncununSilahKlasorIsmi(playerid);
    ResetPlayerWeapons(playerid);
    for (i = 1; i < 13; i++)
    {
        format(string,sizeof(string),"Silah - %d",i);
        silah = dini_Int(klasor, string);
        format(string,sizeof(string),"Mermi - %d",i);
        mermi = dini_Int(klasor, string);
        GivePlayerWeaponEx(playerid, silah, mermi);
    }
}
stock Isim(id)
{
	new is[256];
	GetPlayerName(id,is,256);
	return is;
}
stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}
stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	return 1;
}
public OnVehiclePaintjob(playerid,vehicleid, paintjobid)
{
	return 1;
}
public OnVehicleRespray(playerid,vehicleid, color1, color2)
{
	return 0;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	new string[256];
	if(TransportDuty[playerid] > 0)
	{
		if(TransportDuty[playerid] == 1)
		{
			TaxiDrivers -= 1;
		}
		TransportTime[playerid] = 0;
		TransportDriver[playerid] = 999;
		format(string, sizeof(string), "Paydos ettiniz. Kazanç: %d$.", TransportMoney[playerid]);
		BilgiMesajiGonder(playerid, string);
		GivePlayerCash(playerid, TransportMoney[playerid]);
		TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
	}
	if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
	{
		TakingDrivingTest[playerid] = 0;
	   	DisablePlayerRaceCheckpoint(playerid);
	   	RemoveDriverFromVehicle(playerid);
	  	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	  	BilgiMesajiGonder(playerid, "Araçtan indiðinizden dolayý test iptal edilmiþtir.");
	}
	if(OtobusTurunda[playerid] == 1)
	{
		MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
   		OtobusTurunda[playerid] = 0;
   		DisablePlayerCheckpoint(playerid);
   		RemoveDriverFromVehicle(playerid);
  		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
	if(YerTemizlemeTurunda[playerid] == 1)
	{
		MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
   		YerTemizlemeTurunda[playerid] = 0;
   		DisablePlayerCheckpoint(playerid);
  		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
	if(TirTurunda[playerid] == 1)
	{
		MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
   		TirTurunda[playerid] = 0;
   		DisablePlayerCheckpoint(playerid);
  		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
	if(GemiTurunda[playerid] == 1)
	{
		MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
   		GemiTurunda[playerid] = 0;
   		DisablePlayerCheckpoint(playerid);
  		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER && AdminDuty[playerid] == 1)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    MotorDurumu[vehicleid] = 1;
	    SetVehicleParamsEx(vehicleid, 1, IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
		BilgiMesajiGonder(playerid,"Müsait durumda yönetici olduðunuz için bu aracý kullanabiliyorsunuz.");
		return 1;
	}
	    
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
		{
			case 457: OyuncuSilahlari[playerid][2] = true;
		}
	}
    if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER)
    {
        new vehicleid = gLastCar[playerid];
		if(GetVehicleModel(vehicleid) == 448 || GetVehicleModel(vehicleid) == 461 || GetVehicleModel(vehicleid) == 462 || GetVehicleModel(vehicleid) == 463 || GetVehicleModel(vehicleid) == 468 || GetVehicleModel(vehicleid) == 471 || GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || GetVehicleModel(vehicleid) == 521 || GetVehicleModel(vehicleid) == 522 || GetVehicleModel(vehicleid) == 523)
		{
			if(KemerTakti[playerid] == 1)
	 		{
				KemerTakti[playerid] = 0;
				//PlayerActionMessage(playerid, 15.0, "kaskýný çýkartýr.");
				RemovePlayerAttachedObject(playerid, 0);
	   		}
		}
	 	if(KemerTakti[playerid] == 1)
	  	{
			KemerTakti[playerid] = 0;
	 		//PlayerActionMessage(playerid, 15.0, "emniyet kemerini çýkartýr.");
	  	}
	  	TextDrawHideForPlayer(playerid, aracbilgi[playerid]);
		TextDrawHideForPlayer(playerid, aracbenzint[playerid]);
		TextDrawHideForPlayer(playerid, arachiz[playerid]);
		TextDrawHideForPlayer(playerid, arachasar[playerid]);
		TextDrawHideForPlayer(playerid, benzina[playerid]);
		TextDrawHideForPlayer(playerid, hiza[playerid]);
		TextDrawHideForPlayer(playerid, hasara[playerid]);
    }
    if(newstate == PLAYER_STATE_DRIVER)
    {
        new vehicleid = GetPlayerVehicleID(playerid);
		if(BarDurum[playerid] == 0)
		{
		    ShowProgressBarForPlayer(playerid, BenzinGosterge[playerid]);
		}
		SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
        gLastCar[playerid] = vehicleid;
    }
	if(newstate == PLAYER_STATE_DRIVER)
 	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
  		{
	        IsTowTrucker[playerid] = 1;
    	}
    }
	if ((newstate==PLAYER_STATE_ONFOOT)&&(IsTowTrucker[playerid]==1))
 	{
	    IsTowTrucker[playerid]=0;
  	}
	if(newstate == PLAYER_STATE_DRIVER)
 	{
 	    new DevamEtsin = 1;
		new string[512];
		new string2[512];
		new MotorDurum[512];
		new vehicleid = GetPlayerVehicleID(playerid);
		if(MotorDurumu[GetPlayerVehicleID(playerid)] == 0) { MotorDurum = "Kapalý"; }
		if(MotorDurumu[GetPlayerVehicleID(playerid)] == 1) { MotorDurum = "Açýk"; }
		if(MotorsuzArac(GetPlayerVehicleID(playerid))) { MotorDurum = "N/A"; }
		if(MotorsuzArac(GetPlayerVehicleID(playerid)))
		{
			if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 2 && DynamicCars[GetPlayerVehicleID(playerid)][CarOwned] == 1)
			{
			    new pName[MAX_PLAYER_NAME];
			    GetPlayerName(playerid, pName, 24);
				if(!strcmp(DynamicCars[GetPlayerVehicleID(playerid)][CarOwner],pName,true))
			   	{
					MotorDurumu[GetPlayerVehicleID(playerid)] = 1;
					SetVehicleParamsEx(vehicleid, MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
					TogglePlayerControllable(playerid, 1);
				}
				if(strcmp(DynamicCars[vehicleid][CarOwner],pName,false))
				{
					RemovePlayerFromVehicle(playerid);
					DevamEtsin = 2;
				}
			}
		}
		if(DynamicCars[vehicleid][FactionCar] != 255 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			//format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			//GenelMesajGonder(playerid, string);
			//format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}%s {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],DynamicFactions[DynamicCars[vehicleid][FactionCar]][fName],MotorDurum);
			//GenelMesajGonder(playerid, string2);
			//IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 2 && DynamicCars[vehicleid][CarOwned] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip:{E6E6E6} %s {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarOwner],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DynamicCars[GetPlayerVehicleID(playerid)][AracPatladi] == 1)
			{
		        HataMesajiGonder(playerid, "Bu araç kullanýlmaz hale gelmiþtir.");
                DevamEtsin = 0;
	        }
	        if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}Ehliyet Kursu {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 3 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}Taksi Duraðý {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 4 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}Otobüs Þirketi {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 5 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}Temizlik Þirketi {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 6 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}Týr Þirketi {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 7 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}Gemi Þirketi {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 8 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}Kiralýk {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
		if(DynamicCars[vehicleid][CarType] == 9 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			/*format(string, sizeof(string), "{4388A9}[%s] Plaka: {E6E6E6}%s {4388A9}- Fiyat: {E6E6E6}%d$",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarValue]);
			GenelMesajGonder(playerid, string);
			format(string2, sizeof(string2), "{4388A9}[%s] Sahip: {E6E6E6}%s (Kiralýk) {4388A9}- Motor: {E6E6E6}%s",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarOwner],MotorDurum);
			GenelMesajGonder(playerid, string2);
            IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");*/
            format(string, sizeof(string), "%s marka araca hoþgeldiniz, motoru çalýþtýrmak için (/motor)",VehicleName[GetVehicleModel(vehicleid)]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TextDrawShowForPlayer(playerid, aracbilgi[playerid]);
			TextDrawShowForPlayer(playerid, aracbenzint[playerid]);
			TextDrawShowForPlayer(playerid, arachiz[playerid]);
			TextDrawShowForPlayer(playerid, arachasar[playerid]);
			TextDrawShowForPlayer(playerid, benzina[playerid]);
			TextDrawShowForPlayer(playerid, hiza[playerid]);
			TextDrawShowForPlayer(playerid, hasara[playerid]);
			if(DevamEtsin == 2)
			{
				HataMesajiGonder(playerid, "Bu aracýn sahibi siz deðilsiniz.");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
 	{
	   	if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
	   	{
	      	if(TakingDrivingTest[playerid] != 1)
	   		{
				RemoveDriverFromVehicle(playerid);
				HataMesajiGonder(playerid, "Ehliyet sürüþü belgesi almamýþsýnýz.");
        		TakingDrivingTest[playerid] = 0;
	   			DisablePlayerRaceCheckpoint(playerid);
			}
	    }
	    if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] != 1)
	    {
			TakingDrivingTest[playerid] = 0;
	   		DisablePlayerRaceCheckpoint(playerid);
	    	RemoveDriverFromVehicle(playerid);
			BilgiMesajiGonder(playerid, "Ehliyet araçlarýndan baþka bir araca bindiðinizden dolayý testiniz iptal edilmiþtir.");
	    }
    }
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
 		if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    new string[256];
  			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
	    	TransportTime[TransportDriver[playerid]] = 0;
	    	TransportCost[TransportDriver[playerid]] = 0;
	    	format(string, sizeof(string), "~w~Ulasim ucreti: ~n~~r~%d$",TransportCost[playerid]);
	    	GameTextForPlayer(playerid, string, 5000, 1);
	    	format(string, sizeof(string), "~w~Musteri taksiden ayrildi.~n~~g~Ucret: %d$",TransportCost[playerid]);
	    	GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
	    	GivePlayerCash(playerid, -TransportCost[playerid]);
	    	TransportCost[playerid] = 0;
	    	TransportTime[playerid] = 0;
	    	TransportDriver[playerid] = 999;
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    gLastCar[playerid] = GetPlayerVehicleID(playerid);
 		if(KemerTakti[playerid] == 0)
 		{
			IpucuMesajiGonder(playerid,"Araç sistemi hakkýnda yardým almak için {86D060}/aracyardim {E6E6E6}yazabilirsiniz.");
		}
		new string[512];
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetPlayerCash(playerid) < TransportValue[i])
	                {
	                    format(string, sizeof(string), "Taksiye binebilmek için %d$ gereklidir.", TransportValue[i]);
						HataMesajiGonder(playerid, string);
						RemoveDriverFromVehicle(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(string, sizeof(string), "Taksimetre %d$'dan açýlmýþ, her 15 saniyede bir fiyat katlanacaktýr.", TransportValue[i]);
							BilgiMesajiGonder(playerid, string);
							format(string, sizeof(string), "%s adlý müþteri taksiye bindi.", GetPlayerNameEx2(playerid, i));
							BilgiMesajiGonder(i, string);
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[playerid] = i;
	                    }
	                }
	            }
	        }
	    }
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
		/*if(dialogid == 7774)
		{
		    if(!response) { HataMesajiGonder(playerid, "Kayýt olmadan sunucuya giriþ yapamazsýnýz."); return Kick(playerid); }
			    else if(response)
			    {
			        if(strlen(inputtext) == 0 || strlen(inputtext) < 3 || strlen(inputtext) > 22)
			        {
			            	ShowPlayerDialog(playerid, 64, DIALOG_STYLE_INPUT, "Doðum Yeri","Karakterinizin doðum yerini girin.","Devam","");
			            	HataMesajiGonder(playerid, "Doðum yeriniz en az 3, en fazla 22 karakter olabilir.");
			            	return 1;
			        }
			        else
			        {
			            strmid(PlayerInfo[playerid][pDogumYeri], (inputtext), 0, strlen((inputtext)), 50);
			            new yazi[256];
			            format(yazi,sizeof(yazi),"Karakterinizin doðum yeri %s olarak ayarlandý.",inputtext);
			            BilgiMesajiGonder(playerid, yazi);
			            	if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 1)
							{
					  		  new skin = random(sizeof(AcikErkekSkinler));
					  		  SetPlayerSkin(playerid, AcikErkekSkinler[skin][0]);
					  		  PlayerInfo[playerid][pSkin] = AcikErkekSkinler[skin][0];
							}
							if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 2)
							{
							    new skin = random(sizeof(KoyuErkekSkinler));
							    SetPlayerSkin(playerid, KoyuErkekSkinler[skin][0]);
							    PlayerInfo[playerid][pSkin] = KoyuErkekSkinler[skin][0];
							}
							if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 1)
							{
							    new skin = random(sizeof(BeyazKadinSkinler));
							    SetPlayerSkin(playerid, BeyazKadinSkinler[skin][0]);
							    PlayerInfo[playerid][pSkin] = BeyazKadinSkinler[skin][0];
							}
							if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 2)
							{
							    new skin = random(sizeof(SiyahKadinSkinler));
							    SetPlayerSkin(playerid, SiyahKadinSkinler[skin][0]);
							    PlayerInfo[playerid][pSkin] = SiyahKadinSkinler[skin][0];
							}
						return 1;
					}
				}
		}
        if(dialogid == 7775)
		{
		    if(response)
		    {
		        if(strval(inputtext) < 13 || strval(inputtext) > 80)
				{
				    HataMesajiGonder(playerid, "Karakterinizin yaþý 13'ten küçük , 80'den büyük olamaz !");
				    ShowPlayerDialog(playerid, 7775, DIALOG_STYLE_INPUT, "Yaþýnýzý Girin", "Tamam", "Kapat");
				}
				else if(!IsNumeric(inputtext))
				{
				    HataMesajiGonder(playerid, "Alana bir sayý girmelisiniz !");
				    ShowPlayerDialog(playerid, 7775, DIALOG_STYLE_INPUT, "Yaþýnýzý Girin", "Tamam", "Kapat");
				}
				else
				{
				    PlayerInfo[playerid][pAge] = strval(inputtext);
				    ShowPlayerDialog(playerid, 7774, DIALOG_STYLE_INPUT, "Doðum Yerinizi Girin", "Tamam", "Kapat");
				}
		    }
		}
        if(dialogid == 7776)
		{
			if(response)
			{
			if(listitem == 0)
			{
			    PlayerInfo[playerid][pTenRengi] = 2;
			    ShowPlayerDialog(playerid, 7775, DIALOG_STYLE_INPUT, "Yaþýnýzý Girin", "Tamam", "Kapat");
			}
			if(listitem == 1)
			{
                PlayerInfo[playerid][pTenRengi] = 1;
                ShowPlayerDialog(playerid, 7775, DIALOG_STYLE_INPUT, "Yaþýnýzý Girin", "Tamam", "Kapat");
			}
			}
		}
		if(dialogid == 7777)
		{
			if(response)
			{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 7776, DIALOG_STYLE_LIST, "Ten Renginizi Seçin","Siyah\nBeyaz" , "Seç", "Kapat");
                PlayerInfo[playerid][pSex] = 1;
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 7776, DIALOG_STYLE_LIST, "Ten Renginizi Seçin","Siyah\nBeyaz" , "Seç", "Kapat");
                PlayerInfo[playerid][pSex] = 2;
   			}
		}*/
    	if(dialogid == 7777)
		{
			if(response)
			{
			    if(!response)
				{
					HataMesajiGonder(selamlastigim[playerid], "Kiþi sizinle selamlaþmak istemiyor .");
				}
	    		else if(response)
	    		{
					OnePlayAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
					AnimYapiyor[playerid] = 1;
					OnePlayAnim(selamlastigim[playerid],"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
					AnimYapiyor[selamlastigim[playerid]] = 1;
					selamlastigim[selamlastigim[playerid]]=0;
					selamlastigim[playerid]= 0;
				}
   			}
		}
		if(dialogid == 7776)
		{
			if(response)
			{
			    if(!response)
				{
					HataMesajiGonder(selamlastigim[playerid], "Kiþi sizinle selamlaþmak istemiyor .");
				}
	    		else if(response)
	    		{
					OnePlayAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
					AnimYapiyor[playerid] = 1;
					OnePlayAnim(selamlastigim[playerid],"GANGS","hndshkda",4.0,0,0,0,0,0);
					AnimYapiyor[selamlastigim[playerid]] = 1;
					selamlastigim[selamlastigim[playerid]]=0;
					selamlastigim[playerid]= 0;
				}
   			}
		}
		if(dialogid == 7775)
		{
			if(response)
			{
			    if(!response)
				{
					HataMesajiGonder(selamlastigim[playerid], "Kiþi sizinle selamlaþmak istemiyor .");
				}
	    		else if(response)
	    		{
					OnePlayAnim(playerid,"GANGS","hndshkba_swt",4.0,0,0,0,0,0);
					AnimYapiyor[playerid] = 1;
					OnePlayAnim(selamlastigim[playerid],"GANGS","hndshkba",4.0,0,0,0,0,0);
					AnimYapiyor[selamlastigim[playerid]] = 1;
					selamlastigim[selamlastigim[playerid]]=0;
					selamlastigim[playerid]= 0;
				}
   			}
		}
	if(dialogid == 1)
	{
		if(response == 1)
		{
			if(strlen(inputtext))
			{
				MySQLCheckConnection();
		    	new sqlaccountstatus = MySQLCheckAccount(GetPlayerNameSave(playerid));
			   	if(sqlaccountstatus != 0)
				SetPVarInt(playerid, "SQLid", sqlaccountstatus);
				if(GetPVarInt(playerid, "SQLid") != 0)
				{
                    OnPlayerLogin(playerid,inputtext);
					return 0;
				}
			}
			else
			{
			    new yazi[1204];
				format(yazi,1204,"{6699FF}%s {FFFFFF}isimli karakter sunucu veritabanýnda kayýtlýdýr lütfen giriþ yapýnýz.");
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Sunucuya giriþ",yazi,"Giriþ yap","Çýkýþ");
			}
		}
		else
		{
			Kick(playerid);
		}
	}
	if(dialogid == 6)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pFaction] == 255)
				{
  					HataMesajiGonder(playerid, "Herhangi bir organizasyonda deðilsiniz.");
					return 1;
				}
			   	PlayerInfo[playerid][pSpawn] = 1;
			   	BilgiMesajiGonder(playerid, "Spawn bölgeniz ayarlanmýþtýr.");
			}
			else if(listitem == 1)
			{
				if(PlayerInfo[playerid][pHouseKey] == 255)
				{
		    		HataMesajiGonder(playerid, "Herhangi bir evin sahibi deðilsiniz.");
					return 1;
				}
		    	PlayerInfo[playerid][pSpawn] = 2;
			   	BilgiMesajiGonder(playerid, "Spawn bölgeniz ayarlanmýþtýr.");
			}
			else if(listitem == 2)
			{
		    	PlayerInfo[playerid][pSpawn] = 3;
			   	BilgiMesajiGonder(playerid, "Spawn bölgeniz ayarlanmýþtýr.");
			}
			else if(listitem == 3)
			{
		    	PlayerInfo[playerid][pSpawn] = 4;
			   	BilgiMesajiGonder(playerid, "Spawn bölgeniz ayarlanmýþtýr.");
			}
			else if(listitem == 4)
			{
		    	PlayerInfo[playerid][pSpawn] = 5;
			   	BilgiMesajiGonder(playerid, "Spawn bölgeniz ayarlanmýþtýr.");
			}
		}
		else
		{
			return 1;
		}
		return 1;
	}
	if(dialogid == 9)
	{
 		if(response)
   		{
     		if(listitem == 0)
			{
				PlayerInfo[playerid][pFS] = 0;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				BilgiMesajiGonder(playerid, "Kavga tekniðiniz ayarlandý.");
			}
			else if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pBoxiSkill] == 1)
			    {
					PlayerInfo[playerid][pFS] = 1;
					SetPlayerFightingStyle(playerid,FIGHT_STYLE_BOXING);
					BilgiMesajiGonder(playerid, "Kavga tekniðiniz ayarlandý.");
				}
				else
				{
				    HataMesajiGonder(playerid, "Bu dövüþ tekniðini bilmiyorsunuz.");
				}
			}
			else if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pKungSkill] == 1)
			    {
					PlayerInfo[playerid][pFS] = 2;
					SetPlayerFightingStyle(playerid,FIGHT_STYLE_KUNGFU);
					BilgiMesajiGonder(playerid, "Kavga tekniðiniz ayarlandý.");
				}
				else
				{
				    HataMesajiGonder(playerid, "Bu dövüþ tekniðini bilmiyorsunuz.");
				}
			}
			else if(listitem == 3)
			{
			    if(PlayerInfo[playerid][pGrabSkill] == 1)
			    {
					PlayerInfo[playerid][pFS] = 3;
					SetPlayerFightingStyle(playerid,FIGHT_STYLE_GRABKICK);
					BilgiMesajiGonder(playerid, "Kavga tekniðiniz ayarlandý.");
				}
				else
				{
				    HataMesajiGonder(playerid, "Bu dövüþ tekniðini bilmiyorsunuz.");
				}
			}
			else if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pKneeSkill] == 1)
			    {
					PlayerInfo[playerid][pFS] = 4;
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
					BilgiMesajiGonder(playerid, "Kavga tekniðiniz ayarlandý.");
				}
				else
				{
				    HataMesajiGonder(playerid, "Bu dövüþ tekniðini bilmiyorsunuz.");
				}
			}
			else if(listitem == 5)
			{
			    if(PlayerInfo[playerid][pElbowSkill] == 1)
			    {
					PlayerInfo[playerid][pFS] = 5;
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
					BilgiMesajiGonder(playerid, "Kavga tekniðiniz ayarlandý.");
				}
				else
				{
				    HataMesajiGonder(playerid, "Bu dövüþ tekniðini bilmiyorsunuz.");
				}
			}
		}
	}
 	if(dialogid == 10)
	{
		if(response)
		{
			if(listitem == 0)
			{
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NAVIGASYON1;
				SetPlayerCheckpoint(playerid,DynamicFactions[0][fX],DynamicFactions[0][fY],DynamicFactions[0][fZ], 5.0);
				BilgiMesajiGonder(playerid, "Karakol haritada iþaretlendi.");
			}
			if(listitem == 1)
			{
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NAVIGASYON2;
				SetPlayerCheckpoint(playerid,DynamicFactions[15][fX],DynamicFactions[15][fY],DynamicFactions[15][fZ], 5.0);
				BilgiMesajiGonder(playerid, "Hastahane haritada iþaretlendi.");
			}
			if(listitem == 2)
			{
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NAVIGASYON4;
				SetPlayerCheckpoint(playerid,PlayerInfo[playerid][pNavigasyon1X],PlayerInfo[playerid][pNavigasyon1Y],PlayerInfo[playerid][pNavigasyon1Z], 5.0);
				BilgiMesajiGonder(playerid, "1. navigasyon bölgesi haritada iþaretlendi.");
			}
			if(listitem == 3)
			{
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NAVIGASYON5;
				SetPlayerCheckpoint(playerid,PlayerInfo[playerid][pNavigasyon2X],PlayerInfo[playerid][pNavigasyon2Y],PlayerInfo[playerid][pNavigasyon2Z], 5.0);
				BilgiMesajiGonder(playerid, "2. navigasyon bölgesi haritada iþaretlendi.");
			}
			if(listitem == 4)
			{
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NAVIGASYON6;
				SetPlayerCheckpoint(playerid,PlayerInfo[playerid][pNavigasyon3X],PlayerInfo[playerid][pNavigasyon3Y],PlayerInfo[playerid][pNavigasyon3Z], 5.0);
				BilgiMesajiGonder(playerid, "3. navigasyon bölgesi haritada iþaretlendi.");
			}
		}
	}
 	if(dialogid == 11)
	{
		if(response)
		{
			if(listitem == 0)
			{
				PlayerInfo[playerid][pKiyafet1] = KiyafetSecimi[playerid];
				BilgiMesajiGonder(playerid, "1. kýyafetiniz ayarlanmýþtýr.");
				OnPlayerDataSave(playerid);
			}
			if(listitem == 1)
			{
				PlayerInfo[playerid][pKiyafet2] = KiyafetSecimi[playerid];
				BilgiMesajiGonder(playerid, "2. kýyafetiniz ayarlanmýþtýr.");
				OnPlayerDataSave(playerid);
			}
			if(listitem == 2)
			{
				PlayerInfo[playerid][pKiyafet3] = KiyafetSecimi[playerid];
				BilgiMesajiGonder(playerid, "3. kýyafetiniz ayarlanmýþtýr.");
				OnPlayerDataSave(playerid);
			}
		}
		else
 		{
			ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Kiyafet satýn alýmý","1. kýyafet\n2. kýyafet\n3. kýyafet" , "Seç", "Kapat");
   		}
	}
  	if(dialogid == 12)
	{
		if(response)
		{
	  		new EskiSkin[MAX_PLAYERS];
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pKiyafet1] == 0)
				{
	 				HataMesajiGonder(playerid, "Gardolabýnýzýn bu kýsmý boþ.");
					return 1;
				}
				KemerTakti[playerid] = 0;
				TaserElinde[playerid] = 0;
				SapkaTakti[playerid] = 0;
				RagTakti[playerid] = 0;
				GozlukTakti[playerid] = 0;
				RemovePlayerAttachedObject(playerid, 0);
  				RemovePlayerAttachedObject(playerid, 1);
  				RemovePlayerAttachedObject(playerid, 2);
  				RemovePlayerAttachedObject(playerid, 3);
  				RemovePlayerAttachedObject(playerid, 4);
			  	EskiSkin[playerid] = GetPlayerSkin(playerid);
			  	SetPlayerSkin(playerid, PlayerInfo[playerid][pKiyafet1]);
				PlayerInfo[playerid][pSkin] = PlayerInfo[playerid][pKiyafet1];
				PlayerInfo[playerid][pKiyafet1] = EskiSkin[playerid];
				BilgiMesajiGonder(playerid, "Kýyafetlerinizi deðiþtirdiniz.");
				OnPlayerDataSave(playerid);
			}
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pKiyafet2] == 0)
				{
	 				HataMesajiGonder(playerid, "Gardolabýnýzýn bu kýsmý boþ.");
					return 1;
				}
			  	EskiSkin[playerid] = GetPlayerSkin(playerid);
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pKiyafet2]);
				PlayerInfo[playerid][pSkin] = PlayerInfo[playerid][pKiyafet2];
				PlayerInfo[playerid][pKiyafet2] = EskiSkin[playerid];
				BilgiMesajiGonder(playerid, "Kýyafetlerinizi deðiþtirdiniz.");
				OnPlayerDataSave(playerid);
			}
			if(listitem == 2)
			{
				if(PlayerInfo[playerid][pKiyafet3] == 0)
				{
	 				HataMesajiGonder(playerid, "Gardolabýnýzýn bu kýsmý boþ.");
					return 1;
				}
			    EskiSkin[playerid] = GetPlayerSkin(playerid);
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pKiyafet3]);
				PlayerInfo[playerid][pSkin] = PlayerInfo[playerid][pKiyafet3];
				PlayerInfo[playerid][pKiyafet3] = EskiSkin[playerid];
				BilgiMesajiGonder(playerid, "Kýyafetlerinizi deðiþtirdiniz.");
				OnPlayerDataSave(playerid);
			}
		}
	}
	if(dialogid == 13)
	{
		if(response)
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
				new idcar = GetPlayerVehicleID(playerid);
				GivePlayerCash(playerid, DynamicCars[idcar][CarValue]/2);
				AracSil(idcar);
				new string[256];
				BilgiMesajiGonder(playerid, "Aracýnýzý imha ettiniz.");
				format(string, sizeof(string), "%s, %d ID'li (%s, %d, %d) aracý %d$'a imha etti.", GetPlayerNameEx(playerid), idcar, VehicleName[GetVehicleModel(idcar)-400], DynamicCars[idcar][CarColor1], DynamicCars[idcar][CarColor2], DynamicCars[idcar][CarValue]/2);
				AracLog(string);
			}
			else
			{
			    HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
			}
		}
		return 1;
  	}
   	if(dialogid == 20)
   	{
		if(response)
		{
			new string[256];
			ArkadasEkle(PlayerInfo[TeklifEden[playerid]][pSQLid], PlayerInfo[playerid][pSQLid]);
			TeklifAsamasi[playerid] = 0;
			TeklifAsamasi[TeklifEden[playerid]] = 0;
			format(string, sizeof(string), "%s adlý kiþi ile tanýþtýnýz.", GetPlayerNameEx2(TeklifEden[playerid], playerid));
			BilgiMesajiGonder(playerid, string);
			format(string, sizeof(string), "%s adlý kiþi ile tanýþtýnýz.", GetPlayerNameEx2(playerid, TeklifEden[playerid]));
			BilgiMesajiGonder(TeklifEden[playerid], string);
		}
		else
		{
			new string[256];
			TeklifAsamasi[playerid] = 0;
			TeklifAsamasi[TeklifEden[playerid]] = 0;
			format(string, sizeof(string), "%s adlý kiþinin tanýþma isteðini reddetdiniz.", GetPlayerNameEx2(TeklifEden[playerid], playerid));
			BilgiMesajiGonder(playerid, string);
			format(string, sizeof(string), "%s adlý kiþi tanýþma isteðinizi reddetdi.", GetPlayerNameEx2(playerid, TeklifEden[playerid]));
			BilgiMesajiGonder(TeklifEden[playerid], string);
		}
	}
 	if(dialogid == 25)
	{
		if(response)
  		{
  		    new striing[256];
  		    GozuBaglandi[playerid] = 1;
			SetPlayerCameraPos(playerid, 2000,-2000,2000);
			SetPlayerCameraLookAt(playerid, 2000,-2000,2000);
			format(striing, sizeof(striing), "%s isimli kiþi göz baðlama teklifinizi kabul etti.", GetPlayerNameEx2(GozunuBaglayacakKisiID[playerid], playerid));
			BilgiMesajiGonder(GozunuBaglayacakKisiID[playerid], striing);
  		}
  		else
		{
		    new ztring[256];
			format(ztring, sizeof(ztring), "%s isimli kiþi göz baðlama teklifinizi reddetti.", GetPlayerNameEx2(GozunuBaglayacakKisiID[playerid], playerid));
			BilgiMesajiGonder(GozunuBaglayacakKisiID[playerid], ztring);
			GozunuBaglayacakKisiID[playerid] = 0;
		}
	}
 	if(dialogid == 30)
	{
		if(response)
  		{
			if(IsPlayerConnected(playerid))
 			{
		  		for(new i = 0; i < sizeof(Businesses); i++)
				{
					if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
					{
						if(GetPlayerVirtualWorld(playerid) == i)
			   			{
						    if(Businesses[i][BizType] == 2)
					    	{
				        		if(Businesses[i][Products] != 0)
				        		{
                     				if(listitem == 0)
          				 			{
										if(GetPlayerCash(playerid) >= 5)
										{
							    			BilgiMesajiGonder(playerid, "Telefon aldýnýz.");
			                 				GivePlayerCash(playerid,-250);
			                     			Businesses[i][Till] += 250;
			                        		Businesses[i][Products]--;
			 								new randphone = 9999 + random(999999);
											PlayerInfo[playerid][pPhoneNumber] = randphone;
											PlayerInfo[playerid][pPhoneC] = i;
			 								IsyeriKaydet(i);
			 								return 1;
										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
                     				if(listitem == 1)
          				 			{
										if(GetPlayerCash(playerid) >= 150)
										{
										    GivePlayerCash(playerid,-150);
										    BilgiMesajiGonder(playerid, "Telsiz aldýnýz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=150;
										    PlayerInfo[playerid][pTelsiz] = 1;
										    IsyeriKaydet(i);
		                                    return 1;

										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
                     				if(listitem == 2)
          				 			{
										if(GetPlayerCash(playerid) >= 200)
										{
										    GivePlayerCash(playerid,-200);
										    BilgiMesajiGonder(playerid, "Frekans ayarlayýcý aldýnýz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=200;
										    PlayerInfo[playerid][pFrekansAyarlayici] = 1;
										    IsyeriKaydet(i);
		                                    return 1;

		       							 }
		       						}
                     				if(listitem == 3)
          				 			{
										if(GetPlayerCash(playerid) >= 700)
										{
										    GivePlayerCash(playerid,-700);
										    BilgiMesajiGonder(playerid, "Navigasyon aldýnýz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=700;
										    PlayerInfo[playerid][pNavigasyon] = 1;
										    IsyeriKaydet(i);
		                                    return 1;

		        						}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
									if(listitem == 4)
          				 			{
										if(GetPlayerCash(playerid) >= 500)
										{
										    GivePlayerCash(playerid,-500);
										    BilgiMesajiGonder(playerid, "Müzik çalar aldýnýz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=500;
										    PlayerInfo[playerid][pMuzikCalar] = 1;
										    IsyeriKaydet(i);
		                                    return 1;

		        						}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
								}
								else
								{
								    HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
								}
							}
						}
					}
				}
			}
		}
	}
 	if(dialogid == 31)
	{
		if(response)
  		{
			if(IsPlayerConnected(playerid))
 			{
	  			for(new i = 0; i < sizeof(Businesses); i++)
				{
					if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
					{
						if(GetPlayerVirtualWorld(playerid) == i)
	   					{
					    	if(Businesses[i][BizType] == 3)
				    		{
			        			if(Businesses[i][Products] != 0)
			        			{
   									if(listitem == 0)
                   					{
										if(GetPlayerCash(playerid) >= 30)
										{
										    if(PlayerInfo[playerid][pSigara] >= 30)
										    {
										        HataMesajiGonder(playerid, "Üzerinizde sigara için yeterli yer kalmamýþ.");
										        return 1;
										    }
										    PlayerInfo[playerid][pSigara] = 30;
								  			GivePlayerCash(playerid,-30);
											BilgiMesajiGonder(playerid, "Sigara aldýnýz.");
											Businesses[i][Products]--;
											Businesses[i][Till]+=30;
											IsyeriKaydet(i);
										}
										else
										{
									    	HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
				 					if(listitem == 1)
    								{
										if(GetPlayerCash(playerid) >= 50)
										{
										    if(PlayerInfo[playerid][pBez] >= 1)
										    {
										        HataMesajiGonder(playerid, "Zaten bir bez almýþsýnýz.");
										        return 1;
										    }
										    PlayerInfo[playerid][pBez] = 1;
								  			GivePlayerCash(playerid,-50);
											BilgiMesajiGonder(playerid, "Bez aldýnýz.");
											Businesses[i][Products]--;
											Businesses[i][Till]+=50;
											IsyeriKaydet(i);
										}
										else
										{
									    	HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
         							if(listitem == 2)
          							{
										if(GetPlayerCash(playerid) >= 300)
										{
											if(PlayerInfo[playerid][pMask] == 1)
    										{
												HataMesajiGonder(playerid, "Zaten bir maske almýþsýnýz.");
												return 1;
				 							}
					 						PlayerInfo[playerid][pMask] = 1;
					    					GivePlayerCash(playerid,-300);
											BilgiMesajiGonder(playerid, "Maske aldýnýz, kullanmak için: {86D060}/maskegiy");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=300;
										    IsyeriKaydet(i);
              								return 1;
										}
										else
										{
				    						HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
          							if(listitem == 3)
                  					{
										if(GetPlayerCash(playerid) >= 300)
										{
								    		GivePlayerWeaponEx(playerid,4,1);
								    		GivePlayerCash(playerid,-300);
											BilgiMesajiGonder(playerid, "Býçak aldýnýz.");
								    		Businesses[i][Products]--;
								    		Businesses[i][Till]+=300;
								    		IsyeriKaydet(i);
	                                   		return 1;
										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
	 								}
           							if(listitem == 4)
		               				{
										if(GetPlayerCash(playerid) >= 500)
										{
										    GivePlayerWeaponEx(playerid,5,1);
										    GivePlayerCash(playerid,-500);
											BilgiMesajiGonder(playerid, "Beyzbol sopasý aldýnýz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=500;
										    IsyeriKaydet(i);
			                                return 1;
										}
										else
										{
						    				HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
           							if(listitem == 5)
		               				{
										if(GetPlayerCash(playerid) >= 300)
										{
										    PlayerInfo[playerid][pBenzinBidon] += 50;
										    GivePlayerCash(playerid,-300);
											BilgiMesajiGonder(playerid, "Benzin bidonu aldýnýz. (50 litre)");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=300;
										    IsyeriKaydet(i);
			                                return 1;
										}
										else
										{
						    				HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
          						}
								else
								{
								    HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
								}
							}
						}
					}
				}
			}
			return 1;
  		}
	}
	
	if(dialogid == 35)
 	{
		if(response)
		{
			if(IsPlayerConnected(playerid))
			{
		  		for(new i = 0; i < sizeof(Businesses); i++)
				{
					if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
					{
						if(GetPlayerVirtualWorld(playerid) == i)
			   			{
						    if(Businesses[i][BizType] == 7)
					    	{
				        		if(Businesses[i][Products] != 0)
				        		{
									if(listitem == 0)
									{
										if(GetPlayerCash(playerid) >= 10)
										{
											PlayerInfo[playerid][pSac] = 1;
										    GivePlayerCash(playerid,-10);
										    BilgiMesajiGonder(playerid, "Saçýnýzý kestirdiniz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=10;
										    IsyeriKaydet(i);
										    return 1;
										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
									if(listitem == 1)
									{
										if(GetPlayerCash(playerid) >= 10)
										{
											PlayerInfo[playerid][pSac] = 2;
										    GivePlayerCash(playerid,-10);
										    BilgiMesajiGonder(playerid, "Saçýnýzý kestirdiniz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=10;
										    IsyeriKaydet(i);
										    return 1;
										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
									if(listitem == 2)
									{
										if(GetPlayerCash(playerid) >= 10)
										{
											PlayerInfo[playerid][pSac] = 3;
										    GivePlayerCash(playerid,-10);
										    BilgiMesajiGonder(playerid, "Saçýnýzý kestirdiniz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=10;
										    IsyeriKaydet(i);
										}
										else
										{
									    	HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
									if(listitem == 3)
									{
										if(GetPlayerCash(playerid) >= 10)
										{
											PlayerInfo[playerid][pSac] = 4;
										    GivePlayerCash(playerid,-10);
										    BilgiMesajiGonder(playerid, "Saçýnýzý kestirdiniz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=10;
										    IsyeriKaydet(i);
										    return 1;
										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
									if(listitem == 4)
									{
										if(GetPlayerCash(playerid) >= 10)
										{
											PlayerInfo[playerid][pSac] = 5;
										    GivePlayerCash(playerid,-10);
										    BilgiMesajiGonder(playerid, "Saçýnýzý kestirdiniz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=10;
										    IsyeriKaydet(i);
										    return 1;
										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
									if(listitem == 5)
									{
										if(GetPlayerCash(playerid) >= 10)
										{
											PlayerInfo[playerid][pSac] = 6;
										    GivePlayerCash(playerid,-10);
										    BilgiMesajiGonder(playerid, "Saçýnýzý kestirdiniz.");
										    Businesses[i][Products]--;
										    Businesses[i][Till]+=10;
										    IsyeriKaydet(i);
										    return 1;
										}
										else
										{
										    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										}
									}
								}
								else
								{
									HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
								}
							}
						}
					}
				}
			}
		}
	}
	if(dialogid == 42)
	{
		if(response)
		{
			for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == i)
			   		{
					    if(Businesses[i][BizType] == 5)
				    	{
				       		if(Businesses[i][Products] != 0)
				       		{
								if(listitem == 0)
								{
									if(CopOnDuty[playerid] == 1)
					   				{
					     			    HataMesajiGonder(playerid, "Mesaide iken kýyafet alamazsýnýz.");
										return 1;
								 	}
								    if(SapkaTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Þapka takerken, yeni kýyafet alamazsýnýz.");
									    return 1;
									}
								    if(RagTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Rag takerken, yeni kýyafet alamazsýnýz.");
									    return 1;
									}
								    if(GozlukTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Gözlük takerken, yeni kýyafet alamazsýnýz.");
									    return 1;
									}
								    if(SigaraIciyor[playerid] == 1)
								    {
										HataMesajiGonder(playerid, "Elinizde bir þey bulunuyorken, yeni kýyafet alamazsýnýz.");
									    return 1;
								    }
									KiyafetAliyor[playerid] = 1;
									TogglePlayerControllable(playerid, 0);
									SelectChar[playerid] = 255;
									ShowModelSelectionMenu(playerid, skinlist, "Skin Seçin");
								    /*if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 1)
									{
										ShowModelSelectionMenu(playerid, skineblist, "Skin Seçin");
									}
								    if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 2)
									{
										ShowModelSelectionMenu(playerid, skineslist, "Skin Seçin");
									}
								    if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 1)
									{
										ShowModelSelectionMenu(playerid, skinbblist, "Skin Seçin");
									}
								    if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 2)
									{
										ShowModelSelectionMenu(playerid, skinbslist, "Skin Seçin");
									}*/
								    HataMesajiGonder(playerid, "Kýyafet alýrken herhangi bir þey yazamazsýnýz.");
								}
								if(listitem == 1)
								{
								    if(SapkaTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Þapka takerken, yeni þapka alamazsýnýz.");
									    return 1;
									}
								    if(RagTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Rag takerken, yeni þapka alamazsýnýz.");
									    return 1;
									}
								    if(GozlukTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Gözlük takerken, yeni þapka alamazsýnýz.");
									    return 1;
									}
								    if(SigaraIciyor[playerid] == 1)
								    {
										HataMesajiGonder(playerid, "Elinizde bir þey bulunuyorken, yeni þapka alamazsýnýz.");
									    return 1;
								    }
									new skin, cap, ilerleme = 1;
								    skin = (GetPlayerSkin(playerid) -1);
									for(new s = 0; s < sizeof(HataliKiyafetler); s++)
									{
										if(skin == HataliKiyafetler[s])
										{
											HataMesajiGonder(playerid, "Kullandýðýnýz kýyafete þapka alamazsýnýz.");
											ilerleme = 0;
										}
									}
									if(ilerleme == 1)
									{
									    Sapka[playerid] = 1;
										switch(Sapka[playerid])
										{
										    case 1:    cap = 18926;
											case 2..9: cap = 18926 + Sapka[playerid];
										}
										new Float:AB, Float:CD, Float:EF;
				       					GetPlayerPos(playerid, AB,CD,EF);
										SetPlayerCameraPos(playerid, AB+3, CD, EF);
										SetPlayerCameraLookAt(playerid, AB, CD, EF);
										SetPlayerFacingAngle(playerid, 270.0);
										TogglePlayerControllable(playerid, 0);
										SetPlayerAttachedObject(playerid, 2, cap, 2, CapsSkinOffSet[skin][0], CapsSkinOffSet[skin][1], CapsSkinOffSet[skin][2], CapsSkinOffSet[skin][3], CapsSkinOffSet[skin][4], CapsSkinOffSet[skin][5]);
										return 1;
									}
								}
								if(listitem == 2)
								{
								    if(SapkaTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Þapka takerken, yeni rag alamazsýnýz.");
									    return 1;
									}
								    if(RagTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Rag takerken, yeni rag alamazsýnýz.");
									    return 1;
									}
								    if(GozlukTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Gözlük takerken, yeni rag alamazsýnýz.");
									    return 1;
									}
								    if(SigaraIciyor[playerid] == 1)
								    {
										HataMesajiGonder(playerid, "Elinizde bir þey bulunuyorken, yeni rag alamazsýnýz.");
									    return 1;
								    }
									new Float:AB, Float:CD, Float:EF;
			       					GetPlayerPos(playerid, AB,CD,EF);
									SetPlayerCameraPos(playerid, AB+3, CD, EF);
									SetPlayerCameraLookAt(playerid, AB, CD, EF);
									SetPlayerFacingAngle(playerid, 270.0);
									Rag[playerid] = 0;
									if(Rag[playerid] ==  0)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18911, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  1)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18912, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  2)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18913, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  3)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18914, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  4)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18915, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  5)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18916, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  6)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18917, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  7)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18918, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								   	if(Rag[playerid] ==  8)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18919, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
							   		if(Rag[playerid] ==  9)
								   	{
								   		SetPlayerAttachedObject(playerid, 3, 18920, 2, 0.08, 0.01, -0.005, 90, 170, 90);
								   	}
								    TogglePlayerControllable(playerid, 0);
								    BilgiMesajiGonder(playerid, "Almak istediðiniz ragý seçiniz.");
								}
								if(listitem == 3)
								{
								    if(SapkaTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Þapka takerken, yeni gözlük alamazsýnýz.");
									    return 1;
									}
								    if(RagTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Rag takerken, yeni gözlük alamazsýnýz.");
									    return 1;
									}
								    if(GozlukTakti[playerid] == 1)
									{
									    HataMesajiGonder(playerid, "Gözlük takerken, yeni gözlük alamazsýnýz.");
									    return 1;
									}
								    if(SigaraIciyor[playerid] == 1)
								    {
										HataMesajiGonder(playerid, "Elinizde bir þey bulunuyorken, yeni gözlük alamazsýnýz.");
									    return 1;
								    }
									new Float:AB, Float:CD, Float:EF;
			       					GetPlayerPos(playerid, AB,CD,EF);
									SetPlayerCameraPos(playerid, AB+3, CD, EF);
									SetPlayerCameraLookAt(playerid, AB, CD, EF);
									SetPlayerFacingAngle(playerid, 270.0);
								    new skin = GetPlayerSkin(playerid);
								    Gozluk[playerid] = 1;
									new glasseid = 19006 + (Gozluk[playerid] - 1);
									SetPlayerAttachedObject(playerid, 4, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
								    TogglePlayerControllable(playerid, 0);
								    BilgiMesajiGonder(playerid, "Almak istediðiniz gözlüðü seçiniz.");
								}
							}
							else
							{
								HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
				}
			}
		}
	}
	if(dialogid == 60)
	{
	    if(!response) { HataMesajiGonder(playerid, "Kayýt olmadan sunucuya giriþ yapamazsýnýz."); return Kick(playerid); }
	    else if(response)
	    {
			ShowPlayerDialog(playerid,61,DIALOG_STYLE_PASSWORD,"Kayýt","Lütfen karakterinizin güvenliði için bir parola girin.","Devam","");
			new yazi[128];
			format(yazi, sizeof(yazi), "%s isimli kiþi þuanda kayýt oluyor.", GetPlayerNameEx(playerid));
			YoneticiMesajiGonder(yazi);
			return 1;
		}
	}

	if(dialogid == 61)
	{
	    if(!response) { HataMesajiGonder(playerid, "Kayýt olmadan sunucuya giriþ yapamazsýnýz."); return Kick(playerid); }
	    else if(response)
	    {
	        if(strlen(inputtext) < 3 || strlen(inputtext) > 18)
	        {
	            HataMesajiGonder(playerid, "Karakteriniz parolasý 3'den küçük, 18'den büyük olamaz.");
	            ShowPlayerDialog(playerid,61,DIALOG_STYLE_PASSWORD,"Kayýt","Lütfen karakterinizin güvenliði için bir parola girin.","Devam","");
				return 1;
			}
			new isim[35];
			GetPlayerName(playerid, isim, 35);
			new ekle[512];
			format(ekle,512,"INSERT INTO `oyuncular` (`ad`,`sifre`) VALUES ('%s','%s')",isim,inputtext);
			mysql_query(ekle);
   			new yazi2[500];
			format(yazi2,sizeof(yazi2),"INSERT INTO `osilah` (`ad`) VALUES ('%s')",GetPlayerNameSave(playerid), inputtext);
			mysql_query(yazi2);
			format(yazi2,sizeof(yazi2),"INSERT INTO `ssayi` (`ad`) VALUES ('%s')",GetPlayerNameSave(playerid));
			mysql_query(yazi2);
			new yazi[1204];
			format(yazi,1204,"Karakteriniz sunucu veri tabanýnda oluþturuldu.\nKayýt iþlemine devam etmek için þifrenizi girmeniz gerekiyor.\nLütfen þifrenizi girin.");
            BilgiMesajiGonder(playerid, "Baþarýyla kayýt oldunuz, devam etmek için giriþ yapmanýz gerekiyor.");
			ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Sunucuya giriþ",yazi,"Giriþ yap","Çýkýþ");
			return 1;
		}
	}

	if(dialogid == 62)
	{
	    if(!response) { HataMesajiGonder(playerid, "Kayýt olmadan sunucuya giriþ yapamazsýnýz."); return Kick(playerid); }
	    else if(response)
	    {
	        if(listitem == 0)
			{
			    PlayerInfo[playerid][pSex] = 1;
			    BilgiMesajiGonder(playerid,"Karakterinizin cinsiyeti erkek olarak ayarlandý.");
			    ShowPlayerDialog(playerid, 63, DIALOG_STYLE_INPUT, "Yaþ","Karakterinizin yaþýný girin.","Devam","");
			}
			else if(listitem == 1)
			{
			    PlayerInfo[playerid][pSex] = 2;
			    BilgiMesajiGonder(playerid,"Karakterinizin cinsiyeti kadýn olarak ayarlandý.");
			    ShowPlayerDialog(playerid, 63, DIALOG_STYLE_INPUT, "Yaþ","Karakterinizin yaþýný girin.","Devam","");
			}
			return 1;
		}
	}

	if(dialogid == 63)
	{
	    if(!response) { HataMesajiGonder(playerid, "Kayýt olmadan sunucuya giriþ yapamazsýnýz."); return Kick(playerid); }
	    else if(response)
	    {
	        new yas = strval(inputtext);
	        if(yas >= 18 && yas <= 75)
	        {
	        	PlayerInfo[playerid][pAge] = strval(inputtext);
	        	new yazi[256];
	        	format(yazi,256,"Karakterinizin yaþý %d olarak ayarlandý.",strval(inputtext));
	        	BilgiMesajiGonder(playerid, yazi);
	        	ShowPlayerDialog(playerid, 64, DIALOG_STYLE_INPUT, "Doðum Yeri","Karakterinizin doðum yerini girin.","Devam","");
	        	return 1;
	        }
	        else
	        {
	            HataMesajiGonder(playerid, "Karakterinizin yaþý en az 18, en fazla 75 olabilir.");
	            ShowPlayerDialog(playerid, 63, DIALOG_STYLE_INPUT, "Yaþ","Karakterinizin yaþýný girin.","Devam","");
	            return 1;
	        }
		}
	}


	if(dialogid == 64)
	{
	    if(!response) { HataMesajiGonder(playerid, "Kayýt olmadan sunucuya giriþ yapamazsýnýz."); return Kick(playerid); }
	    else if(response)
	    {
	        if(strlen(inputtext) == 0 || strlen(inputtext) < 3 || strlen(inputtext) > 22)
	        {
	            	ShowPlayerDialog(playerid, 64, DIALOG_STYLE_INPUT, "Doðum Yeri","Karakterinizin doðum yerini girin.","Devam","");
	            	HataMesajiGonder(playerid, "Doðum yeriniz en az 3, en fazla 22 karakter olabilir.");
	            	return 1;
	        }
	        else
	        {
	            strmid(PlayerInfo[playerid][pDogumYeri], (inputtext), 0, strlen((inputtext)), 50);
	            new yazi[256];
	            format(yazi,sizeof(yazi),"Karakterinizin doðum yeri %s olarak ayarlandý.",inputtext);
	            BilgiMesajiGonder(playerid, yazi);
	            ShowPlayerDialog(playerid, 65, DIALOG_STYLE_LIST, "Ten Rengi","Açýk Tenli\nKoyu Tenli","Devam","");
				return 1;
			}
		}
	}

	if(dialogid == 65)
	{
	    if(!response) { HataMesajiGonder(playerid, "Kayýt olmadan sunucuya giriþ yapamazsýnýz."); return Kick(playerid); }
	    else if(response)
	    {
	        PlayerInfo[playerid][pTenRengi] = listitem+1;
			new tyazi[25];
			if(PlayerInfo[playerid][pTenRengi] == 1)
			{
			    tyazi = "açýk tenli";
			}
			else
			{
				tyazi = "koyu tenli";
			}
			new yazi[256];
			format(yazi,sizeof(yazi),"Karakterinizin ten rengi %s olarak ayarlandý.",tyazi);
			BilgiMesajiGonder(playerid, yazi);
			TogglePlayerControllable(playerid, false);
			BilgiMesajiGonder(playerid,"Kayýt iþleminiz tamamlandý, oyuna baþlýyorsunuz..");
	        SetTimerEx("KayitBitiyor",2500,false,"i",playerid);
			return 1;
		}
	}

	if(dialogid == 401)
	{
		if(response)
		{
			if(listitem == 0) { ShowPlayerDialog(playerid, 402, DIALOG_STYLE_LIST, "Renk 1","Siyah\nBeyaz\nKýrmýzý\nMavi\nSarý\nMor\nPembe\nYeþil\nAltýn Rengi\nKoyu Kýrmýzý\nKoyu Mavi\nKoyu Sarý\nKoyu Mor\nKoyu Pembe", "Seç", "Geri"); }
			if(listitem == 1) { ShowPlayerDialog(playerid, 403, DIALOG_STYLE_LIST, "Renk 1","Siyah\nBeyaz\nKýrmýzý\nMavi\nSarý\nMor\nPembe\nYeþil\nAltýn Rengi\nKoyu Kýrmýzý\nKoyu Mavi\nKoyu Sarý\nKoyu Mor\nKoyu Pembe", "Seç", "Geri"); }
			if(listitem == 2) { ShowPlayerDialog(playerid, 404, DIALOG_STYLE_LIST, "Paintjob","Paintjob 1\nPaintjob 2\nPaintjob 3", "Seç", "Geri"); }
   			if(listitem == 3) { ShowPlayerDialog(playerid, 405, DIALOG_STYLE_LIST, "Rüzgarlýklar","Alien Rüzgarlýk\nX-Flow Rüzgarlýk", "Seç", "Geri"); }
			if(listitem == 4) { ShowPlayerDialog(playerid, 406, DIALOG_STYLE_LIST, "Çatýlýklar","Alien Çatýlýk\nX-Flow Çatýlýk\nCovertible Çatýlýk [Blade]\nVinyl Hardtop Çatýlýk [Blade]\nHardtop Çatýlýk [Savanna]\nSofttop Çatýlýk [Savanna]", "Seç", "Geri"); }
			if(listitem == 5) { ShowPlayerDialog(playerid, 407, DIALOG_STYLE_LIST, "Yan Tamponlar","Alien Yan Tampon\nX-Flow Yan Tampon\nChrome Yan Tampon [Broadway]\nChrome Flames Yan Tampon [Remington]\nChrome Arches Yan Tampon [Remington]\nChrome Strip Yan Tampon [Savanna & Blade & Tornado]\nChrome Trim Yan Tampon [Slamvan]\nWheelcovers Yan Tampon [Slamvan]", "Seç", "Geri"); }
			if(listitem == 6) { ShowPlayerDialog(playerid, 408, DIALOG_STYLE_LIST, "Egzozlar","Alien Egsoz\nX-Flow Egsoz\nSlamin Egsoz\nChrome Egsoz", "Seç", "Geri"); }
			if(listitem == 7) { ShowPlayerDialog(playerid, 409, DIALOG_STYLE_LIST, "Jantlar","Offroad\nShadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces", "Seç", "Geri"); }
			if(listitem == 8) { ShowPlayerDialog(playerid, 410, DIALOG_STYLE_LIST, "Ön Tamponlar","Alien Ön Tampon\nX-Flow Ön Tampon\nChrome Ön Tampon\nSlamin Ön Tampon", "Seç", "Geri"); }
			if(listitem == 9) { ShowPlayerDialog(playerid, 411, DIALOG_STYLE_LIST, "Arka Tamponlar","Alien Arka Tampon\nX-Flow Arka Tampon\nChrome Arka Tampon\nSlamin Arka Tampon", "Seç", "Geri"); }
			if(listitem == 10) { ShowPlayerDialog(playerid, 412, DIALOG_STYLE_LIST, "Diðer Sistemler","Alarm\nNeon\nSes Sistemi\nHidrolik Sistemi\nNitro Sistemi [2X]\nNitro Sistemi [5X]\nNitro Sistemi [10X]", "Seç", "Geri"); }
		}
		else
		{
		    ModifiyeArac[playerid] = 0;
		}
		return 1;
	}
	if(dialogid == 402)
	{
		if(response)
		{
  			if(listitem == 0) { Renk1BoyaYap(playerid, 0, 250, 1, 50); }
  			if(listitem == 1) { Renk1BoyaYap(playerid, 1, 250, 1, 50); }
  			if(listitem == 2) { Renk1BoyaYap(playerid, 151, 250, 1, 50); }
  			if(listitem == 3) { Renk1BoyaYap(playerid, 7, 250, 1, 50); }
  			if(listitem == 4) { Renk1BoyaYap(playerid, 6, 250, 1, 50); }
  			if(listitem == 5) { Renk1BoyaYap(playerid, 185, 250, 1, 50); }
  			if(listitem == 6) { Renk1BoyaYap(playerid, 126, 250, 1, 50); }
  			if(listitem == 7) { Renk1BoyaYap(playerid, 86, 250, 1, 50); }
  			if(listitem == 8) { Renk1BoyaYap(playerid, 65, 250, 1, 50); }
  			if(listitem == 9) { Renk1BoyaYap(playerid, 117, 250, 1, 50); }
  			if(listitem == 10) { Renk1BoyaYap(playerid, 2, 250, 1, 50); }
  			if(listitem == 11) { Renk1BoyaYap(playerid, 77, 250, 1, 50); }
  			if(listitem == 12) { Renk1BoyaYap(playerid, 149, 250, 1, 50); }
		}
	}
	if(dialogid == 403)
	{
		if(response)
		{
  			if(listitem == 0) { Renk2BoyaYap(playerid, 0, 250, 2, 50); }
  			if(listitem == 1) { Renk2BoyaYap(playerid, 1, 250, 2, 50); }
  			if(listitem == 2) { Renk2BoyaYap(playerid, 151, 250, 2, 50); }
  			if(listitem == 3) { Renk2BoyaYap(playerid, 7, 250, 2, 50); }
  			if(listitem == 4) { Renk2BoyaYap(playerid, 6, 250, 2, 50); }
  			if(listitem == 5) { Renk2BoyaYap(playerid, 185, 250, 2, 50); }
  			if(listitem == 6) { Renk2BoyaYap(playerid, 126, 250, 2, 50); }
  			if(listitem == 7) { Renk2BoyaYap(playerid, 86, 250, 2, 50); }
  			if(listitem == 8) { Renk2BoyaYap(playerid, 65, 250, 2, 50); }
  			if(listitem == 9) { Renk2BoyaYap(playerid, 117, 250, 2, 50); }
  			if(listitem == 10) { Renk2BoyaYap(playerid, 2, 250, 2, 50); }
  			if(listitem == 11) { Renk2BoyaYap(playerid, 77, 250, 2, 50); }
  			if(listitem == 12) { Renk2BoyaYap(playerid, 149, 250, 2, 50); }
		}
	}
	if(dialogid == 404)
	{
		if(response)
		{
  			if(listitem == 0)
  			{
				if(GetVehicleModel(ModifiyeArac[playerid]) == 483 || GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 535 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 558 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 560
				|| GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
				{
					ModifiyeYap(playerid, 0, 500, 13, 100);
				}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu araca paintjob yapýlamaz.");
					return 1;
                }
  			}
  			if(listitem == 1)
  			{
				if(GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 535 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 558 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 560
				|| GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
				{
					ModifiyeYap(playerid, 1, 500, 13, 100);
				}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu araca paintjob yapýlamaz.");
					return 1;
                }
  			}
  			if(listitem == 2)
  			{
				if(GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 535 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 558 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 560
				|| GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
				{
					ModifiyeYap(playerid, 2, 500, 13, 100);
				}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu araca paintjob yapýlamaz.");
					return 1;
                }
  			}
		}
	}
	if(dialogid == 405)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1049, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1058, 1000, 3, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1138, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1147, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1162, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1164, 1000, 3, 120); }
                }
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 1)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1050, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1060, 1000, 3, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1139, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1146, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1158, 1000, 3, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1163, 1000, 3, 120); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
		}
		return 1;
	}
	if(dialogid == 406)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1054, 1000, 4, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1055, 1000, 4, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1032, 1000, 4, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1038, 1000, 4, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1067, 1000, 4, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1088, 1000, 4, 120); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 1)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1053, 1000, 4, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1061, 1000, 4, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1033, 1000, 4, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1035, 1000, 4, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1068, 1000, 4, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1091, 1000, 4, 120); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 2)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 536)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1103, 1000, 4, 120); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 3)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 536)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1128, 1000, 4, 120); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 4)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 567)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1130, 1000, 4, 120); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 5)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 567)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1131, 1000, 4, 120); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		}
		return 1;
	}
	if(dialogid == 407)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap2(playerid, 1051, 1047, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap2(playerid, 1062, 1056, 1500, 5, 240); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap2(playerid, 1027, 1026, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap2(playerid, 1040, 1036, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap2(playerid, 1071, 1069, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap2(playerid, 1094, 1090, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 1)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap2(playerid, 1048, 1052, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap2(playerid, 1063, 1057, 1500, 5, 240); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap2(playerid, 1030, 1031, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap2(playerid, 1039, 1041, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap2(playerid, 1072, 1070, 1500, 5, 240); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap2(playerid, 1093, 1095, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 2)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 575)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 575) { ModifiyeYap2(playerid, 1099, 1042, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 3)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 534)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap2(playerid, 1101, 1122, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 4)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 534)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap2(playerid, 1124, 1106, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 5)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap2(playerid, 1102, 1133, 1500, 5, 240); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap2(playerid, 1107, 1108, 1500, 5, 240); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 576) { ModifiyeYap2(playerid, 1137, 1134, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 6)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 535)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 535) { ModifiyeYap2(playerid, 1120, 1118, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 7)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 535)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 535) { ModifiyeYap2(playerid, 1121, 1119, 1500, 5, 240); }
            	}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		}
		return 1;
	}
	if(dialogid == 408)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1046, 800, 6, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1064, 800, 6, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1029, 800, 6, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1037, 800, 6, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1065, 800, 6, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1092, 800, 6, 120); }
				}
                else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 1)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
		            if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1045, 800, 6, 120); }
		            if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1059, 800, 6, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1033, 800, 6, 120); }
		            if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1035, 800, 6, 120); }
		            if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1066, 800, 6, 120); }
				    if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1089, 800, 6, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 2)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 535 || GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 575) { ModifiyeYap(playerid, 1043, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1105, 800, 6, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 535) { ModifiyeYap(playerid, 1114, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap(playerid, 1127, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1132, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 576) { ModifiyeYap(playerid, 1135, 800, 6, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 3)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 535 || GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 575) { ModifiyeYap(playerid, 1044, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1104, 800, 6, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 535) { ModifiyeYap(playerid, 1113, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap(playerid, 1126, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1129, 800, 6, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 576) { ModifiyeYap(playerid, 1136, 800, 6, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
		}
		return 1;
	}
	if(dialogid == 409)
	{
		if(response)
		{
   			if(listitem == 0)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1025, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 1)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1073, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 2)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1074, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 3)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1075, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 4)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1076, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 5)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1077, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 6)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1078, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 7)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1079, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 8)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1080, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 9)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1081, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 10)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1082, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 11)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1083, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 12)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1084, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 13)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1085, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 14)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1096, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 15)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1097, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
   			if(listitem == 16)
  			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
			  		ModifiyeYap(playerid, 1098, 500, 7, 120);
			  	}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
  			}
		}
	}
	if(dialogid == 410)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1153, 1000, 8, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1155, 1000, 8, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1169, 1000, 8, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1171, 1000, 8, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1160, 1000, 8, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1166, 1000, 8, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 1)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1152, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1157, 1000, 8, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1170, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1170, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1173, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1165, 1000, 8, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 2)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
			    {
					if(GetVehicleModel(ModifiyeArac[playerid]) == 575) { ModifiyeYap(playerid, 1174, 1000, 8, 120); }
	           	 	if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1182, 1000, 8, 120); }
	          		if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap(playerid, 1179, 1000, 8, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1189, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 576) { ModifiyeYap(playerid, 1191, 1000, 8, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 3)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 575) { ModifiyeYap(playerid, 1175, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1181, 1000, 8, 120); }
	           	 	if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap(playerid, 1185, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1188, 1000, 8, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 576) { ModifiyeYap(playerid, 1190, 1000, 8, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
		}
		return 1;
	}
	if(dialogid == 411)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1150, 1000, 9, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1154, 1000, 9, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1141, 1000, 9, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1149, 1000, 9, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1159, 1000, 9, 120); }
            		if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1168, 1000, 9, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 1)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 565 || GetVehicleModel(ModifiyeArac[playerid]) == 561 || GetVehicleModel(ModifiyeArac[playerid]) == 560 || GetVehicleModel(ModifiyeArac[playerid]) == 562 || GetVehicleModel(ModifiyeArac[playerid]) == 559 || GetVehicleModel(ModifiyeArac[playerid]) == 558)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 565) { ModifiyeYap(playerid, 1151, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 561) { ModifiyeYap(playerid, 1156, 1000, 9, 120); }
					if(GetVehicleModel(ModifiyeArac[playerid]) == 560) { ModifiyeYap(playerid, 1140, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 562) { ModifiyeYap(playerid, 1148, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 559) { ModifiyeYap(playerid, 1161, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 558) { ModifiyeYap(playerid, 1167, 1000, 9, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 2)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 575) { ModifiyeYap(playerid, 1176, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1184, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap(playerid, 1180, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1187, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 576) { ModifiyeYap(playerid, 1192, 1000, 9, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
			if(listitem == 3)
			{
			    if(GetVehicleModel(ModifiyeArac[playerid]) == 575 || GetVehicleModel(ModifiyeArac[playerid]) == 536 || GetVehicleModel(ModifiyeArac[playerid]) == 534 || GetVehicleModel(ModifiyeArac[playerid]) == 567 || GetVehicleModel(ModifiyeArac[playerid]) == 576)
			    {
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 575) { ModifiyeYap(playerid, 1177, 1000, 9, 120); }
	           	 	if(GetVehicleModel(ModifiyeArac[playerid]) == 536) { ModifiyeYap(playerid, 1181, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 534) { ModifiyeYap(playerid, 1178, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 567) { ModifiyeYap(playerid, 1186, 1000, 9, 120); }
	            	if(GetVehicleModel(ModifiyeArac[playerid]) == 576) { ModifiyeYap(playerid, 1193, 1000, 9, 120); }
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
            }
		}
		return 1;
	}
	if(dialogid == 412)
	{
		if(response)
		{
   			if(listitem == 0)
			{
			    ModifiyeYap(playerid, 1, 500, 15, 60);
			}
			if(listitem == 1)
			{
			    ShowPlayerDialog(playerid, 413, DIALOG_STYLE_LIST, "Neon","Yeþil\nKýrmýzý\nSarý\nMavi\nPembe\nBeyaz", "Seç", "Geri");
			}
   			if(listitem == 2)
			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 1086, 500, 10, 60);
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 3)
			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 1087, 3000, 11, 240);
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 4)
			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 1009, 5000, 12, 120);
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 5)
			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 1008, 10000, 12, 240);
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
			if(listitem == 6)
			{
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 1010, 15000, 12, 360);
				}
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		}
	}
	if(dialogid == 413)
	{
		if(response)
		{
		    /*if(listitem == 0)
		    {
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 18649, 500, 14, 100);
		        }
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		    if(listitem == 1)
		    {
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 18647, 500, 14, 100);
                }
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		    if(listitem == 2)
		    {
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 18650, 500, 14, 100);
                }
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		    if(listitem == 3)
		    {
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
  					ModifiyeYap(playerid, 18648, 500, 14, 100);
                }
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		    if(listitem == 4)
		    {
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
 					ModifiyeYap(playerid, 18651, 500, 14, 100);
                }
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}
		    if(listitem == 5)
		    {
			    if(!ModifiyeEdilmeyecekArac(ModifiyeArac[playerid]))
			    {
					ModifiyeYap(playerid, 18652, 500, 14, 100);
                }
				else
                {
					ModifiyeArac[playerid] = 0;
					HataMesajiGonder(playerid, "Bu parça bu araca takýlamaz.");
					return 1;
                }
			}*/
		}
	}
	if(dialogid == 500)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
				DovmeDurum[playerid] = 1;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 1)
		    {
				DovmeDurum[playerid] = 2;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 2)
		    {
				DovmeDurum[playerid] = 3;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 3)
		    {
				DovmeDurum[playerid] = 4;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 4)
		    {
				DovmeDurum[playerid] = 5;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 5)
		    {
				DovmeDurum[playerid] = 6;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 6)
		    {
				DovmeDurum[playerid] = 7;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 7)
		    {
				DovmeDurum[playerid] = 8;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 8)
		    {
				DovmeDurum[playerid] = 9;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 9)
		    {
				DovmeDurum[playerid] = 10;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 10)
		    {
				DovmeDurum[playerid] = 11;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 11)
		    {
				DovmeDurum[playerid] = 12;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		    if(listitem == 12)
		    {
				DovmeDurum[playerid] = 13;
				ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
		    }
		}
	}
	if(dialogid == 501)
	{
		if(response)
		{
	  		for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == i)
	   				{
				    	if(Businesses[i][BizType] == 8)
			    		{
		        			if(Businesses[i][Products] != 0)
		        			{
								if(listitem == 0)
							    {
							        DovmecininID[playerid] = i;
							        ShowPlayerDialog(playerid, 506,DIALOG_STYLE_INPUT,"Dövmeci","Yazdýrmak istediðiniz dövmeyi giriniz: (Harf baþýna 500$)","Tamam","Kapat");
							    }
							    if(listitem == 1)
							    {
									if(GetPlayerCash(playerid) < 150)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -150);
									Businesses[i][Products]--;
									Businesses[i][Till] += 150;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurukafa");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 2)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Karga");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 3)
							    {
									if(GetPlayerCash(playerid) < 140)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -140);
									Businesses[i][Products]--;
									Businesses[i][Till] += 140;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Siyah kedi");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 4)
							    {
									if(GetPlayerCash(playerid) < 130)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -130);
									Businesses[i][Products]--;
									Businesses[i][Till] += 130;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Deniz kýzý");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 5)
							    {
									if(GetPlayerCash(playerid) < 350)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -350);
									Businesses[i][Products]--;
									Businesses[i][Till] += 350;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ejderha");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 6)
							    {
									if(GetPlayerCash(playerid) < 100)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -100);
									Businesses[i][Products]--;
									Businesses[i][Till] += 100;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Zar");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 7)
							    {
									if(GetPlayerCash(playerid) < 180)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -180);
									Businesses[i][Products]--;
									Businesses[i][Till] += 180;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Beyaz kanat");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 8)
							    {
									if(GetPlayerCash(playerid) < 180)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -180);
									Businesses[i][Products]--;
									Businesses[i][Till] += 180;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Erotik hatun");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
								if(listitem == 9)
								{
	ShowPlayerDialog(playerid, 502,DIALOG_STYLE_LIST,"Dövmeci","Kartal || Fiyat: {3BDA00}$145\nAkrep || Fiyat: {3BDA00}$125\nGöz || Fiyat: {3BDA00}$120\nMarihuana || Fiyat: {3BDA00}$120\nKýzýldereli || Fiyat: {3BDA00}$125\nJoker || Fiyat: {3BDA00}$140\nYarasa || Fiyat: {3BDA00}$140\nKurt || Fiyat: {3BDA00}$120\nAslan aðzý || Fiyat: {3BDA00}$140\nYunus || Fiyat: {3BDA00}$170\nÖrümcek || Fiyat: {3BDA00}$120\nDiðer sayfa","Tamam","Kapat");
								}
							}
							else
							{
							    HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
				}
			}
		}
	}
	if(dialogid == 502)
	{
		if(response)
		{
	  		for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == i)
	   				{
				    	if(Businesses[i][BizType] == 8)
			    		{
		        			if(Businesses[i][Products] != 0)
		        			{
							    if(listitem == 0)
							    {
									if(GetPlayerCash(playerid) < 145)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -145);
									Businesses[i][Products]--;
									Businesses[i][Till] += 145;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kartal");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 1)
							    {
									if(GetPlayerCash(playerid) < 125)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -125);
									Businesses[i][Products]--;
									Businesses[i][Till] += 125;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Akrep");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 2)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Göz");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 3)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Marihuana");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 4)
							    {
									if(GetPlayerCash(playerid) < 125)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -125);
									Businesses[i][Products]--;
									Businesses[i][Till] += 125;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kýzýldereli");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 5)
							    {
									if(GetPlayerCash(playerid) < 140)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -140);
									Businesses[i][Products]--;
									Businesses[i][Till] += 140;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Joker");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 6)
							    {
									if(GetPlayerCash(playerid) < 140)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -140);
									Businesses[i][Products]--;
									Businesses[i][Till] += 140;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yarasa");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 7)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kurt");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 8)
							    {
									if(GetPlayerCash(playerid) < 140)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -140);
									Businesses[i][Products]--;
									Businesses[i][Till] += 140;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Aslan aðzý");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 9)
							    {
									if(GetPlayerCash(playerid) < 170)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 170;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yunus");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 10)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örümcek");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 11)
							    {
	ShowPlayerDialog(playerid, 503,DIALOG_STYLE_LIST,"Dövmeci","Koi balýðý || Fiyat: {3BDA00}$200\nJaponca isim || Fiyat: {3BDA00}$110\nHac || Fiyat: {3BDA00}$80\nYýldýz || Fiyat: {3BDA00}$90\nGül || Fiyat: {3BDA00}$70\nÖrgü || Fiyat: {3BDA00}$120\nYýlan || Fiyat: {3BDA00}$170\nKelebek || Fiyat: {3BDA00}$100\nAhtapot || Fiyat: {3BDA00}$280\nPanter || Fiyat: {3BDA00}$170\nKöpek balýðý || Fiyat: {3BDA00}$120\nDiðer sayfa","Tamam","Kapat");
								}
							}
							else
							{
							    HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
				}
			}
		}
	}
	if(dialogid == 503)
	{
		if(response)
		{
	  		for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == i)
	   				{
				    	if(Businesses[i][BizType] == 8)
			    		{
		        			if(Businesses[i][Products] != 0)
		        			{
							    if(listitem == 0)
							    {
									if(GetPlayerCash(playerid) < 200)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -200);
									Businesses[i][Products]--;
									Businesses[i][Till] += 200;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Koi balýðý");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 1)
							    {
									if(GetPlayerCash(playerid) < 110)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -110);
									Businesses[i][Products]--;
									Businesses[i][Till] += 110;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Japonca isim");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 2)
							    {
									if(GetPlayerCash(playerid) < 80)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -80);
									Businesses[i][Products]--;
									Businesses[i][Till] += 80;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hac");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 3)
							    {
									if(GetPlayerCash(playerid) < 90)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -90);
									Businesses[i][Products]--;
									Businesses[i][Till] += 90;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýldýz");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 4)
							    {
									if(GetPlayerCash(playerid) < 70)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -70);
									Businesses[i][Products]--;
									Businesses[i][Till] += 70;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Gül");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 5)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Örgü");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 6)
							    {
									if(GetPlayerCash(playerid) < 170)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -170);
									Businesses[i][Products]--;
									Businesses[i][Till] += 170;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Yýlan");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 7)
							    {
									if(GetPlayerCash(playerid) < 100)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -100);
									Businesses[i][Products]--;
									Businesses[i][Till] += 100;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kelebek");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 8)
							    {
									if(GetPlayerCash(playerid) < 280)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -280);
									Businesses[i][Products]--;
									Businesses[i][Till] += 280;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ahtapot");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 9)
							    {
									if(GetPlayerCash(playerid) < 170)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -170);
									Businesses[i][Products]--;
									Businesses[i][Till] += 170;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Panter");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 10)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Köpek balýðý");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 11)
							    {
		ShowPlayerDialog(playerid, 504,DIALOG_STYLE_LIST,"Dövmeci","Anka kuþu || Fiyat: {3BDA00}$450\nYing yang || Fiyat: {3BDA00}$250\nLotus || Fiyat: {3BDA00}$120\nGüneþ || Fiyat: {3BDA00}$145\nBaykuþ || Fiyat: {3BDA00}$185\nKaplumbapa || Fiyat: {3BDA00}$150\nNotalar || Fiyat: {3BDA00}$85\nMikrofon || Fiyat: {3BDA00}$140\nDikenli tel || Fiyat: {3BDA00}$115\nKalp || Fiyat: {3BDA00}$105\nSamurai || Fiyat: {3BDA00}$200\nDiðer sayfa","Tamam","Kapat");
								}
							}
							else
							{
							    HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
				}
			}
		}
	}
	if(dialogid == 504)
	{
		if(response)
		{
	  		for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == i)
	   				{
				    	if(Businesses[i][BizType] == 8)
			    		{
		        			if(Businesses[i][Products] != 0)
		        			{
							    if(listitem == 0)
							    {
									if(GetPlayerCash(playerid) < 450)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -450);
									Businesses[i][Products]--;
									Businesses[i][Till] += 450;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anka kuþu");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 1)
							    {
									if(GetPlayerCash(playerid) < 250)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -250);
									Businesses[i][Products]--;
									Businesses[i][Till] += 250;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ying yang");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 2)
							    {
									if(GetPlayerCash(playerid) < 120)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -120);
									Businesses[i][Products]--;
									Businesses[i][Till] += 120;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Lotus");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 3)
							    {
									if(GetPlayerCash(playerid) < 145)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -145);
									Businesses[i][Products]--;
									Businesses[i][Till] += 145;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güneþ");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 4)
							    {
									if(GetPlayerCash(playerid) < 185)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -185);
									Businesses[i][Products]--;
									Businesses[i][Till] += 185;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Baykuþ");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 5)
							    {
									if(GetPlayerCash(playerid) < 150)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -150);
									Businesses[i][Products]--;
									Businesses[i][Till] += 150;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kaplumbaða");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 6)
							    {
									if(GetPlayerCash(playerid) < 85)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -85);
									Businesses[i][Products]--;
									Businesses[i][Till] += 85;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Notalar");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 7)
							    {
									if(GetPlayerCash(playerid) < 140)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -140);
									Businesses[i][Products]--;
									Businesses[i][Till] += 140;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Mikrofon");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 8)
							    {
									if(GetPlayerCash(playerid) < 115)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -115);
									Businesses[i][Products]--;
									Businesses[i][Till] += 115;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Dikenli tel");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 9)
							    {
									if(GetPlayerCash(playerid) < 105)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -105);
									Businesses[i][Products]--;
									Businesses[i][Till] += 105;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Kalp");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 10)
							    {
									if(GetPlayerCash(playerid) < 205)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -205);
									Businesses[i][Products]--;
									Businesses[i][Till] += 205;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Samurai");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 11)
							    {
	ShowPlayerDialog(playerid, 505,DIALOG_STYLE_LIST,"Dövmeci","Ýskambil kaðýdý || Fiyat: {3BDA00}$95\nGüvercin || Fiyat: {3BDA00}$125\nÝguana || Fiyat: {3BDA00}$145\nHançer || Fiyat: {3BDA00}$115\nPentegram || Fiyat: {3BDA00}$145\nRus Kertenkelesi || Fiyat: {3BDA00}$450\nAnkh || Fiyat: {3BDA00}$180\nAnubis || Fiyat: {3BDA00}$180\nTribal || Fiyat: {3BDA00}$200\nFantasy || Fiyat: {3BDA00}$250\nPiton(Penis) || Fiyat: {3BDA00}$400\nBaþa git","Tamam","Kapat");
								}
							}
							else
							{
							    HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
				}
			}
		}
	}
	if(dialogid == 505)
	{
		if(response)
		{
	  		for(new i = 0; i < sizeof(Businesses); i++)
			{
				if (PlayerToPoint(25.0, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == i)
	   				{
				    	if(Businesses[i][BizType] == 8)
			    		{
		        			if(Businesses[i][Products] != 0)
		        			{
							    if(listitem == 0)
							    {
									if(GetPlayerCash(playerid) < 95)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -95);
									Businesses[i][Products]--;
									Businesses[i][Till] += 95;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýskambil kaðýdý");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 1)
							    {
									if(GetPlayerCash(playerid) < 125)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -125);
									Businesses[i][Products]--;
									Businesses[i][Till] += 125;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Güvercin");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 2)
							    {
									if(GetPlayerCash(playerid) < 145)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -145);
									Businesses[i][Products]--;
									Businesses[i][Till] += 145;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ýguana");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 3)
							    {
									if(GetPlayerCash(playerid) < 115)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -115);
									Businesses[i][Products]--;
									Businesses[i][Till] += 115;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Hançer");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 4)
							    {
									if(GetPlayerCash(playerid) < 145)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -145);
									Businesses[i][Products]--;
									Businesses[i][Till] += 145;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Pentegram");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 5)
							    {
									if(GetPlayerCash(playerid) < 450)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -450);
									Businesses[i][Products]--;
									Businesses[i][Till] += 450;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Rus Kertenkelesi");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 6)
							    {
									if(GetPlayerCash(playerid) < 180)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -180);
									Businesses[i][Products]--;
									Businesses[i][Till] += 180;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Ankh");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 7)
							    {
									if(GetPlayerCash(playerid) < 180)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -180);
									Businesses[i][Products]--;
									Businesses[i][Till] += 180;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Anubis");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 8)
							    {
									if(GetPlayerCash(playerid) < 200)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -200);
									Businesses[i][Products]--;
									Businesses[i][Till] += 200;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Tribal");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 9)
							    {
									if(GetPlayerCash(playerid) < 250)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -250);
									Businesses[i][Products]--;
									Businesses[i][Till] += 250;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Fantasy");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
							    if(listitem == 10)
							    {
									if(GetPlayerCash(playerid) < 400)
									{
						                HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
										return 1;
									}
									GivePlayerCash(playerid, -400);
									Businesses[i][Products]--;
									Businesses[i][Till] += 400;
							        if(DovmeDurum[playerid] == 1)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 2)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 3)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 4)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 5)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 6)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 7)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 8)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 9)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 10)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 11)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 12)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
							        if(DovmeDurum[playerid] == 13)
									{
									    new Dovme[256];
										format(Dovme, sizeof(Dovme), "Piton(Penis)");
										strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
										format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
										BilgiMesajiGonder(playerid, Dovme);
									}
								}
								if(listitem == 11)
								{
		ShowPlayerDialog(playerid, 501,DIALOG_STYLE_LIST,"Dövmeci","Özel Seçim || Fiyat: {3BDA00}500$[Harf baþý]\nKurukafa || Fiyat: {3BDA00}$150\nKarga || Fiyat: {3BDA00}$120\nSiyah Kedi || Fiyat: {3BDA00}$140\nDeniz kýzý || Fiyat: {3BDA00}$130\nEjderha || Fiyat: {3BDA00}$350\nZar || Fiyat: {3BDA00}$100\nBeyaz kanat || Fiyat: {3BDA00}$180\nErotik hatun || Fiyat: {3BDA00}$180\nDiðer sayfa","Tamam","Kapat");
								}
							}
							else
							{
							    HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
							}
						}
					}
				}
			}
		}
	}
	if(dialogid == 506)
	{
		if(response == 1)
		{
		   	if(Businesses[DovmecininID[playerid]][Products] != 0)
		   	{
		       	new harfsayisi = strlen(inputtext);
		       	if(harfsayisi > 12)
		       	{
		       	    HataMesajiGonder(playerid, "12 karakterden fazla yazamazsýnýz.");
		       	    return 1;
		       	}
				new para = harfsayisi*50;
				if(GetPlayerCash(playerid) < para)
				{
					HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
					return 1;
				}
				GivePlayerCash(playerid, -para);
				Businesses[DovmecininID[playerid]][Products]--;
				Businesses[DovmecininID[playerid]][Till] += para;
				if(DovmeDurum[playerid] == 1)
				{
					new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme1], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 2)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme2], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 3)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme3], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 4)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme4], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 5)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme5], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 6)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme6], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 7)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme7], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 8)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme8], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 9)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme9], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 10)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme10], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 11)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme11], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 12)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme12], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
				if(DovmeDurum[playerid] == 13)
				{
				    new Dovme[256];
					strmid(PlayerInfo[playerid][pDovme13], inputtext, 0, strlen(inputtext), 32);
					format(Dovme, sizeof(Dovme), "Dövme yaptýrdýnýz.");
					BilgiMesajiGonder(playerid, Dovme);
				}
			}
			else
			{
		 		HataMesajiGonder(playerid, "Ýþyerinin yeterli ürünü bulunmamaktadýr.");
			}
		}
	}
	if(dialogid == 510)
	{
	    if(response)
	    {
		    if(PlayerInfo[playerid][pFaction] == 255)
		    {
				new yazi[1204];
				format(yazi,1204,"Oluþum kurmak üzeresiniz!\nOrganizasyon isminizi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,511,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
			}
			else
			{
			    HataMesajiGonder(playerid, "Hata oluþtuðu için iþlem devam ettirilemiyor.");
			}
		}
	}
	if(dialogid == 511)
	{
	    if(response)
		{
		    new string[256];
		    if(PlayerInfo[playerid][pFaction] == 255)
		    {
		        if(strlen(inputtext) > 15)
		        {
		            HataMesajiGonder(playerid, "Oluþum isminiz 15 karakterden uzun olamaz.");
		            return 1;
		        }
		        if(GetPlayerCash(playerid) < 15000)
		        {
		            HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
		            return 1;
		        }
				new query[128];
				format(query, sizeof(query), "SELECT * FROM `factionlar` WHERE `fname` = '%s'", inputtext);
				mysql_query(query);
				mysql_store_result();
			 	if(mysql_num_rows() > 0)
				{
				    HataMesajiGonder(playerid, "Bu isimde bir oluþum bulunmaktadýr.");
				    return 1;
				}
				if(strfind( inputtext , "|" , true ) == -1 && strfind( inputtext , "_" , true ) == -1)
    			{
			        GivePlayerCash(playerid, -15000);
			        BilgiMesajiGonder(playerid, "Oluþum kurdunuz, ayar yapmak için: {86D060}/faction");
					new yazi[500];
					format(yazi,sizeof(yazi),"INSERT INTO `factionlar` (`fname`) VALUES ('%s')",inputtext);
					mysql_query(yazi);
					new Float:FX, Float:FY, Float:FZ;
					GetPlayerPos(playerid, FX, FY, FZ);
					format(query, sizeof(query), "SELECT * FROM `factionlar` WHERE `fUseSkins` = '0'");
					mysql_query(query);
					mysql_store_result();
					new factionid = mysql_num_rows();
					new rank;
					new gelenveri;
					format(query, sizeof(query), "SELECT `id` FROM `factionlar` WHERE `fname` = '%s'", inputtext);
					mysql_query(query);
					mysql_store_result();
					gelenveri = mysql_fetch_int();
					mysql_free_result();
					DynamicFactions[factionid][fSQLid] = gelenveri;
					format(string, sizeof(string), "%s",inputtext);
					strmid(DynamicFactions[factionid][fName], string, 0, strlen(string), 255);
					DynamicFactions[factionid][fX] = FX;
					DynamicFactions[factionid][fY] = FY;
					DynamicFactions[factionid][fZ] = FZ;
					DynamicFactions[factionid][fBank] = 0;
					rank = 1; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank1], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rutbe %d",rank); strmid(DynamicFactions[factionid][fRank2], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank3], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank4], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank5], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank6], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank7], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank8], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank9], string, 0, strlen(string), 255);
					rank ++; format(string, sizeof(string), "Rütbe %d",rank); strmid(DynamicFactions[factionid][fRank10], string, 0, strlen(string), 255);
					DynamicFactions[factionid][fType] = 0;
					DynamicFactions[factionid][fSkin1] = 0;
					DynamicFactions[factionid][fSkin2] = 0;
					DynamicFactions[factionid][fSkin3] = 0;
					DynamicFactions[factionid][fSkin4] = 0;
					DynamicFactions[factionid][fSkin5] = 0;
					DynamicFactions[factionid][fSkin6] = 0;
					DynamicFactions[factionid][fSkin7] = 0;
					DynamicFactions[factionid][fSkin8] = 0;
					DynamicFactions[factionid][fSkin9] = 0;
					DynamicFactions[factionid][fSkin10] = 0;
					DynamicFactions[factionid][fJoinRank] = 0;
					DynamicFactions[factionid][fUseSkins] = 0;
					DynamicFactions[factionid][fRankAmount] = 0;
					DynamicFactions[factionid][fUseColor] = 0;
					format(string, sizeof(string), "0xFFFFFFFF");
					strmid(DynamicFactions[factionid][fColor], string, 0, strlen(string), 255);
					PlayerInfo[playerid][pFaction] = factionid;
					PlayerInfo[playerid][pRank] = 1;
					PlayerInfo[playerid][pSpawn] = 1;
					FactionKaydet(factionid);
				}
				else
				{
    			    HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Hata oluþtuðu için iþlem devam ettirilemiyor.");
			}
		}
	}
	if(dialogid == 512)
	{
	    if(response)
	    {
	        new a[100];
	        new b[100];
	        new c[100];
	        new d[100];
	        new e[100];
	        new f[100];
	        new g[100];
	        new h[100];
	        new i[100];
	        new j[100];
	        format(a, sizeof(a), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank1]);
	        format(b, sizeof(b), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank2]);
	        format(c, sizeof(c), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank3]);
	        format(d, sizeof(d), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank4]);
	        format(e, sizeof(e), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank5]);
	        format(f, sizeof(f), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank6]);
	        format(g, sizeof(g), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank7]);
	        format(h, sizeof(h), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank8]);
	        format(i, sizeof(i), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank9]);
	        format(j, sizeof(j), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank10]);
	        if(listitem == 0)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum isminizi deðiþtirmek üzeresiniz!\nOrganizasyon ismini giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,513,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 1)
	        {
	            new string[1204];
				format(string, sizeof(string),"1: {86D060}%s\n2: {86D060}%s\n3: {86D060}%s\n4: {86D060}%s\n5: {86D060}%s\n6: {86D060}%s\n7: {86D060}%s\n8: {86D060}%s\n9: {86D060}%s\n10: {86D060}%s",a,b,c,d,e,f,g,h,i,j);
				ShowPlayerDialog(playerid, 514,DIALOG_STYLE_LIST,"Oluþum",string,"Seç","Kapat");
	        }
	        if(listitem == 2)
	        {
		        if(PlayerInfo[playerid][pRank] == 1)
		        {
		            new Float:YFX, Float:YFY, Float:YFZ;
		            GetPlayerPos(playerid, YFX, YFY, YFZ);
		            DynamicFactions[PlayerInfo[playerid][pFaction]][fX] = YFX;
		            DynamicFactions[PlayerInfo[playerid][pFaction]][fY] = YFY;
		            DynamicFactions[PlayerInfo[playerid][pFaction]][fZ] = YFZ;
		            BilgiMesajiGonder(playerid, "Oluþum spawn yeri bulunduðunuz yer olarak deðiþtirilmiþtir.");
		    	}
		    	else
		    	{
					HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
		    	}
	        }
	        if(listitem == 3)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum rütbe sayýsýný deðiþtirmek üzeresiniz!\nYeni rütbe sayýsýný giriniz:\n(( En fazla 10 ))");
				ShowPlayerDialog(playerid,525,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 4)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum giriþ rütbesini deðiþtiriyorsunuz.\nRütbeyi giriniz:\n(( En fazla 10 ))");
				ShowPlayerDialog(playerid,526,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 5)
	        {
	            if(DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] == 0)
	            {
					new string[256];
					format(string, sizeof(string),"Kýrmýzý\nTuruncu\nSarý\nKapalý Yeþil\nYeþil\nAçýk yeþil\nAçýk Mavi\nMavi\nKapalý Mavi\nMor");
					ShowPlayerDialog(playerid, 527,DIALOG_STYLE_LIST,"Navigasyon",string,"Seç","Kapat");
				}
				else
				{
					new string5[512];
					format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Oluþum renginizi kapatmak üzeresiniz!\nKapatmak istediðinize emin misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯");
		 			ShowPlayerDialog(playerid, 528,DIALOG_STYLE_MSGBOX,"Oluþum",string5,"Deaktif Et","Ýptal");
				}
			}
	        if(listitem == 6)
	        {
				new yazi[1204];
				format(yazi,1204,"Davet etmek istediðiniz kiþinin ID'sini giriniz:");
				ShowPlayerDialog(playerid,529,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 7)
	        {
				new yazi[1204];
				format(yazi,1204,"Rütbe vermek istediðiniz kiþinin ID'sini giriniz:");
				ShowPlayerDialog(playerid,530,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 8)
	        {
				new yazi[1204];
				format(yazi,1204,"Atmak istediðiniz kiþinin ID'sini giriniz:");
				ShowPlayerDialog(playerid,532,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 9)
	        {
				if(PlayerInfo[playerid][pRank] == 1)
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						new car = GetPlayerVehicleID(playerid);
				 	    if(DynamicCars[car][CarType] == 8 || DynamicCars[car][CarType] == 9)
				 	    {
				 	        HataMesajiGonder(playerid, "Kiralýk araçlarý organizasyona geçiremezsiniz.");
				 	        return 1;
				 	    }
						new sendername[128];
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(strcmp(sendername, DynamicCars[GetPlayerVehicleID(playerid)][CarOwner], true) == 0)
				 		{
				 		    DynamicCars[car][CarType] = 0;
							DynamicCars[car][FactionCar] = PlayerInfo[playerid][pFaction];
							strmid(DynamicCars[car][CarOwner], "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fName], strlen("%s"), DynamicFactions[PlayerInfo[playerid][pFaction]][fName]);
							BilgiMesajiGonder(playerid, "Aracý oluþum aracý yaptýnýz.");
						}
						else
						{
						    HataMesajiGonder(playerid, "Sizin olmayan bir aracý oluþum aracý yapamazsýnýz.");
						}
					}
		 			else
					{
						HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
					}
                }
                else
				{
				    HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
				}
     		}
	        if(listitem == 10)
	        {
				if(PlayerInfo[playerid][pRank] == 1)
				{
				    if(IsPlayerInAnyVehicle(playerid))
				    {
				        new AracID = GetPlayerVehicleID(playerid);
				        if(DynamicCars[AracID][FactionCar] != 255)
				        {
				            if(PlayerInfo[playerid][pFaction] == DynamicCars[AracID][FactionCar])
				            {
								new Float:x,Float:y,Float:z;
								new Float:ang;
								GetVehiclePos(AracID, x, y, z);
								GetVehicleZAngle(AracID, ang);
								DynamicCars[AracID][CarX] = x;
								DynamicCars[AracID][CarY] = y;
								DynamicCars[AracID][CarZ] = z;
								DynamicCars[AracID][CarAngle] = ang;
								DestroyVehicle(AracID);
								AracKaydetmeDurumu[AracID] = 0;
			     				CreateVehicle(DynamicCars[AracID][CarModel],DynamicCars[AracID][CarX],DynamicCars[AracID][CarY],DynamicCars[AracID][CarZ],DynamicCars[AracID][CarAngle],DynamicCars[AracID][CarColor1],DynamicCars[AracID][CarColor2], -1);
								SetVehicleHealth(AracID, DynamicCars[AracID][CarHealth]);
			                	UpdateVehicleDamageStatusEx(AracID, DynamicCars[AracID][Panels], DynamicCars[AracID][Doors], DynamicCars[AracID][Lights], DynamicCars[AracID][Tires]);
								AracKaydetmeDurumu[AracID] = 1;
								PutPlayerInVehicle(playerid,AracID,0);
			                    SetVehicleNumberPlate(AracID, DynamicCars[AracID][CarDescription]);
			                    SetVehicleParamsEx(AracID, MotorDurumu[AracID], IsikDurum[AracID], AlarmDurum[AracID], KapiDurum[AracID], KaputDurum[AracID], BagajDurum[AracID], ObjeDurum[AracID]);
								AraciModifiyeEt(AracID);
			                    AracKaydet(AracID);
								BilgiMesajiGonder(playerid, "Altýnýzdaki aracý olduðunuz yere park ettiniz.");
				            }
				            else
							{
							    HataMesajiGonder(playerid, "Bu araç sizin organizasyonunuzda deðil.");
							}
				        }
				        else
				        {
				        	HataMesajiGonder(playerid, "Bu araç herhangi bir oluþum aracý deðil.");
						}
					}
     				else
     				{
						HataMesajiGonder(playerid, "Herhangi bir aracýn içerisinde deðilsiniz.");
					}
				}
                else
				{
				    HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
				}
	        }
			if(listitem == 11)
	        {
	            new sayac = 0;
	            for(new ara; ara < MAX_VEHICLES; ara++)
	            {
	                if(DynamicCars[ara][FactionCar] == PlayerInfo[playerid][pFaction])
	                {
				 		if(IsVehicleOccupied(ara) == 0)
				   		{
     						SetVehicleToRespawn(ara);
							MotorDurumu[ara] = 0;
							SetVehicleParamsEx(ara, MotorDurumu[ara], IsikDurum[ara], AlarmDurum[ara], KapiDurum[ara], KaputDurum[ara], BagajDurum[ara], ObjeDurum[ara]);
	                    	sayac++;
	                    }
	                }
	            }
	            if(sayac == 0)
	            {
					HataMesajiGonder(playerid, "Organizasyonunuzda hiç boþ araç bulunmamaktadýr.");
				}
				if(sayac == 1)
				{
				    BilgiMesajiGonder(playerid, "Boþ oluþum aracýnýz spawn edilmiþtir.");
				}
				if(sayac > 1)
				{
				    BilgiMesajiGonder(playerid, "Boþ oluþum araçlarýnýz spawn edilmiþtir.");
				}
	        }
	        if(listitem == 12)
	        {
				if(PlayerInfo[playerid][pRank] == 1)
				{
				    new aracsayar;
				    new oyuncuismi[24];
				    GetPlayerName(playerid, oyuncuismi, 24);
				    BilgiMesajiGonder(playerid, "Araçlar üzerinize geçiriliyor...");
		            for(new ara; ara < MAX_VEHICLES; ara++)
		            {
		                if(DynamicCars[ara][FactionCar] == PlayerInfo[playerid][pFaction])
		                {
				 		    DynamicCars[ara][CarType] = 2;
							DynamicCars[ara][FactionCar] = 255;
							strmid(DynamicCars[ara][CarOwner], oyuncuismi, 0, strlen(oyuncuismi), 24);
							aracsayar++;
						}
	             	}
					new aracsayars[256];
					format(aracsayars, sizeof(aracsayars), "Toplam %d araç üzerinize geçirildi.", aracsayar);
					BilgiMesajiGonder(playerid, aracsayars);
					BilgiMesajiGonder(playerid, "Organizasyondakiler çýkartýlýyor...");
					for(new oyu; oyu < MAX_PLAYERS; oyu++)
					{
					    if(PlayerInfo[oyu][pFaction] == PlayerInfo[playerid][pFaction])
					    {
							BilgiMesajiGonder(playerid, "Lider organizasyonu kapattýðýndan, çýkartýldýnýz.");
							PlayerInfo[playerid][pFaction] = 255;
							PlayerInfo[playerid][pRank] = 0;
					    }
					}
					new query[128];
					format(query, sizeof(query), "UPDATE `oyuncular` SET `Faction` = '255' WHERE `Faction` = '%d'", PlayerInfo[playerid][pFaction]);
					mysql_query(query);
					BilgiMesajiGonder(playerid, "Organizasyondakiler çýkartýldý.");
				}
				else
				{
				    HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
				}
	        }
		}
 	}
	if(dialogid == 513)
	{
	    if(response)
	    {
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				new query[128];
				format(query, sizeof(query), "SELECT * FROM `factionlar` WHERE `fname` = '%s'", inputtext);
				mysql_query(query);
				mysql_store_result();
				if(mysql_num_rows() > 0)
				{
					HataMesajiGonder(playerid, "Bu isimde bir oluþum bulunmaktadýr.");
					return 1;
				}
		        if(strlen(inputtext) > 15)
		        {
		            HataMesajiGonder(playerid, "Oluþum isminiz 15 karakterden uzun olamaz.");
		            return 1;
		        }
				if(strfind( inputtext , "|" , true ) == -1 && strfind( inputtext , "_" , true ) == -1)
	    		{
					strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fName], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum isminizi deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
	    		}
		    	else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 514)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 1. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,515,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 1)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 2. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,516,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 2)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 3. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,517,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 3)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 4. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,518,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 4)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 5. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,519,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 5)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 6. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,520,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 6)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 7. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,521,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 7)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 8. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,522,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 8)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 9. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,523,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	        if(listitem == 9)
	        {
				new yazi[1204];
				format(yazi,1204,"Oluþum 10. rütbesini deðiþtiriyorsunuz.\nYeni rütbeyi giriniz:\n(( En fazla 15 karakter ))");
				ShowPlayerDialog(playerid,524,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
	        }
	    }
	}
	if(dialogid == 515)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank1], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 516)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank2], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 517)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank3], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 518)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank4], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 519)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank5], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 520)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank6], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 521)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank7], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 522)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank8], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 523)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank9], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 524)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strlen(inputtext) > 15)
				{
					HataMesajiGonder(playerid, "Oluþum rütbeniz 15 karakterden uzun olamaz.");
					return 1;
	    		}
				if(strfind( inputtext , "|" , true ) == -1)
		    	{
		 			strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fRank10], (inputtext), 0, strlen((inputtext)), 128);
					BilgiMesajiGonder(playerid, "Oluþum rütbesini deðiþtirdiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
		    	{
					HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter kullandýnýz.");
		    	}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 525)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
	            if(strval(inputtext) < 2 || strval(inputtext) > 10)
	            {
	                HataMesajiGonder(playerid, "Rütbe 2'den küçük, 10'dan büyük olamaz.");
	                return 1;
	            }
				DynamicFactions[PlayerInfo[playerid][pFaction]][fRankAmount] = strval(inputtext);
				FactionKaydet(PlayerInfo[playerid][pFaction]);
				BilgiMesajiGonder(playerid, "Rütbe sayýsýný ayarladýnýz.");
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 526)
	{
		if(response)
		{
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
	            if(strval(inputtext) < 2 || strval(inputtext) > 10)
	            {
	                HataMesajiGonder(playerid, "Rütbe 2'den küçük, 10'dan büyük olamaz.");
	                return 1;
	            }
				DynamicFactions[PlayerInfo[playerid][pFaction]][fJoinRank] = strval(inputtext);
				FactionKaydet(PlayerInfo[playerid][pFaction]);
				BilgiMesajiGonder(playerid, "Giriþ rütbesini ayarladýnýz.");
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
		}
	}
	if(dialogid == 527)
	{
	    if(response)
	    {
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				//Kýrmýzý\nTuruncu\nSarý\nKapalý Yeþil\nYeþil\nAçýk yeþil\nAçýk Mavi\nMavi\nKapalý Mavi\nMor
				if(listitem == 0)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("D40000"), 0, strlen(("D40000")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 1)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("E4A000"), 0, strlen(("E4A000")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 2)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("DAF200"), 0, strlen(("DAF200")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 3)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("018F33"), 0, strlen(("018F33")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 4)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("02CC49"), 0, strlen(("02CC49")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 5)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("00FF44"), 0, strlen(("00FF44")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 6)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("00D5FF"), 0, strlen(("00D5FF")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 7)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("029CBB"), 0, strlen(("029CBB")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 8)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("027B93"), 0, strlen(("027B93")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
				if(listitem == 9)
				{
				    strmid(DynamicFactions[PlayerInfo[playerid][pFaction]][fColor], ("A70091"), 0, strlen(("A70091")), 128);
				    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 1;
				    FactionKaydet(PlayerInfo[playerid][pFaction]);
				    BilgiMesajiGonder(playerid, "Faction rengini aktif ettiniz.");
				}
			}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
	    }
	}
	if(dialogid == 528)
	{
	    if(response)
	    {
	        if(PlayerInfo[playerid][pRank] == 1)
	        {
				if(strfind( inputtext , "|" , true ) == -1)
    			{
    			    DynamicFactions[PlayerInfo[playerid][pFaction]][fUseColor] = 0;
					BilgiMesajiGonder(playerid, "Oluþum rengini deaktif ettiniz.");
					FactionKaydet(PlayerInfo[playerid][pFaction]);
				}
				else
				{
				    HataMesajiGonder(playerid, "Ýzin verilmeyen bir karakter girdiniz.");
				}
	    	}
	    	else
	    	{
				HataMesajiGonder(playerid, "Bu özelliði sadece liderler kullanabilir.");
	    	}
	    }
	}
	if(dialogid == 529)
	{
	    if(response)
	    {
			new giveplayerid = SQLdenBul(strval(inputtext));
			if (PlayerInfo[playerid][pRank] == 1 && PlayerInfo[playerid][pFaction] != 255 || PlayerInfo[playerid][pRank] == 2 && PlayerInfo[playerid][pFaction] != 255)
			{
			    if(PlayerInfo[giveplayerid][pFaction] == 255)
			    {
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        new form[256];
					        new faction = PlayerInfo[playerid][pFaction];
							if(gPlayerLogged[giveplayerid])
							{
						        if(DynamicFactions[faction][fJoinRank] == 0)
						        {
						            HataMesajiGonder(playerid, "Organizasyonunuzun giriþ rütbesi ayarlanmamýþ.");
						        }
						        else
						        {
									FactionRequest[giveplayerid] = faction;
									FactionRequest2[giveplayerid] = playerid;
									format(form,sizeof(form),"%s adlý kiþi sizi, %s adlý organizasyona davet etti.",GetPlayerNameEx2(playerid, giveplayerid),DynamicFactions[faction][fName]);
									BilgiMesajiGonder(giveplayerid, form);
									format(form,sizeof(form),"%s adlý kiþiyi, %s adlý organizasyona davet ettiniz.",GetPlayerNameEx2(giveplayerid, playerid),DynamicFactions[faction][fName]);
									BilgiMesajiGonder(playerid, form);
				 	    			new string5[512];
									format(string5, sizeof(string5),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}%s isimli kiþi sizi\n%s adlý, organizasyona\ndavet ediyor, girmek ister misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", GetPlayerNameEx2(playerid, giveplayerid), DynamicFactions[PlayerInfo[playerid][pFaction]][fName]);
				  					ShowPlayerDialog(giveplayerid, 970,DIALOG_STYLE_MSGBOX,"Organizasyona giriþ",string5,"Kabul et","Reddet");
								}
								return 1;
							}
							else
							{
							    HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
							}
						}
					}
		 			else
					{
						HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
 				else
				{
					HataMesajiGonder(playerid, "Organizasyonda olan kiþileri davet edemezsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Oluþum lideri veya lider yardýmcýsý deðilsiniz.");
			}
	    }
	}
	if(dialogid == 530)
	{
	    if(response)
	    {
			new yazi[1204];
			format(yazi,1204,"Rütbe vermek istediðiniz kiþinin yeni rütbesini giriniz:");
			ShowPlayerDialog(playerid,531,DIALOG_STYLE_INPUT,"Oluþum",yazi,"Tamam","Ýptal");
			RutbeKisi[playerid] = strval(inputtext);
		}
	}
	if(dialogid == 531)
	{
	    if(response)
	    {
			new para1;
			new level;
			new string[256];
			para1 = SQLdenBul(RutbeKisi[playerid]);
			level = strval(inputtext);
			printf("%d", para1);
			if (PlayerInfo[playerid][pRank] == 1 && PlayerInfo[playerid][pFaction] != 255 || PlayerInfo[playerid][pRank] == 2 && PlayerInfo[playerid][pFaction] != 255)
			{
				if (PlayerInfo[para1][pFaction] == PlayerInfo[playerid][pFaction])
				{
					new faction = PlayerInfo[playerid][pFaction];
					if (level)
					{
		   				if(level > 1 && level <= DynamicFactions[faction][fRankAmount])
					    {
		  					if(IsPlayerConnected(para1))
			    			{
								if(gPlayerLogged[para1])
								{
									if(para1 != INVALID_PLAYER_ID)
									{
									    if(PlayerInfo[playerid][pRank] >= PlayerInfo[para1][pRank])
									    {
									        HataMesajiGonder(playerid, "Kendinize eþit veya yüksek birine rütbe veremezsiniz.");
									        return 1;
									    }
									    if(PlayerInfo[playerid][pRank] >= level)
									    {
									        HataMesajiGonder(playerid, "Kendinize eþit veya yüksek bir rütbe veremezsiniz.");
									        return 1;
									    }
									    new rutbe[128];
									    if(level == 1)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank1]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 2)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank2]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 3)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank3]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 4)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank4]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 5)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank5]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 6)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank6]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 7)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank7]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 8)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank8]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 9)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank9]);
									        rutbe = rutbeyazi;
									    }
									    if(level == 10)
									    {
									        new rutbeyazi[128];
									        format(rutbeyazi, sizeof(rutbeyazi), "%s", DynamicFactions[PlayerInfo[playerid][pFaction]][fRank10]);
									        rutbe = rutbeyazi;
									    }
										PlayerInfo[para1][pRank] = level;
										format(string, sizeof(string), "%s rütbenizi %s yaptý.", GetPlayerNameEx2(playerid, para1), rutbe);
										BilgiMesajiGonder(para1, string);
										format(string, sizeof(string), "%s adlý kiþinin rütbesini %s yaptýnýz.", GetPlayerNameEx2(para1, playerid), rutbe);
										BilgiMesajiGonder(playerid, string);
										SetPlayerToFactionSkin(para1);
									}
								}
								else
								{
									HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
								}
							}
							else
							{
								HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
							}
						}
						else
						{
							HataMesajiGonder(playerid, "Rütbe oluþum rütbeleri içerisinde olmalýdýr.");
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Rütbe numarasý girmek zorundasýnýz.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Sizin organizasyonunuzda olmayan birine rütbe veremezsiniz.");
				}
			}
			else
   			{
				HataMesajiGonder(playerid, "Oluþum lideri veya lider yardýmcýsý deðilsiniz.");
			}
	    }
	}
	if(dialogid == 532)
	{
	    if(response)
	    {
			new giveplayerid = SQLdenBul(strval(inputtext));
   			if (PlayerInfo[playerid][pRank] == 1 && PlayerInfo[playerid][pFaction] != 255 || PlayerInfo[playerid][pRank] == 2 && PlayerInfo[playerid][pFaction] != 255)
			{
			    if(PlayerInfo[giveplayerid][pFaction] == PlayerInfo[playerid][pFaction])
				{
					if(IsPlayerConnected(giveplayerid))
					{
     					if(gPlayerLogged[giveplayerid])
     					{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
								if(PlayerInfo[playerid][pRank] >= PlayerInfo[giveplayerid][pRank])
				    			{
			        				HataMesajiGonder(playerid, "Kendinize eþit veya yüksek birini atamazsýnýz.");
							        return 1;
							    }
						        new form[128];
						        new faction = PlayerInfo[playerid][pFaction];
								format(form,sizeof(form),"%s adlý oyuncu sizi %s adlý organizsyondan çýkarttý.",GetPlayerNameEx2(playerid, giveplayerid),DynamicFactions[faction][fName]);
								BilgiMesajiGonder(giveplayerid, form);
								format(form,sizeof(form),"%s adlý oyuncuyu %s adlý organizasyondan çýkarttýnýz.",GetPlayerNameEx2(giveplayerid, playerid),DynamicFactions[faction][fName]);
								BilgiMesajiGonder(playerid, form);
								PlayerInfo[giveplayerid][pFaction] = 255;
								PlayerInfo[giveplayerid][pRank] = 0;
								SetPlayerSpawn(giveplayerid);
								PlayerInfo[giveplayerid][pSpawn] = 4;
								return 1;
							}
						}
	      				else
						{
							HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
						}
					}
		 			else
					{
						HataMesajiGonder(playerid, "Hatalý ID girdiniz.");
					}
				}
 				else
				{
					HataMesajiGonder(playerid, "Sadece ayný organizasyonda olduðunuz kiþileri çýkartabilirsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Oluþum lideri veya lider yardýmcýsý deðilsiniz.");
			}
	    }
	}

	if(dialogid == 540)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 541, DIALOG_STYLE_INPUT, "Kiþi Sorgulat","Sorgulatmak istediðiniz kiþinin SQLID'sini girin.","Tamam","Iptal");
				return 1;
			}
	        if(listitem == 1)
			{
			    ShowPlayerDialog(playerid, 542, DIALOG_STYLE_INPUT, "Araç Sorgulat","Sorgulatmak istediðiniz aracýn plakasýný girin.","Tamam","Iptal");
				return 1;
			}
	    }
	}
	
	if(dialogid == 541)
	{
	    if(response)
	    {
			new id = strval(inputtext);
			if(SicilArat(id) == 1)
			{
			    new yazi[1028];
			    BilgiMesajiGonder(playerid,"Bu kiþiye ait suç bildirimi bulundu.");
			    format(yazi,sizeof(yazi),"{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n\n{F68F00}Ýsim/Soyisim: {E6E6E6}%s \n{F68F00}SQLID: {E6E6E6}%d \n{F68F00}Suç/Açýklama: {E6E6E6}%s \n{F68F00}Aranma Seviyesi: {E6E6E6}%d/5 \n\n{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",SicilBilgiSTR(id,"isim"),id,SicilBilgiSTR(id,"suc"),SicilBilgiINT(id,"seviye"));
			    ShowPlayerDialog(playerid, 544, DIALOG_STYLE_MSGBOX, "Sorgulama Bilgileri",yazi,"Kapat","");
	        }
	        else
	        {
			    ShowPlayerDialog(playerid, 544, DIALOG_STYLE_MSGBOX, "Sorgulama Bilgileri","{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n\n{E6E6E6}Bu kiþiye ait herhangi bir suç bildirimi yok.\n\n{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Kapat","");
			}
		}
	}
	
	if(dialogid == 542)
	{
	    if(response)
	    {
			if(AracSucArat(inputtext) == 1)
			{
			    new yazi[1028];
			    BilgiMesajiGonder(playerid,"Bu araca ait bildirim bulundu.");
			    format(yazi,sizeof(yazi),"{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n\n{F68F00}Model: {E6E6E6}%s\n{F68F00}Plaka: {E6E6E6}%s\n{F68F00}Suç/Açýklama: {E6E6E6}%s\n{F68F00}Aranma Seviyesi: {E6E6E6}%d/5\n\n{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",VehicleName[AracBilgiINT(inputtext,"model")],inputtext,AracBilgiSTR(inputtext,"suc"),AracBilgiINT(inputtext,"seviye"));
			    ShowPlayerDialog(playerid, 544, DIALOG_STYLE_MSGBOX, "Sorgulama Bilgileri",yazi,"Kapat","");
	        }
	        else
	        {
	            ShowPlayerDialog(playerid, 544, DIALOG_STYLE_MSGBOX, "Sorgulama Bilgileri","{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n\n{E6E6E6}Bu arac ait herhangi bir bildirim yok.\n\n{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Kapat","");
			}
		}
	}
	
	if(dialogid == 543)
	{
	    if(response)
	    {
				if(!PlakaKontrol(inputtext))
				{
					HataMesajiGonder(playerid, "Hatalý bir plaka girdiniz.");
					return 1;
				}
				if(AracSucArat(inputtext))
				{
				    HataMesajiGonder(playerid, "Bu araca ait bir bildirim bulunuyor.");
					return 1;
				}
				new islem[512];
				format(islem,sizeof(islem),"INSERT INTO `aracsorgu` (`model`,`plaka`,`suc`,`seviye`) VALUES ('%d','%s','%s','%d')",SQLModel(inputtext),inputtext,ABSuc[playerid],ABSeviye[playerid]);
				mysql_query(islem);
				format(islem,sizeof(islem),"(A)Bildirim Adý: %s[%s] - Açýklama: %s - Aranma Seviyesi: %d",VehicleName[AracBilgiINT(inputtext,"model")],inputtext,ABSuc[playerid],ABSeviye[playerid]);
				BilgiMesajiGonder(playerid,islem);
				ABSuc[playerid] = "";
				ABSeviye[playerid] = 0;
		}
	}
	
	if(dialogid == 545)
	{
	    if(response)
	    {
				if(!PlakaKontrol(inputtext))
				{
					HataMesajiGonder(playerid, "Hatalý bir plaka girdiniz.");
					return 1;
				}
				if(!AracSucArat(inputtext))
				{
				    HataMesajiGonder(playerid, "Bu araca ait bir bildirim bulunmuyor.");
					return 1;
				}
				new islem[512];
				format(islem,sizeof(islem),"DELETE FROM `aracsorgu` WHERE `plaka` = '%s'",inputtext);
				mysql_query(islem);
				BilgiMesajiGonder(playerid,"Bu araç bildirimi baþarýyla silindi.");
		}
	}
	/*
	if(dialogid == 550)
	{
	    if(response)
	    { */
	    
	if(dialogid == 600)
	{
	    if(response)
	    {
	        new yazi[300];
	        if(listitem == 0)
	        {
	            if(gPlayerLogged[Clicked[playerid]])
				{
	            	format(yazi,sizeof(yazi),"{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n\n{F68F00}Ýsim/Soyisim: {E6E6E6}%s \n{F68F00}SQLID: {E6E6E6}%d\n\n{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",GetPlayerNameEx(Clicked[playerid]),PlayerInfo[Clicked[playerid]][pSQLid]);
			    	ShowPlayerDialog(playerid, 544, DIALOG_STYLE_MSGBOX, "SQLID",yazi,"Kapat","");
				}
				else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 1)
			{
			    if(gPlayerLogged[Clicked[playerid]])
				{
					new id = Clicked[playerid];
					new Float:xX, Float:yY, Float:zZ;
					GetPlayerPos(id, xX,yY,zZ);
					SetPlayerPos(playerid,xX,yY+1,zZ+0.5);
					format(yazi,sizeof(yazi),"%s(%d) isimli kiþinin yanýna ýþýnlandýnýz.",GetPlayerNameEx(id),PlayerInfo[id][pSQLid]);
					BilgiMesajiGonder(playerid, yazi);
				}
				else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 2)
			{
			    if(gPlayerLogged[Clicked[playerid]])
				{
					new id = Clicked[playerid];
					new Float:xX, Float:yY, Float:zZ;
					GetPlayerPos(playerid, xX,yY,zZ);
					SetPlayerPos(id,xX,yY+1,zZ+0.5);
					format(yazi,sizeof(yazi),"%s(%d) isimli kiþiyi yanýnýza ýþýnladýnýz.",GetPlayerNameEx(id),PlayerInfo[id][pSQLid]);
					BilgiMesajiGonder(playerid, yazi);
				}
				else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 3)
			{
			    if(gPlayerLogged[Clicked[playerid]])
			    {
			        new id = Clicked[playerid];
			        format(BilgiYaziString, sizeof(BilgiYaziString), "Oyuncu Ýzleme >> Isim: %s | ID: %d | Para: %d$",GetPlayerNameEx(id),id,GetPlayerCash(id));
					BilgiMesajiGonder(playerid, BilgiYaziString);
			        StartSpectate(playerid, id);
			    }
			    else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 4)
			{
			    if(gPlayerLogged[Clicked[playerid]])
			    {
			        new string[256];
			        new id = Clicked[playerid];
			        ShowStats(playerid,id);
					format(string, 128, "%s, %s[%d] adlý oyuncunun karakter bilgilerini kontrol etti.",GetPlayerNameEx(playerid),GetPlayerNameEx(id),PlayerInfo[id][pSQLid]);
					YoneticiMesajiGonder(string);
			    }
			    else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
		}
		return 1;
	}
	
	if(dialogid == 601)
	{
	    if(response)
	    {
	        new yazi[300];
	        if(listitem == 0)
	        {
	            if(gPlayerLogged[Clicked[playerid]])
				{
	            	format(yazi,sizeof(yazi),"{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n\n{F68F00}Ýsim/Soyisim: {E6E6E6}%s \n{F68F00}SQLID: {E6E6E6}%d\n\n{383838}____________________________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",GetPlayerNameEx(Clicked[playerid]),PlayerInfo[Clicked[playerid]][pSQLid]);
			    	ShowPlayerDialog(playerid, 544, DIALOG_STYLE_MSGBOX, "SQLID",yazi,"Kapat","");
				}
				else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 1)
			{
			    if(gPlayerLogged[Clicked[playerid]])
				{
					new id = Clicked[playerid];
					new Float:xX, Float:yY, Float:zZ;
					GetPlayerPos(id, xX,yY,zZ);
					SetPlayerPos(playerid,xX,yY+1,zZ+0.5);
					format(yazi,sizeof(yazi),"%s(%d) isimli kiþinin yanýna ýþýnlandýnýz.",GetPlayerNameEx(id),PlayerInfo[id][pSQLid]);
					BilgiMesajiGonder(playerid, yazi);
				}
				else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 2)
			{
			    if(gPlayerLogged[Clicked[playerid]])
				{
					new id = Clicked[playerid];
					new Float:xX, Float:yY, Float:zZ;
					GetPlayerPos(playerid, xX,yY,zZ);
					SetPlayerPos(id,xX,yY+1,zZ+0.5);
					format(yazi,sizeof(yazi),"%s(%d) isimli kiþiyi yanýnýza ýþýnladýnýz.",GetPlayerNameEx(id),PlayerInfo[id][pSQLid]);
					BilgiMesajiGonder(playerid, yazi);
				}
				else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 3)
			{
			    if(gPlayerLogged[Clicked[playerid]])
			    {
			        new id = Clicked[playerid];
			        format(BilgiYaziString, sizeof(BilgiYaziString), "Oyuncu Ýzleme >> Isim: %s | ID: %d | Para: %d$",GetPlayerNameEx(id),id,GetPlayerCash(id));
					BilgiMesajiGonder(playerid, BilgiYaziString);
			        StartSpectate(playerid, id);
			    }
			    else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 4)
			{
			    if(gPlayerLogged[Clicked[playerid]])
			    {
			        new string[256];
			        new id = Clicked[playerid];
			        ShowStats(playerid,id);
					format(string, 128, "%s, %s[%d] adlý oyuncunun karakter bilgilerini kontrol etti.",GetPlayerNameEx(playerid),GetPlayerNameEx(id),PlayerInfo[id][pSQLid]);
					YoneticiMesajiGonder(string);
			    }
			    else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 5)
			{
			    if(gPlayerLogged[Clicked[playerid]])
			    {
			        ShowPlayerDialog(playerid,602,DIALOG_STYLE_INPUT,"Skin Ver","Bu kiþiye vermek istediðiniz skin numarasýný girin.","Tamam","Iptal");
			        return 1;
			    }
			    else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
			if(listitem == 6)
			{
			    if(gPlayerLogged[Clicked[playerid]])
			    {
			        new string[256];
			        new id = Clicked[playerid];
			        SetPlayerSpawn(id);
					format(string, 128, "%s, %s[%d] adlý oyuncuyu spawn etti.",GetPlayerNameEx(playerid), GetPlayerNameEx(id), PlayerInfo[id][pSQLid]);
					YoneticiMesajiGonder(string);
					format(string, sizeof(string), "%s adlý oyuncuyu spawn ettiniz.", GetPlayerNameEx2(id, playerid));
					BilgiMesajiGonder(playerid, string);
					format(string, sizeof(string), "%s adlý yönetici sizi spawn eti.", GetPlayerNameEx2(playerid, id));
					BilgiMesajiGonder(id, string);
			    }
			    else
				{
				    HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
				    return 1;
				}
			}
		}
		return 1;
	}


	if(dialogid == 602)
	{
	    if(response)
	    {
	        new id = strval(inputtext);
	        if(id < 1 || id > 299)
	        {
	            HataMesajiGonder(playerid,"Vereceðiniz skin 1'den küçük, 299'dan büyük olamaz.");
	            return 1;
	        }
			if(gPlayerLogged[Clicked[playerid]])
   			{
   			    new string[256];
				new id1 = Clicked[playerid];
				SetPlayerSkin(id1, id);
				PlayerInfo[id1][pSkin] = id;
                format(string, 128, "%s, %s[%d] adlý oyuncunun skinini '%d' yaptý.",GetPlayerNameEx(playerid), GetPlayerNameEx(id1), PlayerInfo[id1][pSQLid], id);
				YoneticiMesajiGonder(string);
				format(string, sizeof(string), "%s adlý oyuncunun skini %d olarak ayarlandý.", GetPlayerNameEx2(id1, playerid), id);
				BilgiMesajiGonder(playerid, string);
				format(string, sizeof(string), "%s adlý yönetici skininizi %d olarak ayarladý.", GetPlayerNameEx2(playerid, id1), id);
				BilgiMesajiGonder(id1, string);
			}
   			else
			{
                HataMesajiGonder(playerid,"Bu kiþi sunucuda deðil.");
   				return 1;
			}
		}
	}
	
	if(dialogid == 680)
	{
		if(response == 1)
		{
			if(PlayerInfo[playerid][pOdaNumarasi] == 0)
			{
				new query[170];
			    new odanumarasi = random(99999);
				format(query, sizeof(query), "SELECT `OdaNumarasi` FROM `oyuncular` WHERE `OdaNumarasi` = '%d'", odanumarasi);
				mysql_query(query);
				mysql_store_result();
				if(odanumarasi == 0)
				{
				    HataMesajiGonder(playerid, "Oda kiralarken bir sorun çýktý, tekrar deneyiniz.");
				    return 1;
				}
				if(mysql_num_rows() == 0)
				{
					if(GetPlayerCash(playerid) >= 15)
					{
	                    new string[256];
					    PlayerInfo[playerid][pOdaNumarasi] = odanumarasi;
					    PlayerInfo[playerid][pOdaKilit] = 1;
						format(string, sizeof(string), "Oda kiraladýnýz, Oda numaranýz: %d",odanumarasi);
						BilgiMesajiGonder(playerid, string);
						BilgiMesajiGonder(playerid, "Otel masrafý olarak $15 ödediniz.");
						GivePlayerCash(playerid, -15);
					}
					else
					{
					    HataMesajiGonder(playerid, "Oda kiralamak için $15'nýz bulunmamaktadýr.");
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Oda kiralarken bir sorun çýktý, tekrar deneyiniz.");
				    return 1;
				}
			}
			else
			{
			    HataMesajiGonder(playerid, "Zaten daha önce bir oda kiralamýþsýnýz.");
			}
		}
	}
	if(dialogid == 681)
	{
		if(response == 1)
		{
			if(PlayerInfo[playerid][pOdaNumarasi] > 0)
			{
			    new string[256];
			    PlayerInfo[playerid][pOdaNumarasi] = 0;
			    PlayerInfo[playerid][pOdaKilit] = 1;
				format(string, sizeof(string), "Kiranýz iptal edilmiþtir.");
				BilgiMesajiGonder(playerid, string);
			}
			else
			{
			    HataMesajiGonder(playerid, "Zaten daha önce bir oda kiralamamýþsýnýz.");
			}
		}
	}
	if(dialogid == 682)
	{
		if(response == 1)
		{
		    if(listitem == 0)
		    {
				if(PlayerInfo[playerid][pOdaNumarasi] > 0)
				{
					SetPlayerInterior(playerid, 15);
					SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pOdaNumarasi]);
         			SetPlayerPos(playerid, 2284.4546,-1134.9675,1053.8984);
         			AsansorDurum[playerid] = 0;
         			Otelde[playerid] = 1;
				}
				else
				{
				    HataMesajiGonder(playerid, "Herhangi bir odanýn sahibi deðilsiniz.");
         			AsansorDurum[playerid] = 0;
				}
		    }
		    if(listitem == 1)
		    {
				if(PlayerInfo[playerid][pOdaNumarasi] > 0)
				{
					if(PlayerInfo[playerid][pOdaKilit] == 0)
					{
						BilgiMesajiGonder(playerid, "Odanýz kilitlendi.");
					    PlayerInfo[playerid][pOdaKilit] = 1;
         				AsansorDurum[playerid] = 0;
					}
					else
					{
						BilgiMesajiGonder(playerid, "Odanýzýn kilidi açýldý.");
						PlayerInfo[playerid][pOdaKilit] = 0;
         				AsansorDurum[playerid] = 0;
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Herhangi bir odanýn sahibi deðilsiniz.");
         			AsansorDurum[playerid] = 0;
				}
		    }
		    if(listitem == 2)
		    {
				new yazi[1204];
				format(yazi,1204,"Çýkmak istediðiniz odanýn numarasýný giriniz:");
				ShowPlayerDialog(playerid,683,DIALOG_STYLE_INPUT,"Otel",yazi,"Git","Kapat");
		    }
		}
		if(!response)
		{
            AsansorDurum[playerid] = 0;
		}
	}
	if(dialogid == 683)
	{
		if(response == 1)
		{
			if(PlayerInfo[playerid][pOdaNumarasi] == strval(inputtext))
			{
         		AsansorDurum[playerid] = 0;
				HataMesajiGonder(playerid, "Buradan kendi odanýza gidemezsiniz.");
				return 1;
			}
			new query[170];
			format(query, sizeof(query), "SELECT * FROM oyuncular WHERE OdaNumarasi = %d", strval(inputtext));
			mysql_query(query);
			mysql_store_result();
			if(mysql_num_rows() == 0)
			{
         		AsansorDurum[playerid] = 0;
			    HataMesajiGonder(playerid, "Hatalý oda ID girdiniz.");
			    return 1;
			}
			else
			{
				format(query, sizeof(query), "SELECT OdaKilit FROM oyuncular WHERE OdaNumarasi = %d", strval(inputtext));
				mysql_query(query);
				mysql_store_result();
				new kilit = mysql_fetch_int();
				mysql_free_result();
				if(kilit == 0)
				{
				    Otelde[playerid] = 1;
         			AsansorDurum[playerid] = 0;
					new string[256];
					SetPlayerInterior(playerid, 15);
					SetPlayerVirtualWorld(playerid, strval(inputtext));
					SetPlayerPos(playerid, 2284.4546,-1134.9675,1053.8984);
					format(string, sizeof(string), "%d numaralý odaya gittiniz.", strval(inputtext));
				}
				else
				{
         			AsansorDurum[playerid] = 0;
				    HataMesajiGonder(playerid, "Gitmek istediðiniz odanýn kapýsý kilitli.");
					return 1;
				}
			}
		}
		if(!response)
		{
            AsansorDurum[playerid] = 0;
		}
	}
	if(dialogid == 738)
	{
	    if(response == 1)
	    {
	        if(CKEdiyor[playerid] == 1)
	        {
			 	new first[MAX_PLAYER_NAME], last[MAX_PLAYER_NAME];
				if(RPName(inputtext,first,last))
				{
					new string[512];
					new oyuncuismi[MAX_PLAYER_NAME];
					GetPlayerName(CKEdecegiKisi[playerid], oyuncuismi, 24);
					format(string, sizeof(string), "UPDATE `oyuncular` SET `ad` = '%s' WHERE `ad` = '%s'", inputtext, oyuncuismi);
				    mysql_query(string);
					PlayerInfo[CKEdecegiKisi[playerid]][pCK] = 1;
					format(string, sizeof(string), "CK ettiðiniz oyuncunun ismini %s yaptýnýz.", inputtext);
					BilgiMesajiGonder(playerid, string);
					format(string, sizeof(string), "Sizi CK eden yönetici isminizi %s yaptý.", inputtext);
					BilgiMesajiGonder(CKEdecegiKisi[playerid], string);
					SetPlayerName(CKEdecegiKisi[playerid], inputtext);
					CKEdiyor[playerid] = 0;
					CKEdecegiKisi[playerid] = -1;
				}
	        }
	    }
	    if(!response)
	    {
			new yazi[1204];
	        format(yazi,1204,"%s isimli oyuncuyu ck ettiniz.\nKiþinin yeni karakter adýný giriniz:", GetPlayerNameEx(CKEdecegiKisi[playerid]));
			ShowPlayerDialog(playerid,738,DIALOG_STYLE_INPUT,"Karakter Ölümü",yazi,"Tamam","");
	    }
	}

	if(dialogid == 828)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini - olarak ayarladýnýz.");
	        }
	        if(listitem == 2)
	        {
				PlayerInfo[playerid][pItalyanca] = 5;
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini Ýtalyanca olarak ayarladýnýz.");
	        }
	        if(listitem == 3)
	        {
				PlayerInfo[playerid][pRusca] = 5;
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini Rusça olarak ayarladýnýz.");
	        }
	        if(listitem == 4)
	        {
				PlayerInfo[playerid][pFransizca] = 5;
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini Fransýzca olarak ayarladýnýz.");
	        }
	        if(listitem == 5)
	        {
				PlayerInfo[playerid][pIspanyolca] = 5;
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini Ýspanyolca olarak ayarladýnýz.");
	        }
	        if(listitem == 6)
	        {
				PlayerInfo[playerid][pIbranice] = 5;
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini Ýbranice olarak ayarladýnýz.");
	        }
	        if(listitem == 7)
	        {
				PlayerInfo[playerid][pCince] = 5;
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini Çince olarak ayarladýnýz.");
	        }
	        if(listitem == 8)
	        {
				PlayerInfo[playerid][pJaponca] = 5;
	            BilgiMesajiGonder(playerid, "Karakterinizin ek dilini Japonca olarak ayarladýnýz.");
	        }
	        BilgiMesajiGonder(playerid,"3 saniye içerisinde karakter ayarlarýnýz tamamlanýyor. Lütfen bekleyin.");
	        TogglePlayerControllable(playerid, false);
	    }
 	}
	if(dialogid == 850)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
			    GivePlayerWeaponEx(playerid, 41, 99999);
			}
			if(listitem == 1)
			{
			    GivePlayerWeaponEx(playerid, 3, 1);
			}
			if(listitem == 2)
			{
			    GivePlayerWeaponEx(playerid, 22, 100);
				SetPlayerAmmo(playerid, 22, 100);
			}
			if(listitem == 3)
			{
			    GivePlayerWeaponEx(playerid, 25, 50);
				SetPlayerAmmo(playerid, 25, 50);
			}
			if(listitem == 4)
			{
			    GivePlayerWeaponEx(playerid, 29, 250);
				SetPlayerAmmo(playerid, 29, 250);
			}
			if(listitem == 5)
			{
			    GivePlayerWeaponEx(playerid, 31, 250);
				SetPlayerAmmo(playerid, 31, 250);
			}
			if(listitem == 6)
			{
			    SetPlayerArmour(playerid, 100);
			}
		}
	}
	if(dialogid == 851)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
			    SetPlayerSkin(playerid, 266);
			    CopOnDutySkin[playerid] = 266;
			}
			if(listitem == 1)
			{
			    SetPlayerSkin(playerid, 280);
			    CopOnDutySkin[playerid] = 280;
			}
			if(listitem == 2)
			{
			    SetPlayerSkin(playerid, 281);
			    CopOnDutySkin[playerid] = 281;
			}
			if(listitem == 3)
			{
			    SetPlayerSkin(playerid, 282);
			    CopOnDutySkin[playerid] = 282;
			}
		}
	}
	if(dialogid == 852)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
			    SetPlayerSkin(playerid, 265);
			    CopOnDutySkin[playerid] = 265;
			}
			if(listitem == 1)
			{
			    SetPlayerSkin(playerid, 267);
			    CopOnDutySkin[playerid] = 267;
			}
			if(listitem == 2)
			{
			    SetPlayerSkin(playerid, 284);
			    CopOnDutySkin[playerid] = 284;
			}
		}
	}
	
	
	if(dialogid == 970)
	{
		new faction = FactionRequest[playerid];
		if (FactionRequest[playerid] != 255)
		{
			if(PlayerInfo[playerid][pFaction] == 255)
			{
			    new wstring[128];
		   		format(wstring, sizeof(wstring), "%s adlý organizasyona girdiniz.",DynamicFactions[faction][fName]);
			    BilgiMesajiGonder(playerid, wstring);
			    format(wstring, sizeof(wstring), "%s adlý oyuncu organizasyonunuza girdi.", GetPlayerNameEx2(playerid, FactionRequest2[playerid]));
			    BilgiMesajiGonder(FactionRequest2[playerid], wstring);
				PlayerInfo[playerid][pFaction] = FactionRequest[playerid];
				PlayerInfo[playerid][pRank] = DynamicFactions[faction][fJoinRank];
				FactionRequest[playerid] = 255;
				PlayerInfo[playerid][pSpawn] = 1;
				SetPlayerSpawn(playerid);
			}
			else
  		 	{
				HataMesajiGonder(playerid, "Þuan bir organizasyondasýnýz.");
			}
		}
		else
		{
  			HataMesajiGonder(playerid, "Size gelen bir istek bulunmuyor.");
		}
	}
	if(dialogid == 971)
	{
		if(PlayerInfo[playerid][pMedeniHal] != 0)
		{
			if(EvlenmeTeklifi[playerid] >= 0)
			{
	           	if(ProxDetectorS(10.0, playerid, EvlenmeTeklifi[playerid]))
				{
					new sendername[128];
					new giveplayer[128];
					new wstring[256];
					new string[256];
					GetPlayerName(playerid, sendername, sizeof(sendername));
			   		GetPlayerName(EvlenmeTeklifi[playerid], giveplayer, sizeof(giveplayer));
					PlayerInfo[playerid][pMedeniHal] = 1;
					PlayerInfo[EvlenmeTeklifi[playerid]][pMedeniHal] = 1;
			   		format(wstring, sizeof(wstring), "%s adlý kiþiyle evlendiniz.",GetPlayerNameEx2(playerid, EvlenmeTeklifi[playerid]));
					BilgiMesajiGonder(EvlenmeTeklifi[playerid], wstring);
			   		format(wstring, sizeof(wstring), "%s adlý kiþiyle evlendiniz.",GetPlayerNameEx2(EvlenmeTeklifi[playerid], playerid));
	  	 			BilgiMesajiGonder(playerid, wstring);
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[EvlenmeTeklifi[playerid]][pEvlendigiKisi], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pEvlendigiKisi], string, 0, strlen(string), 255);
					EvlenmeTeklifi[playerid] = -1;
				}
				else
				{
				    HataMesajiGonder(playerid, "Evleneceðiniz kiþiye yakýn deðilsiniz.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Size gelen bir istek bulunmuyor.");
			}
		}
		else
		{
			HataMesajiGonder(playerid, "Þuan zaten evlisiniz.");
		}
	}
	if(dialogid == 972)
	{
	  	if(EvlenmeTeklifi[playerid] != 0)
	    {
	      	if(IsPlayerConnected(BosanmaTeklifi[playerid]))
     		{
	           	if(ProxDetectorS(10.0, playerid, BosanmaTeklifi[playerid]))
				{
					new string[256];
					format(string, sizeof(string), "Bekar");
					PlayerInfo[playerid][pMedeniHal] = 0;
					PlayerInfo[BosanmaTeklifi[playerid]][pMedeniHal] = 0;
					strmid(PlayerInfo[playerid][pEvlendigiKisi], string, 0, strlen(string), 255);
					strmid(PlayerInfo[BosanmaTeklifi[playerid]][pEvlendigiKisi], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s adlý kiþiden boþandýnýz.", GetPlayerNameEx2(BosanmaTeklifi[playerid], playerid));
					BilgiMesajiGonder(playerid, string);
					format(string, sizeof(string), "%s adlý kiþiden boþandýnýz.", GetPlayerNameEx2(playerid, BosanmaTeklifi[playerid]));
					BilgiMesajiGonder(playerid, string);
					return 1;
				}
				else
				{
					HataMesajiGonder(playerid, "Boþanacaðýnýz kiþiye yakýn deðilsiniz.");
				}
			}
		}
		else
		{
			HataMesajiGonder(playerid, "Size gelen bir istek bulunmuyor.");
		}
	}
	if(dialogid == 973)
	{
	  	if(LiveOffer[playerid] < 999)
		{
			if(IsPlayerConnected(LiveOffer[playerid]))
		    {
				if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
				{
					BilgiMesajiGonder(playerid, "Canlý yayýna baþladýnýz, bitirmek için: {86D060}/canliyayin");
					BilgiMesajiGonder(LiveOffer[playerid], "Canlý yayýna baþladýnýz, bitirmek için: {86D060}/canliyayin");
					TogglePlayerControllable(playerid, 0);
					TogglePlayerControllable(LiveOffer[playerid], 0);
					TalkingLive[playerid] = LiveOffer[playerid];
					TalkingLive[LiveOffer[playerid]] = playerid;
					LiveOffer[playerid] = 999;
					return 1;
				}
				else
				{
					HataMesajiGonder(playerid, "Canlý yayýn teklif eden kiþiye uzaktasýnýz.");
				}
			}
		}
		else
		{
			HataMesajiGonder(playerid, "Size gelen bir istek bulunmuyor.");
		}
	}
	if(dialogid == 974)
	{
		if(TicketOffer[playerid] < 999)
	 	{
			if(IsPlayerConnected(TicketOffer[playerid]))
			{
		    	if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
				{
					if(GetPlayerCash(playerid) >= TicketMoney[playerid])
				    {
						new string[256];
						new faction = PlayerInfo[TicketOffer[playerid]][pFaction];
						format(string, sizeof(string), "%d$ olan cezanýzý ödediniz.", TicketMoney[playerid]);
						BilgiMesajiGonder(playerid, string);
						format(string, sizeof(string), "%s, %d$ olan cezasýný ödedi.", GetPlayerNameEx2(playerid, TicketOffer[playerid]), TicketMoney[playerid]);
						BilgiMesajiGonder(TicketOffer[playerid], string);
						DynamicFactions[faction][fBank] += TicketMoney[playerid];
						GivePlayerCash(playerid, - TicketMoney[playerid]);
						TicketOffer[playerid] = 999;
						TicketMoney[playerid] = 0;
						return 1;
					}
					else
					{
					    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Cezayý kesen kiþi yakýnýnýzda deðil.");
				}
			}
		}
		else
		{
			HataMesajiGonder(playerid, "Size gelen bir istek bulunmuyor.");
		}
	}
	if(dialogid == 975)
	{
	    if(response)
	    {
	        new sweapon, sammo;
	        new string[256];
			new text1[128], text2[128];
			if(PlayerInfo[playerid][pDrugs] > 0) { text1 = "Kiþinin üzerinde uyuþturucu bulundu."; } else { text1 = "Kiþinin üzerinde uyuþturucu bulunamadý."; }
			if(PlayerInfo[playerid][pMaterials] > 0) { text2 = "Kiþinin üzerinde silah materyali bulundu."; } else { text2 = "Kiþinin üzerinde silah materyali bulunamadý."; }
			format(string, sizeof(string), "[%s - Üzerindekiler]", GetPlayerNameEx2(playerid, UzeriniArama[playerid]));
			BilgiMesajiGonder(UzeriniArama[playerid], string);
			GenelMesajGonder(UzeriniArama[playerid], "Kimlik");
			if(PlayerInfo[playerid][pPhoneNumber] != 0)
			{
			    GenelMesajGonder(UzeriniArama[playerid], "Telefon");
			}
			if(PlayerInfo[playerid][pMask] != 0)
			{
			    GenelMesajGonder(UzeriniArama[playerid], "Maske");
			}
			format(string, sizeof(string), "%d$", PlayerInfo[playerid][pCash]);
			GenelMesajGonder(UzeriniArama[playerid], string);
			format(string, sizeof(string), "%s", text1);
			GenelMesajGonder(UzeriniArama[playerid], string);
			format(string, sizeof(string), "%s", text2);
			GenelMesajGonder(UzeriniArama[playerid], string);
			new sayi5 = 0;
			for (new i = 0; i < 9; i++)
		    {
			    GetPlayerWeaponData(playerid, i, sweapon, sammo);
			    if(sweapon != 0)
			    {
					new weaponName[128];
					GetWeaponNameEx(sweapon, weaponName, sizeof(weaponName));
	      			format(string, sizeof(string), "%s", weaponName);
	    			GenelMesajGonder(UzeriniArama[playerid], string);
	    			sayi5++;
				}
		    }
		    if(sayi5 == 0)
		    {
		        GenelMesajGonder(UzeriniArama[playerid], "Kiþinin silahý bulunamadý.");
		        return 1;
		    }
			PlayerDoMessage(playerid, 15.0, "Olumludur.");
	    }
	    if(!response)
	    {
	        PlayerDoMessage(playerid, 15.0, "Olumsuzdur.");
	    }
	}
	if(dialogid == 976)
	{
	    if(response)
	    {
			new rands = random(2)+1;
			PlayerPlayerActionMessage(KavgaKisi[playerid],playerid,15.0,"doðru kafasýný sallar.");
        	ApplyAnimation(KavgaKisi[playerid],"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
			if(rands == 1)
			{
				KnockedDown[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SetTimerEx("ClearKnock", 20000, false, "i", playerid);
				OnePlayAnim(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
				PlayerDoMessage(KavgaKisi[playerid], 15.0, "Kafasý isabet etmiþtir.");
			}
			else
			{
				PlayerDoMessage(KavgaKisi[playerid], 15.0, "Kafasý isabet etmemiþtir.");
			}
		}
		else
		{
		    HataMesajiGonder(KavgaKisi[playerid], "Kafa atmak istediðiniz kiþi, isteðinizi reddetti.");
		}
	}
	if(dialogid == 977)
	{
	    if(response)
	    {
			new rands = random(2)+1;
			PlayerPlayerActionMessage(KavgaKisi[playerid],playerid,15.0,"doðru yumruðunu sallar.");
        	ApplyAnimation(KavgaKisi[playerid],"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
			if(rands == 1)
			{
				KnockedDown[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SetTimerEx("ClearKnock", 20000, false, "i", playerid);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
				PlayerDoMessage(KavgaKisi[playerid], 15.0, "Yumruðu isabet etmiþtir.");
			}
			else
			{
				PlayerDoMessage(KavgaKisi[playerid], 15.0, "Yumruðu isabet etmemiþtir.");
			}
		}
		else
		{
		    HataMesajiGonder(KavgaKisi[playerid], "Yumruk atmak istediðiniz kiþi, isteðinizi reddetti.");
		}
	}
	if(dialogid == 978)
	{
	    if(response)
	    {
			new rands = random(2)+1;
			PlayerPlayerActionMessage(KavgaKisi[playerid],playerid,15.0,"doðru tekmesini sallar.");
        	ApplyAnimation(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
			if(rands == 1)
			{
				KnockedDown[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SetTimerEx("ClearKnock", 20000, false, "i", playerid);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
				PlayerDoMessage(KavgaKisi[playerid], 15.0, "Tekmesi isabet etmiþtir.");
			}
			else
			{
				PlayerDoMessage(KavgaKisi[playerid], 15.0, "Tekmesi isabet etmemiþtir.");
			}
		}
		else
		{
		    HataMesajiGonder(KavgaKisi[playerid], "Tekme atmak istediðiniz kiþi, isteðinizi reddetti.");
		}
	}
	if(dialogid == 3800)
	{
	    if(response == 1)
	    {
			if(PlayerToPoint(1.0,playerid,DrivingTestPosition[X],DrivingTestPosition[Y],DrivingTestPosition[Z]))
			{
			    if(PlayerInfo[playerid][pCarLic] == 0)
			    {
					if(GetPlayerCash(playerid) >= 500)
					{
						GivePlayerCash(playerid, -500);
						BilgiMesajiGonder(playerid, "Test baþladý, kurallar:");
						GenelMesajGonder(playerid, "Sadece test araçlarýna binin.");
						GenelMesajGonder(playerid, "Test araçlarýna bindikten sonra, test bitene kadar inmeyin.");
						GenelMesajGonder(playerid, "Test araçlarýna zarar vermeden, checkpointleri takip edin.");
						IpucuMesajiGonder(playerid, "Test kurallarýna uymassanýz, testiniz iptal edilir veya kazanamazsýnýz.");
						SetPlayerRaceCheckpoint(playerid,0,1065.0127,-1849.8923,13.2732, 1035.3231,-1800.2351,13.5477, 4);
						gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS0;
						TakingDrivingTest[playerid] = 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
					}
				}
				else
				{
					HataMesajiGonder(playerid, "Zaten bir ehliyetiniz bulunuyor.");
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Ehliyet alma bölgesinde deðilsiniz.");
			}
		}
		if(response == 0)
		{
		    return 1;
		}
	}
	if(dialogid == 3801)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
		   		if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]) || IsAtATM(playerid))
				{
					if(ATMDurum[playerid] == 1)
					{
						ShowPlayerDialog(playerid, 3805,DIALOG_STYLE_INPUT,"ATM","Çekmek istediðiniz para miktarýný giriniz:","Tamam","Kapat");
					}
					else
					{
						ShowPlayerDialog(playerid, 3805,DIALOG_STYLE_INPUT,"Banka","Çekmek istediðiniz para miktarýný giriniz:","Tamam","Kapat");
					}
                }
		    }
		    if(listitem == 1)
		    {
		   		if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]) || IsAtATM(playerid))
				{
					if(ATMDurum[playerid] == 1)
					{
      					ShowPlayerDialog(playerid, 3806,DIALOG_STYLE_INPUT,"ATM","Yatýrmak istediðiniz para miktarýný giriniz:","Tamam","Kapat");
					}
					else
					{
						ShowPlayerDialog(playerid, 3806,DIALOG_STYLE_INPUT,"Banka","Yatýrmak istediðiniz para miktarýný giriniz:","Tamam","Kapat");
					}
                }
		    }
		    if(listitem == 2)
		    {
		   		if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]) || IsAtATM(playerid))
				{
					if(ATMDurum[playerid] == 1)
					{
						ShowPlayerDialog(playerid, 3803,DIALOG_STYLE_INPUT,"ATM","Para göndermek istediðiniz kiþinin banka numarasýný giriniz:","Tamam","Kapat");
					}
					else
					{
						ShowPlayerDialog(playerid, 3803,DIALOG_STYLE_INPUT,"Banka","Para göndermek istediðiniz kiþinin banka numarasýný giriniz:","Tamam","Kapat");
					}
				}
			}
		}
		if(!response)
		{
			BankaDurum[playerid] = 0;
			ATMDurum[playerid] = 0;
		}
	}
	if(dialogid == 3802)
	{
		if(response)
		{
			if(ATMDurum[playerid] == 1)
			{
				ShowPlayerDialog(playerid, 3801,DIALOG_STYLE_LIST,"ATM","Para Çek\nPara Yatýr\nHavale","Seç","Kapat");
			}
			else
			{
				ShowPlayerDialog(playerid, 3801,DIALOG_STYLE_LIST,"Banka","Para Çek\nPara Yatýr\nHavale","Seç","Kapat");
			}
		}
		if(!response)
		{
		    ATMDurum[playerid] = 0;
		    BankaDurum[playerid] = 0;
		}
	}
	if(dialogid == 3803)
	{
		if(response)
		{
		    ParaGidecekKisi[playerid] = BankaNumarasindanBul(strval(inputtext));
		    if(ParaGidecekKisi[playerid] == 0)
		    {
                BankaDurum[playerid] = 0;
                HataMesajiGonder(playerid, "Hatalý banka hesabý girdiniz.");
                return 1;
		    }
			if(ATMDurum[playerid] == 1)
			{
				ShowPlayerDialog(playerid, 3804,DIALOG_STYLE_INPUT,"ATM","Göndermek istediðiniz parayý giriniz:","Seç","Kapat");
			}
			else
			{
				ShowPlayerDialog(playerid, 3804,DIALOG_STYLE_INPUT,"Banka","Göndermek istediðiniz parayý giriniz:","Seç","Kapat");
			}
		}
		if(!response)
		{
		    ATMDurum[playerid] = 0;
		    BankaDurum[playerid] = 0;
		}
	}
	if(dialogid == 3804)
	{
		if(response)
		{
	 		if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]) || IsAtATM(playerid))
	 		{
				new cashdeposit = strval(inputtext);
				if(PlayerInfo[playerid][pBank] >= cashdeposit)
				{
				    new ztrring[256];
				    new eskipara;
				    new yenipara;
				    eskipara = BankaParasiniBul(ParaGidecekKisi[playerid]);
					yenipara = eskipara+cashdeposit;
					if(cashdeposit < 1 || cashdeposit > 99999)
					{
						BankaDurum[playerid] = 0;
						ATMDurum[playerid] = 0;
					    HataMesajiGonder(playerid, "$1'den küçük, $99999'dan yüksek havale yapamazsýnýz.");
						return 1;
					}
					new query[MAX_STRING];
					format(query, MAX_STRING, "UPDATE Oyuncular SET ");
			    	MySQLUpdatePlayerInt(query, ParaGidecekKisi[playerid], "Para2", yenipara);
					MySQLUpdateFinish(query, ParaGidecekKisi[playerid]);
			    	PlayerInfo[playerid][pBank] = PlayerInfo[playerid][pBank]-cashdeposit;
     				format(ztrring, sizeof(ztrring), "%d$'ý havale ettiniz, yeni paranýz: %d$", cashdeposit,PlayerInfo[playerid][pBank]);
     				BilgiMesajiGonder(playerid, ztrring);
					BankaDurum[playerid] = 0;
					ATMDurum[playerid] = 0;
				}
				else
				{
					HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
					BankaDurum[playerid] = 0;
					ATMDurum[playerid] = 0;
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Bankada veya ATM'de deðilsiniz.");
				BankaDurum[playerid] = 0;
				ATMDurum[playerid] = 0;
			}
		}
		if(!response)
		{
		    BankaDurum[playerid] = 0;
		    ATMDurum[playerid] = 0;
		}
	}
	if(dialogid == 3805)
	{
	    if(response)
		{
			if(IsPlayerConnected(playerid))
		    {
				if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]) || IsAtATM(playerid))
		        {
					new cashdeposit = strval(inputtext);
					if(PlayerInfo[playerid][pBank] >= cashdeposit)
					{
					    if(cashdeposit <= 100000)
					    {
						    new string[256];
							if(cashdeposit < 1 || cashdeposit > 99999)
							{
								BankaDurum[playerid] = 0;
								ATMDurum[playerid] = 0;
							    HataMesajiGonder(playerid, "$1'den küçük, $99999'dan yüksek para çekemezsiniz.");
								return 1;
							}
							GivePlayerCash(playerid,cashdeposit);
							PlayerInfo[playerid][pBank]=PlayerInfo[playerid][pBank]-cashdeposit;
							if(ATMDurum[playerid] == 1)
							{
								format(string, sizeof(string), "ATM'den %d$ para çektiniz, yeni para: %d$", cashdeposit,PlayerInfo[playerid][pBank]);
							}
							else
							{
								format(string, sizeof(string), "Bankadan %d$ para çektiniz, yeni para: %d$", cashdeposit,PlayerInfo[playerid][pBank]);
							}
							BilgiMesajiGonder(playerid, string);
			                OnPlayerDataSave(playerid);
							BankaDurum[playerid] = 0;
							ATMDurum[playerid] = 0;
							return 1;
						}
						else
						{
						    HataMesajiGonder(playerid, "Bir seferde $100.000'den fazlasýný çekemezsiniz.");
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
						BankaDurum[playerid] = 0;
						ATMDurum[playerid] = 0;
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Bankada deðilsiniz.");
				    BankaDurum[playerid] = 0;
				    ATMDurum[playerid] = 0;
				}
			}
		}
        if(!response)
		{
			BankaDurum[playerid] = 0;
			ATMDurum[playerid] = 0;
		}
	}
	if(dialogid == 3806)
	{
	    if(response)
		{
		    if(IsPlayerConnected(playerid))
		    {
		        if(PlayerToPoint(5.0,playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]) || IsAtATM(playerid))
		        {
					new cashdeposit = strval(inputtext);
					if(GetPlayerCash(playerid) >= cashdeposit)
					{
					    new string[256];
						if(cashdeposit < 1 || cashdeposit > 99999)
						{
							BankaDurum[playerid] = 0;
							ATMDurum[playerid] = 0;
						    HataMesajiGonder(playerid, "$1'den küçük, $99999'dan yüksek para yatýramazsýnýz.");
							return 1;
						}
						GivePlayerCash(playerid,-cashdeposit);
						PlayerInfo[playerid][pBank]=cashdeposit+PlayerInfo[playerid][pBank];
						if(ATMDurum[playerid] == 1)
						{
							format(string, sizeof(string), "ATM'ye %d$ para yatýrdýnýz, yeni para: %d$", cashdeposit,PlayerInfo[playerid][pBank]);
						}
						else
						{
							format(string, sizeof(string), "Bankaya %d$ para yatýrdýnýz, yeni para: %d$", cashdeposit,PlayerInfo[playerid][pBank]);
						}
						BilgiMesajiGonder(playerid, string);
		               	OnPlayerDataSave(playerid);
	                   	BankaDurum[playerid] = 0;
	                   	ATMDurum[playerid] = 0;
						return 1;
					}
					else
					{
						HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
						BankaDurum[playerid] = 0;
						ATMDurum[playerid] = 0;
					}
				}
				else
				{
				    HataMesajiGonder(playerid, "Bankada deðilsiniz.");
				    BankaDurum[playerid] = 0;
				    ATMDurum[playerid] = 0;
				}
			}
		}
		if(!response)
		{
			BankaDurum[playerid] = 0;
			ATMDurum[playerid] = 0;
		}
	}
	if(dialogid == 3807)
	{
	    if(response)
		{
			if(PlayerToPoint(1.0,playerid,FlyingTestPosition[X],FlyingTestPosition[Y],FlyingTestPosition[Z]))
			{
			    if(GetPlayerVirtualWorld(playerid) == FlyingTestPosition[World])
			    {
			        if(PlayerInfo[playerid][pFlyLic] == 0)
			        {
						if(GetPlayerCash(playerid) >= 10000)
						{
							GivePlayerCash(playerid,-10000);
							BilgiMesajiGonder(playerid, "Uçak ehliyeti aldýnýz, artýk uçak sürebilirsiniz.");
							PlayerInfo[playerid][pFlyLic] = 1;
							OnPlayerDataSave(playerid);
						}
						else
						{
							HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Zaten bir ehliyetiniz bulunuyor.");
					}
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Ehliyet alma bölgesinde deðilsiniz.");
			}
		}
	}
	if(dialogid == 3808)
	{
	    if(response)
		{
			if(PlayerToPoint(1.0,playerid,WeaponLicensePosition[X],WeaponLicensePosition[Y],WeaponLicensePosition[Z]))
			{
			    if(GetPlayerVirtualWorld(playerid) == WeaponLicensePosition[World])
			    {
			        if(PlayerInfo[playerid][pWepLic] == 0)
			        {
						if(GetPlayerCash(playerid) >= 10000)
						{
							GivePlayerCash(playerid,-10000);
							BilgiMesajiGonder(playerid, "Silah lisansý aldýnýz.");
							PlayerInfo[playerid][pWepLic] = 1;
							OnPlayerDataSave(playerid);
						}
						else
						{
							HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Zaten bir lisansýnýz bulunuyor.");
					}
				}
			}
			else
			{
				HataMesajiGonder(playerid, "Lisans alma bölgesinde deðilsiniz.");
			}
		}
	}
	if(dialogid == 3809)
	{
	    if(response)
		{
		    if(PlayerInfo[playerid][pJob] == 0)
		    {
				if(PlayerToPoint(1.0, playerid,TaxiJobPosition[X],TaxiJobPosition[Y],TaxiJobPosition[Z]))
				{
	   				if(GetPlayerVirtualWorld(playerid) == TaxiJobPosition[World])
				    {
						BilgiMesajiGonder(playerid, "Artýk taksicilik mesleðinde çalýþýyorsunuz, yardým için: {86D060}/meslekyardim");
						PlayerInfo[playerid][pJob] = 1;
					}
				}
				else if(PlayerToPoint(1.0, playerid,OtobusJobPosition[X],OtobusJobPosition[Y],OtobusJobPosition[Z]))
				{
	   				if(GetPlayerVirtualWorld(playerid) == OtobusJobPosition[World])
				    {
						BilgiMesajiGonder(playerid, "Artýk otobüscülük mesleðinde çalýþýyorsunuz, yardým için: {86D060}/meslekyardim");
						PlayerInfo[playerid][pJob] = 2;
					}
				}
				else if(PlayerToPoint(1.0, playerid,CleanerJobPosition[X],CleanerJobPosition[Y],CleanerJobPosition[Z]))
				{
	   				if(GetPlayerVirtualWorld(playerid) == CleanerJobPosition[World])
				    {
						BilgiMesajiGonder(playerid, "Artýk yer temizliyiciliði mesleðinde çalýþýyorsunuz, yardým için: {86D060}/meslekyardim");
						PlayerInfo[playerid][pJob] = 3;
					}
				}
				else if(PlayerToPoint(1.0, playerid,TruckJobPosition[X],TruckJobPosition[Y],TruckJobPosition[Z]))
				{
	   				if(GetPlayerVirtualWorld(playerid) == TruckJobPosition[World])
				    {
						BilgiMesajiGonder(playerid, "Artýk týrcýlýk mesleðinde çalýþýyorsunuz, yardým için: {86D060}/meslekyardim");
						PlayerInfo[playerid][pJob] = 4;
					}
				}
				else if(PlayerToPoint(1.0, playerid,ShippingJobPosition[X],ShippingJobPosition[Y],ShippingJobPosition[Z]))
				{
	   				if(GetPlayerVirtualWorld(playerid) == ShippingJobPosition[World])
				    {
						BilgiMesajiGonder(playerid, "Artýk gemicilik mesleðinde çalýþýyorsunuz, yardým için: {86D060}/meslekyardim");
						PlayerInfo[playerid][pJob] = 5;
					}
				}
			}
		    else
		    {
		    	HataMesajiGonder(playerid, "Zaten bir mesleðe sahipsiniz.");
		    }
		}
	}
	if(dialogid == 3810)
	{
	    if(response)
		{
			ShowPlayerDialog(playerid,3811,DIALOG_STYLE_INPUT,"Ürün deposu","Almak istediðiniz ürün sayýsýný giriniz:\n(( Tanesi: $5 ))","Satýn al","Kapat");
		}
		if(!response)
		{
		    UrunDurum[playerid] = 0;
		}
	}
	if(dialogid == 3811)
	{
	    if(response)
		{
		    if(strval(inputtext) < 1 || strval(inputtext) > 500)
		    {
		        HataMesajiGonder(playerid, "Ürün sayýsý 1'den büyük, 500'den fazla olamaz.");
		        return 1;
		    }
		    new urunpara;
		    urunpara = strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext);
			if(TruckProPosition[Urun] >= strval(inputtext))
			{
			    if(GetPlayerCash(playerid) >= urunpara)
			    {
		        	new string[256];
		        	UrunDurum[playerid] = 0;
		        	GivePlayerCash(playerid, -urunpara);
		        	PlayerInfo[playerid][pProducts] += strval(inputtext);
		        	TruckProPosition[Urun] -= strval(inputtext);
		        	format(string, sizeof(string), "Ürün deposundan %d tane ürün aldýnýz. (( %d$ ))",strval(inputtext),urunpara);
		        	BilgiMesajiGonder(playerid, string);
		        }
			    else
			    {
			        HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
			        UrunDurum[playerid] = 0;
			    }
		    }
		    else
			{
				HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
				UrunDurum[playerid] = 0;
			}
		}
		if(!response)
		{
		    UrunDurum[playerid] = 0;
		}
	}
	if(dialogid == 3812)
	{
	    if(response)
		{
			ShowPlayerDialog(playerid,3813,DIALOG_STYLE_INPUT,"Materyal deposu","Almak istediðiniz materyal sayýsýný giriniz:\n(( Tanesi: $20 ))","Satýn al","Kapat");
		}
		if(!response)
		{
		    MateryalDurum[playerid] = 0;
		}
	}
	if(dialogid == 3813)
	{
	    if(response)
		{
		    if(strval(inputtext) < 1 || strval(inputtext) > 500)
		    {
		        HataMesajiGonder(playerid, "Materyal sayýsý 1'den büyük, 500'den fazla olamaz.");
		        return 1;
		    }
		    new materyalpara;
		    materyalpara = strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext);
		    new materyalpara2;
		    materyalpara2 = strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext);
		    new materyalpara3;
		    materyalpara3 = strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext);
		    new materyalpara4;
		    materyalpara4 = strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext)+strval(inputtext);
		    new gercekmateryalpara;
		    gercekmateryalpara = materyalpara+materyalpara2+materyalpara3+materyalpara4;
			if(ShippingMatPosition[Materyal] >= strval(inputtext))
			{
			    if(GetPlayerCash(playerid) >= gercekmateryalpara)
			    {
		        	new string[256];
		        	MateryalDurum[playerid] = 0;
		        	GivePlayerCash(playerid, -gercekmateryalpara);
		        	PlayerInfo[playerid][pMaterials] += strval(inputtext);
		        	ShippingMatPosition[Materyal] -= strval(inputtext);
		        	format(string, sizeof(string), "Materyal deposundan %d tane materyal aldýnýz. (( %d$ ))",strval(inputtext),gercekmateryalpara);
		        	BilgiMesajiGonder(playerid, string);
		        }
			    else
			    {
			        HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
			        MateryalDurum[playerid] = 0;
			    }
		    }
		    else
			{
				HataMesajiGonder(playerid, "Geçersiz bir miktar girdiniz.");
				MateryalDurum[playerid] = 0;
			}
		}
		if(!response)
		{
		    MateryalDurum[playerid] = 0;
		}
	}
	if(dialogid == 3814)
	{
	    if(response)
		{
		    if(PlayerInfo[playerid][pJob] != 0)
		    {
		        if(GetPlayerCash(playerid) >= 2000)
		        {
		            GivePlayerCash(playerid,-2000);
	     			PlayerInfo[playerid][pJob] = 0;
	     			BilgiMesajiGonder(playerid, "Ýþinizden ayrýldýnýz.");
	     		}
				else
				{
				    HataMesajiGonder(playerid,"$2000 tazminat ödeyecek kadar paranýz yok.");
				    return 1;
				}
		    }
		    else
		    {
		    	HataMesajiGonder(playerid, "Herhangi bir meslekte çalýþmýyorsunuz.");
		    }
		}
	}
	if(dialogid == 9000)
	{
		if(response == 1)
		{
		    new arac = GetPlayerVehicleID(playerid);
			if(GetPlayerCash(playerid) < 1250)
			{
			    new string[128];
				format(string, sizeof(string), "Aracýnýza sigorta yapmak için yeterli paranýz yok. ($1250)");
				HataMesajiGonder(playerid, string);
	            return 1;
			}
   			DynamicCars[arac][cSigorta]++;
   			GivePlayerCash(playerid, -1250);
		}
		else
		{
   			return 1;
		}
  	}

	if(dialogid == 9549)
	{
	    if(strlen(inputtext))
     	{
        }
        return 1;
	}

	if(dialogid == 9550)
	{
 	}

  	if(dialogid == 9819)
  	{
  	    if(response)
  	    {
  	        if(listitem == 0)
  	        {
				new wid = GetPlayerWeapon(playerid);
				new ammo = GetPlayerAmmo(playerid);
				if(wid != 0)
				{
				    for(new i = 1; i < 51; i++)
				    {
				        if(i == 1 && DepoSistemi[Silah1] == 0)
				        {
				    		DepoSistemi[Silah1] = wid;
						    DepoSistemi[Mermi1] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 2 && DepoSistemi[Silah2] == 0)
				        {
				    		DepoSistemi[Silah2] = wid;
						    DepoSistemi[Mermi2] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 3 && DepoSistemi[Silah3] == 0)
				        {
				    		DepoSistemi[Silah3] = wid;
						    DepoSistemi[Mermi3] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 4 && DepoSistemi[Silah4] == 0)
				        {
				    		DepoSistemi[Silah4] = wid;
						    DepoSistemi[Mermi4] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 5 && DepoSistemi[Silah5] == 0)
				        {
				    		DepoSistemi[Silah5] = wid;
						    DepoSistemi[Mermi5] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 6 && DepoSistemi[Silah6] == 0)
				        {
				    		DepoSistemi[Silah6] = wid;
						    DepoSistemi[Mermi6] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 7 && DepoSistemi[Silah7] == 0)
				        {
				    		DepoSistemi[Silah7] = wid;
						    DepoSistemi[Mermi7] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 8 && DepoSistemi[Silah8] == 0)
				        {
				    		DepoSistemi[Silah8] = wid;
						    DepoSistemi[Mermi8] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 9 && DepoSistemi[Silah9] == 0)
				        {
				    		DepoSistemi[Silah9] = wid;
						    DepoSistemi[Mermi9] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 10 && DepoSistemi[Silah10] == 0)
				        {
				    		DepoSistemi[Silah10] = wid;
						    DepoSistemi[Mermi10] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 11 && DepoSistemi[Silah11] == 0)
				        {
				    		DepoSistemi[Silah11] = wid;
						    DepoSistemi[Mermi11] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 12 && DepoSistemi[Silah12] == 0)
				        {
				    		DepoSistemi[Silah12] = wid;
						    DepoSistemi[Mermi12] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 13 && DepoSistemi[Silah13] == 0)
				        {
				    		DepoSistemi[Silah13] = wid;
						    DepoSistemi[Mermi13] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 14 && DepoSistemi[Silah14] == 0)
				        {
				    		DepoSistemi[Silah14] = wid;
						    DepoSistemi[Mermi14] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 15 && DepoSistemi[Silah15] == 0)
				        {
				    		DepoSistemi[Silah15] = wid;
						    DepoSistemi[Mermi15] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 16 && DepoSistemi[Silah16] == 0)
				        {
				    		DepoSistemi[Silah16] = wid;
						    DepoSistemi[Mermi16] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 17 && DepoSistemi[Silah17] == 0)
				        {
				    		DepoSistemi[Silah17] = wid;
						    DepoSistemi[Mermi17] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 18 && DepoSistemi[Silah18] == 0)
				        {
				    		DepoSistemi[Silah18] = wid;
						    DepoSistemi[Mermi18] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 19 && DepoSistemi[Silah19] == 0)
				        {
				    		DepoSistemi[Silah19] = wid;
						    DepoSistemi[Mermi19] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 20 && DepoSistemi[Silah20] == 0)
				        {
				    		DepoSistemi[Silah20] = wid;
						    DepoSistemi[Mermi20] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 21 && DepoSistemi[Silah21] == 0)
				        {
				    		DepoSistemi[Silah21] = wid;
						    DepoSistemi[Mermi21] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 22 && DepoSistemi[Silah22] == 0)
				        {
				    		DepoSistemi[Silah22] = wid;
						    DepoSistemi[Mermi22] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 23 && DepoSistemi[Silah23] == 0)
				        {
				    		DepoSistemi[Silah23] = wid;
						    DepoSistemi[Mermi23] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 24 && DepoSistemi[Silah24] == 0)
				        {
				    		DepoSistemi[Silah24] = wid;
						    DepoSistemi[Mermi24] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 25 && DepoSistemi[Silah25] == 0)
				        {
				    		DepoSistemi[Silah25] = wid;
						    DepoSistemi[Mermi25] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 26 && DepoSistemi[Silah26] == 0)
				        {
				    		DepoSistemi[Silah26] = wid;
						    DepoSistemi[Mermi26] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 27 && DepoSistemi[Silah27] == 0)
				        {
				    		DepoSistemi[Silah27] = wid;
						    DepoSistemi[Mermi27] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 28 && DepoSistemi[Silah28] == 0)
				        {
				    		DepoSistemi[Silah28] = wid;
						    DepoSistemi[Mermi28] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 29 && DepoSistemi[Silah29] == 0)
				        {
				    		DepoSistemi[Silah29] = wid;
						    DepoSistemi[Mermi29] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 30 && DepoSistemi[Silah30] == 0)
				        {
				    		DepoSistemi[Silah30] = wid;
						    DepoSistemi[Mermi30] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 31 && DepoSistemi[Silah31] == 0)
				        {
				    		DepoSistemi[Silah31] = wid;
						    DepoSistemi[Mermi31] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 32 && DepoSistemi[Silah32] == 0)
				        {
				    		DepoSistemi[Silah32] = wid;
						    DepoSistemi[Mermi32] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 33 && DepoSistemi[Silah33] == 0)
				        {
				    		DepoSistemi[Silah33] = wid;
						    DepoSistemi[Mermi33] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 34 && DepoSistemi[Silah34] == 0)
				        {
				    		DepoSistemi[Silah34] = wid;
						    DepoSistemi[Mermi34] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 35 && DepoSistemi[Silah35] == 0)
				        {
				    		DepoSistemi[Silah35] = wid;
						    DepoSistemi[Mermi35] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 36 && DepoSistemi[Silah36] == 0)
				        {
				    		DepoSistemi[Silah36] = wid;
						    DepoSistemi[Mermi36] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 37 && DepoSistemi[Silah37] == 0)
				        {
				    		DepoSistemi[Silah37] = wid;
						    DepoSistemi[Mermi37] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 38 && DepoSistemi[Silah38] == 0)
				        {
				    		DepoSistemi[Silah38] = wid;
						    DepoSistemi[Mermi38] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 39 && DepoSistemi[Silah39] == 0)
				        {
				    		DepoSistemi[Silah39] = wid;
						    DepoSistemi[Mermi39] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 40 && DepoSistemi[Silah40] == 0)
				        {
				    		DepoSistemi[Silah40] = wid;
						    DepoSistemi[Mermi40] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 41 && DepoSistemi[Silah41] == 0)
				        {
				    		DepoSistemi[Silah41] = wid;
						    DepoSistemi[Mermi41] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 42 && DepoSistemi[Silah42] == 0)
				        {
				    		DepoSistemi[Silah42] = wid;
						    DepoSistemi[Mermi42] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 43 && DepoSistemi[Silah43] == 0)
				        {
				    		DepoSistemi[Silah43] = wid;
						    DepoSistemi[Mermi43] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 44 && DepoSistemi[Silah44] == 0)
				        {
				    		DepoSistemi[Silah44] = wid;
						    DepoSistemi[Mermi44] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 45 && DepoSistemi[Silah45] == 0)
				        {
				    		DepoSistemi[Silah45] = wid;
						    DepoSistemi[Mermi45] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 46 && DepoSistemi[Silah46] == 0)
				        {
				    		DepoSistemi[Silah46] = wid;
						    DepoSistemi[Mermi46] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 47 && DepoSistemi[Silah47] == 0)
				        {
				    		DepoSistemi[Silah47] = wid;
						    DepoSistemi[Mermi47] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 48 && DepoSistemi[Silah48] == 0)
				        {
				    		DepoSistemi[Silah48] = wid;
						    DepoSistemi[Mermi48] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 49 && DepoSistemi[Silah49] == 0)
				        {
				    		DepoSistemi[Silah49] = wid;
						    DepoSistemi[Mermi49] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
						else if(i == 50 && DepoSistemi[Silah50] == 0)
				        {
				    		DepoSistemi[Silah50] = wid;
						    DepoSistemi[Mermi50] = ammo;
						    BilgiMesajiGonder(playerid,"Elinizde ki silahý depoya býraktýnýz.");
				    		RemovePlayerWeapon(playerid,wid);
						    return 1;
						}
					}
				}
				else
				{
				    HataMesajiGonder(playerid,"Elinizde herhangi bir silah yok.");
				    return 1;
				}
				return HataMesajiGonder(playerid,"Depoda boþ yer yok.");
			}
			if(listitem == 1)
			{
			    new listte[728];
       			if(DepoSistemi[Silah50] != 0 && DepoSistemi[Mermi50] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43],DepoSistemi[Silah44],DepoSistemi[Silah45],
			        DepoSistemi[Silah46],DepoSistemi[Silah47],DepoSistemi[Silah48],DepoSistemi[Silah49],DepoSistemi[Silah50]);
				}
                else if(DepoSistemi[Silah49] != 0 && DepoSistemi[Mermi49] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43],DepoSistemi[Silah44],DepoSistemi[Silah45],
			        DepoSistemi[Silah46],DepoSistemi[Silah47],DepoSistemi[Silah48],DepoSistemi[Silah49]);
				}
				else if(DepoSistemi[Silah48] != 0 && DepoSistemi[Mermi48] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43],DepoSistemi[Silah44],DepoSistemi[Silah45],
			        DepoSistemi[Silah46],DepoSistemi[Silah47],DepoSistemi[Silah48]);
				}
				else if(DepoSistemi[Silah47] != 0 && DepoSistemi[Mermi47] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43],DepoSistemi[Silah44],DepoSistemi[Silah45],
			        DepoSistemi[Silah46],DepoSistemi[Silah47]);
				}
				else if(DepoSistemi[Silah46] != 0 && DepoSistemi[Mermi46] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43],DepoSistemi[Silah44],DepoSistemi[Silah45],
			        DepoSistemi[Silah46]);
				}
				else if(DepoSistemi[Silah45] != 0 && DepoSistemi[Mermi45] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43],DepoSistemi[Silah44],DepoSistemi[Silah45]);
				}
				else if(DepoSistemi[Silah44] != 0 && DepoSistemi[Mermi44] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43],DepoSistemi[Silah44]);
				}
				else if(DepoSistemi[Silah43] != 0 && DepoSistemi[Mermi43] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42],DepoSistemi[Silah43]);
				}
				else if(DepoSistemi[Silah42] != 0 && DepoSistemi[Mermi42] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41],DepoSistemi[Silah42]);
				}
				else if(DepoSistemi[Silah41] != 0 && DepoSistemi[Mermi41] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40],DepoSistemi[Silah41]);
				}
				else if(DepoSistemi[Silah40] != 0 && DepoSistemi[Mermi40] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39],DepoSistemi[Silah40]);
				}
				else if(DepoSistemi[Silah39] != 0 && DepoSistemi[Mermi39] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38],DepoSistemi[Silah39]);
				}
				else if(DepoSistemi[Silah38] != 0 && DepoSistemi[Mermi38] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37],DepoSistemi[Silah38]);
				}
				else if(DepoSistemi[Silah37] != 0 && DepoSistemi[Mermi37] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36],DepoSistemi[Silah37]);
				}
				else if(DepoSistemi[Silah36] != 0 && DepoSistemi[Mermi36] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35],DepoSistemi[Silah36]);
				}
				else if(DepoSistemi[Silah35] != 0 && DepoSistemi[Mermi35] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34],DepoSistemi[Silah35]);
				}
				else if(DepoSistemi[Silah34] != 0 && DepoSistemi[Mermi34] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33],DepoSistemi[Silah34]);
				}
				else if(DepoSistemi[Silah33] != 0 && DepoSistemi[Mermi33] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32],DepoSistemi[Silah33]);
				}
				else if(DepoSistemi[Silah32] != 0 && DepoSistemi[Mermi32] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31],DepoSistemi[Silah32]);
				}
				else if(DepoSistemi[Silah31] != 0 && DepoSistemi[Mermi31] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30],
			        DepoSistemi[Silah31]);
				}
				else if(DepoSistemi[Silah30] != 0 && DepoSistemi[Mermi30] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29],DepoSistemi[Silah30]);
				}
				else if(DepoSistemi[Silah29] != 0 && DepoSistemi[Mermi29] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28],DepoSistemi[Silah29]);
				}
				else if(DepoSistemi[Silah28] != 0 && DepoSistemi[Mermi28] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27],DepoSistemi[Silah28]);
				}
				else if(DepoSistemi[Silah27] != 0 && DepoSistemi[Mermi27] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26],DepoSistemi[Silah27]);
				}
				else if(DepoSistemi[Silah26] != 0 && DepoSistemi[Mermi26] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25],DepoSistemi[Silah26]);
				}
				else if(DepoSistemi[Silah25] != 0 && DepoSistemi[Mermi25] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24],DepoSistemi[Silah25]);
				}
				else if(DepoSistemi[Silah24] != 0 && DepoSistemi[Mermi24] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23],DepoSistemi[Silah24]);
				}
				else if(DepoSistemi[Silah23] != 0 && DepoSistemi[Mermi23] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22],DepoSistemi[Silah23]);
				}
				else if(DepoSistemi[Silah22] != 0 && DepoSistemi[Mermi22] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21],DepoSistemi[Silah22]);
				}
				else if(DepoSistemi[Silah21] != 0 && DepoSistemi[Mermi21] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20],DepoSistemi[Silah21]);
				}
				else if(DepoSistemi[Silah20] != 0 && DepoSistemi[Mermi20] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19],DepoSistemi[Silah20]);
				}
				else if(DepoSistemi[Silah19] != 0 && DepoSistemi[Mermi19] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18],DepoSistemi[Silah19]);
				}
				else if(DepoSistemi[Silah18] != 0 && DepoSistemi[Mermi18] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17],DepoSistemi[Silah18]);
				}
				else if(DepoSistemi[Silah17] != 0 && DepoSistemi[Mermi17] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16],DepoSistemi[Silah17]);
				}
				else if(DepoSistemi[Silah16] != 0 && DepoSistemi[Mermi16] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15],
			        DepoSistemi[Silah16]);
				}
				else if(DepoSistemi[Silah15] != 0 && DepoSistemi[Mermi15] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14],DepoSistemi[Silah15]);
				}
				else if(DepoSistemi[Silah14] != 0 && DepoSistemi[Mermi14] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13],DepoSistemi[Silah14]);
				}
				else if(DepoSistemi[Silah13] != 0 && DepoSistemi[Mermi13] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12],DepoSistemi[Silah13]);
				}
				else if(DepoSistemi[Silah12] != 0 && DepoSistemi[Mermi12] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11],DepoSistemi[Silah12]);
				}
				else if(DepoSistemi[Silah11] != 0 && DepoSistemi[Mermi11] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10],DepoSistemi[Silah11]);
				}
				else if(DepoSistemi[Silah10] != 0 && DepoSistemi[Mermi10] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9],DepoSistemi[Silah10]);
				}
				else if(DepoSistemi[Silah9] != 0 && DepoSistemi[Mermi9] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8],DepoSistemi[Silah9]);
				}
				else if(DepoSistemi[Silah8] != 0 && DepoSistemi[Mermi8] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7],DepoSistemi[Silah8]);
				}
				else if(DepoSistemi[Silah7] != 0 && DepoSistemi[Mermi7] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6],DepoSistemi[Silah7]);
				}
				else if(DepoSistemi[Silah6] != 0 && DepoSistemi[Mermi6] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5],DepoSistemi[Silah6]);
				}
				else if(DepoSistemi[Silah5] != 0 && DepoSistemi[Mermi5] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4],DepoSistemi[Silah5]);
				}
				else if(DepoSistemi[Silah4] != 0 && DepoSistemi[Mermi4] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3],DepoSistemi[Silah4]);
				}
				else if(DepoSistemi[Silah3] != 0 && DepoSistemi[Mermi3] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2],DepoSistemi[Silah3]);
				}
				else if(DepoSistemi[Silah2] != 0 && DepoSistemi[Mermi2] != 0)
			    {
			        format(listte,sizeof(listte),"%d\n%d",
					DepoSistemi[Silah1],DepoSistemi[Silah2]);
				}
				else if(DepoSistemi[Silah1] != 0 && DepoSistemi[Mermi1] != 0)
			    {
			        format(listte,sizeof(listte),"%d",
					DepoSistemi[Silah1]);
				}
				else if(DepoSistemi[Silah1] == 0 && DepoSistemi[Mermi1] == 0)
			    {
			        HataMesajiGonder(playerid,"Depo boþ.");
			        return 1;
				}
				ShowPlayerDialog(playerid,9820,DIALOG_STYLE_LIST,"Depo Sistemi - Silah Al",listte,"Seç","Iptal");
				return 1;
			}
		}
	}
		  /*
  	        new list[13][256], liste[300], string[300];
  	        new weapons[13][2];
			for (new i = 0; i < 13; i++)
			{
			    GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
			}
			if(weapons[0][0] != 0 && weapons[0][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[0][0]],weapons[0][1]);
			    strmid(list[0],string,0,sizeof(string),300);
			}
			if(weapons[1][0] != 0 && weapons[1][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[1][0]],weapons[1][1]);
			    strmid(list[1],string,0,sizeof(string),300);
			}
			if(weapons[2][0] != 0 && weapons[2][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[2][0]],weapons[2][1]);
			    strmid(list[2],string,0,sizeof(string),300);
			}
			if(weapons[3][0] != 0 && weapons[3][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[3][0]],weapons[3][1]);
			    strmid(list[3],string,0,sizeof(string),300);
			}
			if(weapons[4][0] != 0 && weapons[4][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[4][0]],weapons[4][1]);
			    strmid(list[4],string,0,sizeof(string),300);
			}
			if(weapons[5][0] != 0 && weapons[5][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[5][0]],weapons[5][1]);
			    strmid(list[5],string,0,sizeof(string),300);
			}
			if(weapons[6][0] != 0 && weapons[6][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[6][0]],weapons[6][1]);
			    strmid(list[6],string,0,sizeof(string),300);
			}
			if(weapons[7][0] != 0 && weapons[7][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[7][0]],weapons[7][1]);
			    strmid(list[7],string,0,sizeof(string),300);
			}
			if(weapons[8][0] != 0 && weapons[8][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[8][0]],weapons[8][1]);
			    strmid(list[8],string,0,sizeof(string),300);
			}
			if(weapons[9][0] != 0 && weapons[9][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[9][0]],weapons[9][1]);
			    strmid(list[9],string,0,sizeof(string),300);
			}
			if(weapons[10][0] != 0 && weapons[10][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[10][0]],weapons[10][1]);
			    strmid(list[10],string,0,sizeof(string),300);
			}
			if(weapons[11][0] != 0 && weapons[11][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[11][0]],weapons[11][1]);
			    strmid(list[11],string,0,sizeof(string),300);
			}
			if(weapons[12][0] != 0 && weapons[11][1] != 0)
			{
			    format(string,sizeof(string),"%s - Mermi: %d",SilahIsimleri[weapons[12][0]],weapons[12][1]);
			    strmid(list[12],string,0,sizeof(string),300);
			}
			format(liste,sizeof(liste),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
			list[0],
			list[1],
			list[2],
			list[3],
			list[4],
			list[5],
			list[6],
			list[7],
			list[8],
			list[9],
			list[10],
			list[11],
			list[12]);
			ShowPlayerDialog(playerid,9820,DIALOG_STYLE_LIST,"Depo Sistemi - Silah Koy",liste,"Tamam","Iptal");
			*/
	if(dialogid == 9995)
	{
		if(response == 1)
		{
			ShowPlayerDialog(playerid, 5555,DIALOG_STYLE_MSGBOX,"Araç satýmý","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Aracý satmaktan vazgeçtiniz.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Kapat","");
			ShowPlayerDialog(SatilikAraciAlacagiKisi[playerid], 5555,DIALOG_STYLE_MSGBOX,"{7EAD4B}Araç satýmý","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Aracý satan kiþi aracý satmaktan vazgeçti.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Kapat","");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(SatilikAraciAlacagiKisi[i] == playerid)
    			{
  					SatilikAracID[i] = 0;
					SatilikAracUcret[i] = 0;
					SatilikAracDurum[i] = 0;
					SatilikAraciAlacagiKisi[i] = 0;
     			}
			}
		}
		else
		{
   			return 1;
		}
  	}
	if(dialogid == 9996)
	{
		if(response)
		{
		    if(SatilikAracDurum[playerid] == 0)
		    {
		        HataMesajiGonder(playerid, "Aracý satmak isteyen kiþi, satmayý iptal etmiþ veya oyundan çýkmýþ.");
		        return 1;
		    }
		    if(GetPlayerCash(playerid) < SatilikAracUcret[playerid])
		    {
			    HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
	            return 1;
  			}
  			new string1[512];
			new string2[512];
		    new sendername[MAX_PLAYER_NAME];
			DynamicCars[SatilikAracID[playerid]][CarOwned] = 1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GivePlayerCash(playerid, -SatilikAracUcret[playerid]);
			GivePlayerCash(SatilikAraciAlacagiKisi[playerid], SatilikAracUcret[playerid]);
			strmid(DynamicCars[SatilikAracID[playerid]][CarOwner], sendername, 0, strlen(sendername), 999);
			format(string2, sizeof(string2),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n {E6E6E6}%s isimli oyuncuya %s adlý aracýnýzý sattýnýz.\nÜcret: %d$\nSigorta: %d\nKaza sayýsý: %d\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",
			GetPlayerNameEx2(playerid, SatilikAraciAlacagiKisi[playerid]), VehicleName[GetVehicleModel(SatilikAracID[playerid])-400], SatilikAracUcret[playerid], DynamicCars[SatilikAracID[playerid]][cSigorta],DynamicCars[SatilikAracID[playerid]][cKazaSayi]);
			ShowPlayerDialog(SatilikAraciAlacagiKisi[playerid], 5555,DIALOG_STYLE_MSGBOX,"Araç Satýmý",string2,"Kapat","");
			format(string2, sizeof(string2),"{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n {E6E6E6}%s isimli oyuncudan %s adlý aracý satýn aldýnýz.\nÜcret: %d$\nSigorta: %d\nKaza sayýsý: %d\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",
			GetPlayerNameEx2(SatilikAraciAlacagiKisi[playerid], playerid), VehicleName[GetVehicleModel(SatilikAracID[playerid])-400], SatilikAracUcret[playerid], DynamicCars[SatilikAracID[playerid]][cSigorta],DynamicCars[SatilikAracID[playerid]][cKazaSayi]);
			ShowPlayerDialog(playerid, 5555,DIALOG_STYLE_MSGBOX,"Araç Satýmý",string2,"Kapat","");
			format(string1, sizeof(string1), "%s, %d ID'li (%s, %d, %d) aracý %s adlý kiþiden %d$'a satýn aldý.", GetPlayerNameEx(playerid), SatilikAracID[playerid], VehicleName[GetVehicleModel(SatilikAracID[playerid])-400], DynamicCars[SatilikAracID[playerid]][CarColor1], DynamicCars[SatilikAracID[playerid]][CarColor2], GetPlayerNameEx(SatilikAraciAlacagiKisi[playerid]), SatilikAracUcret[playerid]);
			AracLog(string1);
			SatilikAracID[playerid] = 0;
			SatilikAracUcret[playerid] = 0;
			SatilikAracDurum[playerid] = 0;
			SatilikAraciAlacagiKisi[playerid] = 0;
		}
		else
		{
			ShowPlayerDialog(playerid, 5555,DIALOG_STYLE_MSGBOX,"Araç Satýmý","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n {E6E6E6}Aracý almayý kabul etmediniz.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Kapat","");
			ShowPlayerDialog(SatilikAraciAlacagiKisi[playerid], 5555,DIALOG_STYLE_MSGBOX,"Araç Satýmý","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n {E6E6E6}Aracý satmaya çalýþtýðýnýz kiþi aracý almayý\nkabul etmedi.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Kapat","");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(SatilikAraciAlacagiKisi[i] == playerid)
    			{
  					SatilikAracID[i] = 0;
					SatilikAracUcret[i] = 0;
					SatilikAracDurum[i] = 0;
					SatilikAraciAlacagiKisi[i] = 0;
     			}
			}
		}
		return 1;
  	}
	if(dialogid == 9997)
	{
		if(response == 1)
		{
	        new Index;
	    	new tmp[256];
			tmp = strtok(inputtext,Index);
	    	if(!strlen(tmp))
	    	{
			    HataMesajiGonder(playerid, "Alaný boþ býraktýnýz.");
				return 1;
		 	}
			if(!IsNumeric(tmp))
	    	{
				for(new i = 0; i < sizeof(SatilikAraclar) ; i++)
				{
					if(strcmp(inputtext, SatilikAraclar[i][2], true) == 0)
					{
						Arac[playerid] = SatilikAraclar[i][0];
						break;
					}
					else
					{
						Arac[playerid] = -1;
					}
				}
		 	}
		 	else
			{
				for(new i = 0; i < sizeof(SatilikAraclar) ; i++)
				{
				    if(strval(tmp) == SatilikAraclar[i][0])
				    {
						Arac[playerid] = strval(tmp);
						break;
					}
					else
					{
						Arac[playerid] = -1;
					}
				}
			}
			if(Arac[playerid] == -1)
			{
                HataMesajiGonder(playerid, "Almaya çalýþtýðýnýz araç satýlmamaktadýr.");
			    return 1;
			}
			for(new i ; i < sizeof(SatilikAraclar) ; i++)
			{
				if(Arac[playerid] == SatilikAraclar[i][0])
				{
					Sira[playerid] = i;
					break;
				}
	  		}
			if(GetPlayerCash(playerid) < SatilikAraclar[Sira[playerid]][1])
			{
			    new string[256];
			    format(string, sizeof(string), "Aracý satýn almak için yeterli paranýz bulunmamaktadýr. (%d$)", SatilikAraclar[Sira[playerid]][1]);
			    HataMesajiGonder(playerid, string);
				return 1;
	        }
	        new yazi[128];
			format(yazi,1204,"Almak istediðiniz aracýn renklerini giriniz:\n(( ÖRNEK: 0 0 ))");
			ShowPlayerDialog(playerid,9998,DIALOG_STYLE_INPUT,"Galeri",yazi,"Evet","Kapat");
		}
		else
		{
   			return 1;
		}
	}
	if(dialogid == 9998)
	{
		if(response == 1)
		{
			if(sscanf(inputtext, "ii",AracRenk1[playerid],AracRenk2[playerid])) return HataMesajiGonder(playerid, "Hatalý renk biçimi girdiniz, Örnek: 0 0");
			if(AracRenk1[playerid] > 255 || AracRenk1[playerid] < 0)
			{
			    HataMesajiGonder(playerid, "Aracýn 1. rengi 0'dan küçük, 255'den büyük olamaz.");
				return 1;
			}
			if(AracRenk2[playerid] > 255 || AracRenk2[playerid] < 0)
			{
			    HataMesajiGonder(playerid, "Aracýn 2. rengi 0'dan küçük, 255'den büyük olamaz.");
				return 1;
			}
			if(GetPlayerCash(playerid) < SatilikAraclar[Sira[playerid]][1])
			{
			    new string[256];
			    format(string, sizeof(string), "Aracý satýn almak için yeterli paranýz bulunmamaktadýr. (%d$)", SatilikAraclar[Sira[playerid]][1]);
			    HataMesajiGonder(playerid, string);
				return 1;
	        }
	        new aracsatinalma[2000];
	        format(aracsatinalma, sizeof(aracsatinalma), "{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Araç ID: {FF0000}%d\n{E6E6E6}Araç Markasý: {FF0000}%s\n{E6E6E6}Araç Renkleri: {FF0000}%d {E6E6E6}- {FF0000}%d\n{E6E6E6}Araç Fiyatý: {FF0000}%d$\n{E6E6E6}Aracý almak üzeresiniz,\nAracý alýrsanýz sigorta 0,\nkaza sayýsýda 0 baþlayacaktýr.\nAracý almak istediðinize emin misiniz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯",
			SatilikAraclar[Sira[playerid]][0], SatilikAraclar[Sira[playerid]][2], AracRenk1[playerid], AracRenk1[playerid], SatilikAraclar[Sira[playerid]][1]);
			ShowPlayerDialog(playerid, 9999,DIALOG_STYLE_MSGBOX,"Araç Alýmý",aracsatinalma,"Satýn al","Kapat");
		}
		else
		{
			return 1;
		}
	}
	if(dialogid == 9999)
	{
		if(response == 1)
		{
			if(GetPlayerCash(playerid) < SatilikAraclar[Sira[playerid]][1])
			{
			    new string[256];
			    format(string, sizeof(string), "Aracý satýn almak için yeterli paranýz bulunmamaktadýr. (%d$)", SatilikAraclar[Sira[playerid]][1]);
			    HataMesajiGonder(playerid, string);
				return 1;
	        }
			new AracVer;
			new Plaka[64];
   			new CaptchSymb[22][] = {"A","B","C","D","E","F","G","H","I","K","L","M","N","O","P","R","S","T","U","V","Y","Z"};
			new sayiSymb[10][] = {0,1,2,3,4,5,6,7,8,9};
			new Symb1 = random(sizeof(CaptchSymb));
		 	new	Symb2 = random(sizeof(CaptchSymb));
		 	new	Symb3 = random(sizeof(CaptchSymb));
		  	new	Symb4 = random(sizeof(CaptchSymb));
			new SymbS1 = random(sizeof(sayiSymb));
		 	new	SymbS2 = random(sizeof(sayiSymb));
	 		new	SymbS3 = random(sizeof(sayiSymb));
			format(Plaka, sizeof(Plaka), "%d%d%s%s %d%s%s", sayiSymb[SymbS1], sayiSymb[SymbS2],CaptchSymb[Symb1],CaptchSymb[Symb2], sayiSymb[SymbS3], CaptchSymb[Symb3],CaptchSymb[Symb4]);
			new string[MAX_PLAYER_NAME];
			GetPlayerName(playerid,string,24);
   			GivePlayerCash(playerid, -SatilikAraclar[Sira[playerid]][1]);
			new model = Arac[playerid];
			if(model == 452 || model == 453 || model == 454 || model == 473 || model == 484)
			{
				AracVer = AddStaticVehicleEx(Arac[playerid], GemiSpawnPos[X],GemiSpawnPos[Y],GemiSpawnPos[Z],GemiSpawnPos[Angle], AracRenk1[playerid], AracRenk2[playerid], -1);
				DynamicCars[AracVer][cSQLid] = AracEkle(Arac[playerid],GemiSpawnPos[X],GemiSpawnPos[Y],GemiSpawnPos[Z],GemiSpawnPos[Angle], 0, 0, 255, 2, SatilikAraclar[Sira[playerid]][1], 1, string, Plaka, 100.000, 0);
			}
            else
			{
				AracVer = AddStaticVehicleEx(Arac[playerid], AracSpawnPos[X],AracSpawnPos[Y],AracSpawnPos[Z],AracSpawnPos[Angle], AracRenk1[playerid], AracRenk2[playerid], -1);
				DynamicCars[AracVer][cSQLid] = AracEkle(Arac[playerid],AracSpawnPos[X],AracSpawnPos[Y],AracSpawnPos[Z],AracSpawnPos[Angle], 0, 0, 255, 2, SatilikAraclar[Sira[playerid]][1], 1, string, Plaka, 100.000, 0);
			}
			DynamicCars[AracVer][CarModel] = Arac[playerid];
			if(model == 452 || model == 453 || model == 454 || model == 473 || model == 484)
			{
				DynamicCars[AracVer][CarX] = GemiSpawnPos[X];
			    DynamicCars[AracVer][CarY] = GemiSpawnPos[Y];
				DynamicCars[AracVer][CarZ] = GemiSpawnPos[Z];
				DynamicCars[AracVer][CarAngle] = GemiSpawnPos[Angle];
				BilgiMesajiGonder(playerid, "Geminizi, el fenerinin bulunduðu denizden alabilirsiniz.");
			}
			else
			{
				DynamicCars[AracVer][CarX] = AracSpawnPos[X];
			    DynamicCars[AracVer][CarY] = AracSpawnPos[Y];
				DynamicCars[AracVer][CarZ] = AracSpawnPos[Z];
				DynamicCars[AracVer][CarAngle] = AracSpawnPos[Angle];
			}
			DynamicCars[AracVer][CarColor1] = AracRenk1[playerid];
			DynamicCars[AracVer][CarColor2] = AracRenk2[playerid];
			DynamicCars[AracVer][FactionCar] = 255;
			DynamicCars[AracVer][CarType] = 2;
			DynamicCars[AracVer][CarValue] = SatilikAraclar[Sira[playerid]][1];
			DynamicCars[AracVer][CarOwned] = 1;
			strmid(DynamicCars[AracVer][CarOwner], string, 0, strlen(string), 100);
			strmid(DynamicCars[AracVer][CarDescription], Plaka, 0, strlen(Plaka), 20);
 			DynamicCars[AracVer][CarHealth] = 1000.000;
 			DynamicCars[AracVer][AracPatladi] = 0;
   			DynamicCars[AracVer][cSigorta] = 0;
			DynamicCars[AracVer][cKazaSayi] = 0;
			DynamicCars[AracVer][ModPaintjob] = 4;
			DynamicCars[AracVer][ModSpoiler] = 0;
			DynamicCars[AracVer][ModRoof] = 0;
			DynamicCars[AracVer][ModLeftSideSkirt] = 0;
			DynamicCars[AracVer][ModRightSideSkirt] = 0;
			DynamicCars[AracVer][ModExhaust] = 0;
			DynamicCars[AracVer][ModWheels] = 0;
			DynamicCars[AracVer][ModFrontBumper] = 0;
			DynamicCars[AracVer][ModRearBumper] = 0;
			DynamicCars[AracVer][ModStereo] = 0;
			DynamicCars[AracVer][ModHydraulics] = 0;
			DynamicCars[AracVer][ModNitro] = 0;
			DynamicCars[AracVer][ModNeon] = 0;
			DynamicCars[AracVer][ModAlarm] = 0;
			IsikDurum[AracVer] = 0;
			AlarmDurum[AracVer] = 0;
			KaputDurum[AracVer] = 0;
			BagajDurum[AracVer] = 0;
			MotorDurumu[AracVer] = 0;
			KapiDurum[AracVer] = 0;
			ObjeDurum[AracVer] = 0;
			SetVehicleToRespawn(AracVer);
			AracRenk1[playerid] = 0;
			AracRenk2[playerid] = 0;
			format(string, sizeof(string), "%s, %d ID'li (%s, %d, %d) aracý sýfýrdan %d$'a satýn aldý.", GetPlayerNameEx(playerid), AracVer, VehicleName[GetVehicleModel(AracVer)-400], DynamicCars[AracVer][CarColor1], DynamicCars[AracVer][CarColor2], DynamicCars[AracVer][CarValue]);
			AracLog(string);
		}
	}/*
	if(dialogid == 6874)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
			    ShowPlayerDialog(playerid,6875,DIALOG_STYLE_LIST,"Website Servisi","Website Gezintisi\nWebsite Al\nWebsitelerim","Seç","Iptal");
			}
			if(listitem == 1)
			{
			    if(strlen(PlayerInfo[playerid][pMail]) == 0)
			    {
			    	ShowPlayerDialog(playerid,6876,DIALOG_STYLE_LIST,"Mail Servisi","Mail Hesabý Oluþtur","Seç","Iptal");
			    }
			    else
			    {
			        ShowPlayerDialog(playerid,6877,DIALOG_STYLE_LIST,"Mail Servisi","e-Mail Kutusu\ne-Mail Gonder","Seç","Iptal");
			    }
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid,6878,DIALOG_STYLE_INPUT,"Bilinmeyen Numaralar Servisi","Öðrenmek istediðiniz numaranýn sahibinin adýný girin.","Devam","Iptal");
			}
		}
	}
	
	if(dialogid == 6875)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            ShowPlayerDialog(playerid,6879,DIALOG_STYLE_INPUT,"Website Gezintisi","Gitmek istediðiniz web site adresini girin.","Git","Iptal");
	        }
	        if(listitem == 1)
	        {
	            ShowPlayerDialog(playerid,6880,DIALOG_STYLE_LIST,"Website Al",".com Alan Adý - 50$\n.com.tr Alan Adý - 250$\n.net Alan Adý - 40 $\n.co Alan Adý - 35 $","Seç","Iptal");
			}
			if(listitem == 2)
			{
			    new str[528];
			    new website[10];
			    for(new a; a < 301; a++)
			    {
			        if(WebSites[a][wSQLid] == PlayerInfo[playerid][pSQLid])
			        {
			            if(website[0] == 0) { website[0] = a; }
			            else if(website[1] == 0) { website[1] = a; }
			            else if(website[2] == 0) { website[2] = a; }
			            else if(website[3] == 0) { website[3] = a; }
			            else if(website[4] == 0) { website[4] = a; }
			            else if(website[5] == 0) { website[5] = a; }
			            else if(website[6] == 0) { website[6] = a; }
			            else if(website[7] == 0) { website[7] = a; }
			            else if(website[8] == 0) { website[8] = a; }
			            else if(website[9] == 0) { website[9] = a; }
					}
				}
				if(website[0] == 0)
				{
					HataMesajiGonder(playerid,"Web siteniz bulunmamaktadýr.");
					return 1;
				}
				if(website[1] == 0)
				{
				    format(str,sizeof(str),"%s",
					WebSites[website[0]][wName]);
				}
				if(website[2] == 0)
				{
				    format(str,sizeof(str),"%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName]);
				}
				if(website[3] == 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName]);
				}
				if(website[4] == 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName],
					WebSites[website[3]][wName]);
				}
				if(website[5] == 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName],
					WebSites[website[3]][wName],
					WebSites[website[4]][wName]);
				}
				if(website[6] == 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s\n%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName],
					WebSites[website[3]][wName],
					WebSites[website[4]][wName],
					WebSites[website[5]][wName]);
				}
				if(website[7] == 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s\n%s\n%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName],
					WebSites[website[3]][wName],
					WebSites[website[4]][wName],
					WebSites[website[5]][wName],
					WebSites[website[6]][wName]);
				}
				if(website[8] == 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName],
					WebSites[website[3]][wName],
					WebSites[website[4]][wName],
					WebSites[website[5]][wName],
					WebSites[website[6]][wName],
					WebSites[website[7]][wName]);
				}
				if(website[9] == 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName],
					WebSites[website[3]][wName],
					WebSites[website[4]][wName],
					WebSites[website[5]][wName],
					WebSites[website[6]][wName],
					WebSites[website[7]][wName],
					WebSites[website[8]][wName]);
				}
				if(website[9] != 0)
				{
				    format(str,sizeof(str),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
					WebSites[website[0]][wName],
					WebSites[website[1]][wName],
					WebSites[website[2]][wName],
					WebSites[website[3]][wName],
					WebSites[website[4]][wName],
					WebSites[website[5]][wName],
					WebSites[website[6]][wName],
					WebSites[website[7]][wName],
					WebSites[website[8]][wName],
					WebSites[website[9]][wName]);
				}
                ShowPlayerDialog(playerid,6881,DIALOG_STYLE_LIST,"Websitelerim",str,"Seç","Iptal");
			}
		}
	}
	if(dialogid == 6879)
	{
	    if(response)
	    {
	        for(new i; i < 301; i++)
	        {
	        	if(strcmp(WebSites[i][wName],inputtext,true) == 0)
	        	{
					new strng[1028];
					if(strlen(WebSites[i][wLine15]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8],
						WebSites[i][wLine9],
						WebSites[i][wLine10],
						WebSites[i][wLine11],
						WebSites[i][wLine12],
						WebSites[i][wLine13],
						WebSites[i][wLine14],
						WebSites[i][wLine15]);
					}
					else if(strlen(WebSites[i][wLine14]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8],
						WebSites[i][wLine9],
						WebSites[i][wLine10],
						WebSites[i][wLine11],
						WebSites[i][wLine12],
						WebSites[i][wLine13],
						WebSites[i][wLine14]);
					}
					else if(strlen(WebSites[i][wLine13]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8],
						WebSites[i][wLine9],
						WebSites[i][wLine10],
						WebSites[i][wLine11],
						WebSites[i][wLine12],
						WebSites[i][wLine13]);
					}
					else if(strlen(WebSites[i][wLine12]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8],
						WebSites[i][wLine9],
						WebSites[i][wLine10],
						WebSites[i][wLine11],
						WebSites[i][wLine12]);
					}
					else if(strlen(WebSites[i][wLine11]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8],
						WebSites[i][wLine9],
						WebSites[i][wLine10],
						WebSites[i][wLine11]);
					}
					else if(strlen(WebSites[i][wLine10]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8],
						WebSites[i][wLine9],
						WebSites[i][wLine10]);
					}
					else if(strlen(WebSites[i][wLine9]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8],
						WebSites[i][wLine9]);
					}
					else if(strlen(WebSites[i][wLine8]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7],
						WebSites[i][wLine8]);
					}
					else if(strlen(WebSites[i][wLine7]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6],
						WebSites[i][wLine7]);
					}
					else if(strlen(WebSites[i][wLine6]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5],
						WebSites[i][wLine6]);
					}
					else if(strlen(WebSites[i][wLine5]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4],
						WebSites[i][wLine5]);
					}
					else if(strlen(WebSites[i][wLine4]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3],
						WebSites[i][wLine4]);
					}
					else if(strlen(WebSites[i][wLine3]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2],
						WebSites[i][wLine3]);
					}
					else if(strlen(WebSites[i][wLine2]) != 0)
					{
					    format(strng,sizeof(strng),"%s\n%s",
						WebSites[i][wLine1],
						WebSites[i][wLine2]);
					}
					else if(strlen(WebSites[i][wLine1]) != 0)
					{
					    format(strng,sizeof(strng),"%s",WebSites[i][wLine1]);
					}
					ShowPlayerDialog(playerid,544,DIALOG_STYLE_MSGBOX,"Web Gezintisi",strng,"Kapat","");
					return 1;
				}
			}
			return HataMesajiGonder(playerid,"Hatalý bir website adresi girdiniz.");
		}
	}
	if(dialogid == 6880)
	{
	    if(response)
	    {
	            AlanAdiTip[playerid] = listitem+1;
	            if(AlanAdiTip[playerid] == 1)
				{
				    GivePlayerCash(playerid,-50);
				}
				else if(AlanAdiTip[playerid] == 2)
				{
				    GivePlayerCash(playerid,-250);
				}
				else if(AlanAdiTip[playerid] == 3)
				{
				    GivePlayerCash(playerid,-40);
				}
				else if(AlanAdiTip[playerid] == 4)
				{
				    GivePlayerCash(playerid,-35);
				}
				ShowPlayerDialog(playerid,6882,DIALOG_STYLE_INPUT,"Website Al","Lütfen website ismi girin.","Devam","");
		}
	}
	if(dialogid == 6882)
	{
	    if(response)
	    {
	        if(AlanAdiTip[playerid] != 0)
	        {
	            if(!strlen(inputtext))
	            {
	                HataMesajiGonder(playerid,"Website ismini girmediniz.");
	                ShowPlayerDialog(playerid,6882,DIALOG_STYLE_INPUT,"Website Al","Lütfen website ismi girin.","Devam","");
	                return 1;
	            }
	            for(new i; i < 301; i++)
	            {
	                if(!strcmp(WebSites[i][wName],inputtext,true))
	                {
	                    HataMesajiGonder(playerid,"Bu isimde bir web site zaten mevcut.");
	                    ShowPlayerDialog(playerid,6882,DIALOG_STYLE_INPUT,"Website Al","Lütfen website ismi girin.","Devam","");
	                    return 1;
	                }
	            }
	            for(new i; i < 301; i++)
	            {
	                if(strlen(WebSites[i][wName]) == 0)
	                {
	                    new name[128];
	                    new alanad[60];
						if(AlanAdiTip[playerid] == 1)
						{
						    alanad = ".com";
						}
						else if(AlanAdiTip[playerid] == 2)
						{
						    alanad = ".com.tr";
						}
						else if(AlanAdiTip[playerid] == 3)
						{
						    alanad = ".net";
						}
						else if(AlanAdiTip[playerid] == 4)
						{
						    alanad = ".co";
						}
	                    format(name,sizeof(name),"www.%s.%s",inputtext,alanad);
	                    strmid(WebSites[i][wName],name,0,30,39);
						WebSites[i][wSQLid] = PlayerInfo[playerid][pSQLid];
						strmid(WebSites[i][wLine1],"Yeni Site!",0,30,40);
					}
	           	}
			}
		}
	}*/
	return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
	switch (gPlayerCheckpointStatus[playerid])
	{
		case CHECKPOINT_ARACGPS:
		{
			BilgiMesajiGonder(playerid, "Aracýnýzý buldunuz.");
			DisablePlayerCheckpoint(playerid);
		}
		case CHECKPOINT_DESTEKEKIP:
		{
			return 1;
		}
		case CHECKPOINT_TAKSI0:
		{
			if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
			{
				TaxiAccepted[playerid] = 999;
				TaxiCallTime[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			}
		}
		case CHECKPOINT_OTOBUS0:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS1;
			SetPlayerCheckpoint(playerid,1560.2156,-1728.8873,13.1099, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS1:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS2;
			SetPlayerCheckpoint(playerid,1315.9921,-1592.5471,13.1099, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS2:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS3;
			SetPlayerCheckpoint(playerid,1361.2271,-1257.8387,13.1099, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS3:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS4;
			SetPlayerCheckpoint(playerid,1458.6278,-1173.2386,23.3836, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS4:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS5;
			SetPlayerCheckpoint(playerid,1465.7765,-1030.1182,23.3833, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS5:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS6;
			SetPlayerCheckpoint(playerid,1147.2533,-1035.6937,31.5751, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS6:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS7;
			SetPlayerCheckpoint(playerid,958.9038,-1124.0184,23.3994, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS7:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS8;
			SetPlayerCheckpoint(playerid,794.0983,-1305.5793,13.1099, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS8:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS9;
			SetPlayerCheckpoint(playerid,963.9816,-1331.0643,13.0897, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS9:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS10;
			SetPlayerCheckpoint(playerid,1298.4806,-1409.6458,12.9570, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS10:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS11;
			SetPlayerCheckpoint(playerid,1715.2134,-1444.5963,13.1063, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS11:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS12;
			SetPlayerCheckpoint(playerid,1817.8104,-1682.5408,13.1099, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS12:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_OTOBUS13;
			SetPlayerCheckpoint(playerid,1809.5458,-1888.9270,13.1350, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_OTOBUS13:
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			GivePlayerCash(playerid, 5);
			DisablePlayerCheckpoint(playerid);
			RemoveDriverFromVehicle(playerid);
			OtobusTurunda[playerid] = 0;
			GameTextForPlayer(playerid, "~g~(5$) ~r~Sefer bitti. Tekrarlamak icin: ~g~(/otobus)", 7000, 1);
			MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
			AracKaydetmeDurumu[vehicleid] = 0;
   			SetVehicleToRespawn(vehicleid);
   			SetVehicleHealth(vehicleid, DynamicCars[vehicleid][CarHealth]);
      		UpdateVehicleDamageStatusEx(vehicleid, DynamicCars[vehicleid][Panels], DynamicCars[vehicleid][Doors], DynamicCars[vehicleid][Lights], DynamicCars[vehicleid][Tires]);
   			AracKaydetmeDurumu[vehicleid] = 1;
   			SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
		}
		case CHECKPOINT_TEMIZLIK0:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK1;
			SetPlayerCheckpoint(playerid,-2152.3079,33.2500,34.8970, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK1:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK2;
			SetPlayerCheckpoint(playerid,-2184.1997,-66.6438,34.8970, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK2:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK3;
			SetPlayerCheckpoint(playerid,-2262.7842,-157.9086,34.8970, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK3:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK4;
			SetPlayerCheckpoint(playerid,-2369.4729,-84.0547,34.8970, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK4:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK5;
			SetPlayerCheckpoint(playerid,-2274.0950,-72.9754,34.8892, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK5:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK6;
			SetPlayerCheckpoint(playerid,-2164.0291,-25.7216,34.8970, 5.0);
            GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK6:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK7;
			SetPlayerCheckpoint(playerid,-2119.9775,27.4519,34.8971, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK7:
		{
			GivePlayerCash(playerid, 3);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TEMIZLIK8;
			SetPlayerCheckpoint(playerid,-2100.0708,88.5001,35.0455, 5.0);
			GameTextForPlayer(playerid, "~g~($3) ~r~Diger durak isaretlendi.", 7000, 1);
		}
		case CHECKPOINT_TEMIZLIK8:
		{
			GivePlayerCash(playerid, 5);
			DisablePlayerCheckpoint(playerid);
			YerTemizlemeTurunda[playerid] = 0;
			TogglePlayerControllable(playerid,0);
			MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
			GameTextForPlayer(playerid, "~g~(5$) ~r~Sefer bitti. Tekrarlamak icin: ~g~(/otobus)", 7000, 1);
		}
		case CHECKPOINT_NAVIGASYON1:
		{
			DisablePlayerCheckpoint(playerid);
			GameTextForPlayer(playerid, "~g~Hedefe vardiniz.", 7000, 1);
		}
		case CHECKPOINT_NAVIGASYON2:
		{
			DisablePlayerCheckpoint(playerid);
			GameTextForPlayer(playerid, "~g~Hedefe vardiniz.", 7000, 1);
		}
		case CHECKPOINT_NAVIGASYON3:
		{
			DisablePlayerCheckpoint(playerid);
			GameTextForPlayer(playerid, "~g~Hedefe vardiniz.", 7000, 1);
		}
		case CHECKPOINT_NAVIGASYON4:
		{
			DisablePlayerCheckpoint(playerid);
			GameTextForPlayer(playerid, "~g~Hedefe vardiniz.", 7000, 1);
		}
		case CHECKPOINT_NAVIGASYON5:
		{
			DisablePlayerCheckpoint(playerid);
			GameTextForPlayer(playerid, "~g~Hedefe vardiniz", 7000, 1);
		}
		case CHECKPOINT_NAVIGASYON6:
		{
			DisablePlayerCheckpoint(playerid);
			GameTextForPlayer(playerid, "~g~Hedefe vardiniz.", 7000, 1);
		}
		case CHECKPOINT_BALIK:
		{
			new string[256];
		    new baliksurem = random(40);
		    if(baliksurem > 35)
		    {
		    	BalikSure[playerid] = 25+baliksurem;
			}
		    if(baliksurem < 35)
		    {
		    	BalikSure[playerid] = 30+baliksurem;
			}
		    if(baliksurem < 30)
		    {
		    	BalikSure[playerid] = 35+baliksurem;
			}
		    if(baliksurem < 20)
		    {
		    	BalikSure[playerid] = 45+baliksurem;
			}
		    if(baliksurem < 10)
		    {
		    	BalikSure[playerid] = 55+baliksurem;
			}
		    BalikTutuyor[playerid] = 1;
		    PlayerActionMessage(playerid, 15.0, "elindeki oltayý suya doðru fýrlatýr.");
			format(string, sizeof(string), "%d saniye kalmýþtýr.", BalikSure[playerid]);
			PlayerDoMessage(playerid, 15.0, string);
			TogglePlayerControllable(playerid, 0);
		}
		case CHECKPOINT_TIRCILIK0:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK1;
			SetPlayerCheckpoint(playerid, 707.7919,-482.8173,15.9597, 5.0);
		}
		case CHECKPOINT_TIRCILIK1:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK2;
			SetPlayerCheckpoint(playerid, 644.9584,-435.6299,15.9602, 5.0);
		}
		case CHECKPOINT_TIRCILIK2:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK3;
			SetPlayerCheckpoint(playerid, 537.9667,-412.6483,28.1161, 5.0);
		}
		case CHECKPOINT_TIRCILIK3:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK4;
			SetPlayerCheckpoint(playerid, 311.8047,-382.5752,9.2329, 5.0);
		}
		case CHECKPOINT_TIRCILIK4:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK5;
			SetPlayerCheckpoint(playerid, 196.2162,-320.2529,1.3466, 5.0);
		}
		case CHECKPOINT_TIRCILIK5:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK6;
			SetPlayerCheckpoint(playerid, 142.6275,-282.2046,1.3514, 5.0);
		}
		case CHECKPOINT_TIRCILIK6:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK7;
			SetPlayerCheckpoint(playerid, 89.5827,-306.8542,1.3495, 5.0);
		}
		case CHECKPOINT_TIRCILIK7:
		{
			TogglePlayerControllable(playerid, 0);
			BilgiMesajiGonder(playerid, "Ürünler araca yükleniyor...");
		}
		case CHECKPOINT_TIRCILIK8:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK9;
			SetPlayerCheckpoint(playerid, 195.2753,-320.7676,1.3430, 5.0);
		}
		case CHECKPOINT_TIRCILIK9:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK10;
			SetPlayerCheckpoint(playerid, 279.5687,-381.0266,8.5930, 5.0);
		}
		case CHECKPOINT_TIRCILIK10:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK11;
			SetPlayerCheckpoint(playerid, 452.2826,-408.9560,28.0187, 5.0);
		}
		case CHECKPOINT_TIRCILIK11:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK12;
			SetPlayerCheckpoint(playerid, 638.9399,-426.4558,15.9589, 5.0);
		}
		case CHECKPOINT_TIRCILIK12:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK13;
			SetPlayerCheckpoint(playerid, 718.9726,-497.5410,15.9592, 5.0);
		}
		case CHECKPOINT_TIRCILIK13:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK14;
			SetPlayerCheckpoint(playerid, 778.7096,-532.6860,15.9578, 5.0);
		}
		case CHECKPOINT_TIRCILIK14:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRCILIK15;
			SetPlayerCheckpoint(playerid, 797.7814,-617.8563,16.1077, 5.0);
		}
		case CHECKPOINT_TIRCILIK15:
		{
		    new string[256];
			MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
			DisablePlayerCheckpoint(playerid);
			TirTurunda[playerid] = 0;
			GivePlayerCash(playerid, TasidigiYuk[playerid]);
			TruckProPosition[Urun] += TasidigiYuk[playerid];
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			format(string, sizeof(string), "Taþýma iþlemi bitti ve %d$ kazandýnýz.", TasidigiYuk[playerid]);
			BilgiMesajiGonder(playerid, string);
		}
		case CHECKPOINT_GEMICILIK0:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK1;
			SetPlayerCheckpoint(playerid, 2400.7031,-2778.6216,-0.0815, 5.0);
		}
		case CHECKPOINT_GEMICILIK1:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK2;
			SetPlayerCheckpoint(playerid, 1988.7501,-2842.3931,-0.8106, 5.0);
		}
		case CHECKPOINT_GEMICILIK2:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK3;
			SetPlayerCheckpoint(playerid, 1399.2728,-2825.7837,-0.4898, 5.0);
		}
		case CHECKPOINT_GEMICILIK3:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK4;
			SetPlayerCheckpoint(playerid, 1008.0543,-2494.9045,-0.2448, 5.0);
		}
		case CHECKPOINT_GEMICILIK4:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK5;
			SetPlayerCheckpoint(playerid, 362.3569,-2166.0322,-0.3409, 5.0);
		}
		case CHECKPOINT_GEMICILIK5:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK6;
			SetPlayerCheckpoint(playerid, 49.5424,-1575.3120,-0.2592, 5.0);
		}
		case CHECKPOINT_GEMICILIK6:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK7;
			SetPlayerCheckpoint(playerid, -19.3051,-924.1490,-0.4836, 5.0);
		}
		case CHECKPOINT_GEMICILIK7:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK8;
			SetPlayerCheckpoint(playerid, -207.5225,-663.0526,-0.5311, 5.0);
		}
		case CHECKPOINT_GEMICILIK8:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK9;
			SetPlayerCheckpoint(playerid, -817.1049,-344.8069,-0.4485, 5.0);
		}
		case CHECKPOINT_GEMICILIK9:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK10;
			SetPlayerCheckpoint(playerid, -1035.8531,-205.3664,-0.4695, 5.0);
		}
		case CHECKPOINT_GEMICILIK10:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK11;
			SetPlayerCheckpoint(playerid, -1020.4681,107.8889,-0.4243, 5.0);
		}
		case CHECKPOINT_GEMICILIK11:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK12;
			SetPlayerCheckpoint(playerid, -1046.5282,508.7207,-0.5087, 5.0);
		}
		case CHECKPOINT_GEMICILIK12:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK13;
			SetPlayerCheckpoint(playerid, -1648.9998,145.5217,-0.4625, 5.0);
		}
		case CHECKPOINT_GEMICILIK13:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK14;
			SetPlayerCheckpoint(playerid, -1688.2770,108.1614,-0.3778, 5.0);
		}
		case CHECKPOINT_GEMICILIK14:
		{
			TogglePlayerControllable(playerid, 0);
			BilgiMesajiGonder(playerid, "Materyaller gemiye yükleniyor...");
		}
		case CHECKPOINT_GEMICILIK15:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK16;
			SetPlayerCheckpoint(playerid, -1054.6259,506.9321,-0.5921, 5.0);
		}
		case CHECKPOINT_GEMICILIK16:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK17;
			SetPlayerCheckpoint(playerid, -1012.6884,131.6334,-0.3909, 5.0);
		}
		case CHECKPOINT_GEMICILIK17:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK18;
			SetPlayerCheckpoint(playerid, -1030.3412,-176.7414,-0.2240, 5.0);
		}
		case CHECKPOINT_GEMICILIK18:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK19;
			SetPlayerCheckpoint(playerid, -694.1924,-314.0354,-0.4420, 5.0);
		}
		case CHECKPOINT_GEMICILIK19:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK20;
			SetPlayerCheckpoint(playerid, -293.3710,-423.0946,-0.4639, 5.0);
		}
		case CHECKPOINT_GEMICILIK20:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK21;
			SetPlayerCheckpoint(playerid, -4.9110,-907.2049,-0.4766, 5.0);
		}
		case CHECKPOINT_GEMICILIK21:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK22;
			SetPlayerCheckpoint(playerid, 81.7097,-1125.1753,-0.5623, 5.0);
		}
		case CHECKPOINT_GEMICILIK22:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK23;
			SetPlayerCheckpoint(playerid, 54.4967,-1484.8273,-0.3919, 5.0);
		}
		case CHECKPOINT_GEMICILIK23:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK24;
			SetPlayerCheckpoint(playerid, 96.7691,-1941.6473,-0.3202, 5.0);
		}
		case CHECKPOINT_GEMICILIK24:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK25;
			SetPlayerCheckpoint(playerid, 360.0997,-2111.8818,-0.3411, 5.0);
		}
		case CHECKPOINT_GEMICILIK25:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK26;
			SetPlayerCheckpoint(playerid, 906.9523,-2279.5737,-0.4149, 5.0);
		}
		case CHECKPOINT_GEMICILIK26:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK27;
			SetPlayerCheckpoint(playerid, 1328.3958,-2774.7043,-0.1152, 5.0);
		}
		case CHECKPOINT_GEMICILIK27:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK28;
			SetPlayerCheckpoint(playerid, 1779.0640,-2844.3257,0.0009, 5.0);
		}
		case CHECKPOINT_GEMICILIK28:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK29;
			SetPlayerCheckpoint(playerid, 2168.0623,-2789.4658,-0.7474, 5.0);
		}
		case CHECKPOINT_GEMICILIK29:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK30;
			SetPlayerCheckpoint(playerid, 2603.1516,-2698.7427,-1.0100, 5.0);
		}
		case CHECKPOINT_GEMICILIK30:
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_GEMICILIK31;
			SetPlayerCheckpoint(playerid, 2782.3323,-2571.5913,-0.3070, 5.0);
		}
		case CHECKPOINT_GEMICILIK31:
		{
		    new string[256];
			MotorDurumu[GetPlayerVehicleID(playerid)] = 0;
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), MotorDurumu[GetPlayerVehicleID(playerid)], IsikDurum[GetPlayerVehicleID(playerid)], AlarmDurum[GetPlayerVehicleID(playerid)], KapiDurum[GetPlayerVehicleID(playerid)], KaputDurum[GetPlayerVehicleID(playerid)], BagajDurum[GetPlayerVehicleID(playerid)], ObjeDurum[GetPlayerVehicleID(playerid)]);
			DisablePlayerCheckpoint(playerid);
			GivePlayerCash(playerid, TasidigiYuk[playerid]+TasidigiYuk[playerid]);
			ShippingMatPosition[Materyal] += TasidigiYuk[playerid];
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			format(string, sizeof(string), "Taþýma iþlemi bitti ve %d$ kazandýnýz.", TasidigiYuk[playerid]+TasidigiYuk[playerid]);
			BilgiMesajiGonder(playerid, string);
		}
	}
	return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	switch (gPlayerCheckpointStatus[playerid])
	{
		case CHECKPOINT_ARACSURUS0:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS1;
     			SetPlayerRaceCheckpoint(playerid,0,1035.3231,-1800.2351,13.5477, 1039.7151,-1576.8107,13.2595,4);
			}
		}
		case CHECKPOINT_ARACSURUS1:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
     			DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS2;
	        	SetPlayerRaceCheckpoint(playerid,0,1039.7151,-1576.8107,13.2595, 1197.8837,-1574.7455,13.2578,4);
			}
		}
		case CHECKPOINT_ARACSURUS2:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS3;
	        	SetPlayerRaceCheckpoint(playerid,0,1197.9285,-1406.9086,13.1228, 1392.4169,-1407.1395,13.2577,4);
			}
        }
		case CHECKPOINT_ARACSURUS3:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
    			DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS4;
	      	  	SetPlayerRaceCheckpoint(playerid,0,1392.4169,-1407.1395,13.2577, 1451.9023,-1446.1791,13.2585,4);
			}
        }
  		case CHECKPOINT_ARACSURUS4:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS5;
		        SetPlayerRaceCheckpoint(playerid,0,1451.9023,-1446.1791,13.2585, 1426.2758,-1588.4100,13.2616,4);
			}
		}
		case CHECKPOINT_ARACSURUS5:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS6;
		        SetPlayerRaceCheckpoint(playerid,0,1426.2758,-1588.4100,13.2616, 1525.9324,-1594.9265,13.2636,4);
			}
		}
		case CHECKPOINT_ARACSURUS6:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS7;
		        SetPlayerRaceCheckpoint(playerid,0,1525.9324,-1594.9265,13.2636, 1525.8640,-1730.4182,13.2613,4);
			}
		}
		case CHECKPOINT_ARACSURUS7:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS8;
		        SetPlayerRaceCheckpoint(playerid,0,1525.8640,-1730.4182,13.2613, 1389.1265,-1732.3602,13.2617,4);
			}
		}
		case CHECKPOINT_ARACSURUS8:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS9;
		        SetPlayerRaceCheckpoint(playerid,0,1389.1265,-1732.3602,13.2617, 1385.1390,-1869.2615,13.2638,4);
			}
		}
		case CHECKPOINT_ARACSURUS9:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS10;
		        SetPlayerRaceCheckpoint(playerid,0,1385.1390,-1869.2615,13.2638, 1216.0088,-1850.1407,13.2576,4);
			}
		}
		case CHECKPOINT_ARACSURUS10:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS11;
		        SetPlayerRaceCheckpoint(playerid,0,1216.0088,-1850.1407,13.2576, 1212.6187,-1828.1941,13.2833,4);
			}
		}
		case CHECKPOINT_ARACSURUS11:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
				DisablePlayerRaceCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_ARACSURUS12;
		        SetPlayerRaceCheckpoint(playerid,1,1212.6187,-1828.1941,13.2833, 0.0,0.0,0.0,4);
			}
		}
		case CHECKPOINT_ARACSURUS12:
		{
    		if(TakingDrivingTest[playerid] == 1 && DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 1)
    		{
  				new veh;
  				new Float:health;
  				veh = GetPlayerVehicleID(playerid);
  				GetVehicleHealth(veh, health);
  				if(health >= 950.0)
  				{
	 		       	BilgiMesajiGonder(playerid, "Sürücü testini baþarýlý bir þekilde geçtiniz ve ehliyetinizi aldýnýz.");
	  		      	PlayerInfo[playerid][pCarLic] = 1;
	 		       	DisablePlayerRaceCheckpoint(playerid);
	   		     	OnPlayerDataSave(playerid);
					AracKaydetmeDurumu[veh] = 0;
			  		SetVehicleToRespawn(veh);
  				}
  				else
  				{
	       		 	BilgiMesajiGonder(playerid, "Sürücü testini baþarýsýz bir þekilde geçtiniz ve ehliyetinizi alamadýnýz.");
	        		DisablePlayerRaceCheckpoint(playerid);
			  		SetVehicleToRespawn(veh);
  				}
  				TakingDrivingTest[playerid] = 0;
				return 1;
			}
		}
	}
	return 1;
}

public Dondur(playerid)
{
	TogglePlayerControllable(playerid, 0);
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
    return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	Clicked[playerid] = clickedplayerid;
	new string[528];
	if(PlayerInfo[playerid][pAdmin] == 1)
	{
	    format(string,sizeof(string),"SQLID\nYanýna Git\nYanýna Getir\nOyuncuyu Ýzle\nOyuncuyu Kontrol Et");
	    ShowPlayerDialog(playerid, 600, DIALOG_STYLE_LIST,"Yardýmcý Ekip Paneli",string,"Tamam","Iptal");
	}
	else if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	    format(string,sizeof(string),"SQLID\nYanýna Git\nYanýna Getir\nOyuncuyu Ýzle\nOyuncuyu Kontrol Et\nSkin Ver\nSpawn Et\nÝhtiyaçlarýný Gider");
	    ShowPlayerDialog(playerid, 601, DIALOG_STYLE_LIST,"Yönetim Paneli",string,"Tamam","Iptal");
	}
	return 1;
}

public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerHealth(playerid, PlayerInfo[playerid][pHP]);
	    SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
		SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	    if(AdminDuty[playerid])
	    {
	    	SetPlayerColor(playerid,COLOR_ADMINDUTY);
			SetPlayerHealth(playerid,99999);
			SetPlayerArmour(playerid,99999);
	    }
   		if(PlayerInfo[playerid][pJailed] == 1)
		{
		    SetPlayerInterior(playerid, 6);
		    new ID;
			for(new i = 0; i < sizeof(Building); i++)
			{
 				if(PlayerToPoint(15.0,playerid,Building[i][ExitX],Building[i][ExitY],Building[i][ExitZ]))
				{
				    ID = i;
				    break;
				}
			}
		    SetPlayerVirtualWorld(playerid, ID);
			SetPlayerPos(playerid,264.4079,77.6206,1001.0391);
			return 1;
		}
   		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 10);
		    SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,227.5280,110.4332,999.0156);
			TogglePlayerControllable(playerid, 0);
			return 1;
		}
		if(Olum[playerid] == 1)
		{
		    SetPlayerPos(playerid, OlumX[playerid], OlumY[playerid], OlumZ[playerid]);
		    SetPlayerVirtualWorld(playerid, OlumVW[playerid]);
			SetPlayerInterior(playerid, OlumInt[playerid]);
			if(CopOnDuty[playerid] == 1)
			{
			    SetPlayerSkin(playerid, CopOnDutySkin[playerid]);
			}
			Olum[playerid] = 0;
			OlumX[playerid] = 0;
			OlumY[playerid] = 0;
			OlumZ[playerid] = 0;
			OlumVW[playerid] = 0;
			OlumInt[playerid] = 0;
			TogglePlayerControllable(playerid, 0);
			SetTimer("kalkis",90000,0);
			SetTimer("olmesin",250,1);
			kalkabilir[playerid]=0;
			LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
			if(SapkaTakti[playerid] == 1)
			{
				new skin, cap, ilerleme = 1;
				skin = (GetPlayerSkin(playerid) - 1);
				switch(PlayerInfo[playerid][pSapka])
				{
					case 1:    cap = 18926;
					case 2..9: cap = 18926 + PlayerInfo[playerid][pSapka];
				}
				for(new s = 0; s < sizeof(HataliKiyafetler); s++)
				{
					if(skin == HataliKiyafetler[s])
					{
						HataMesajiGonder(playerid, "Kullandýðýnýz kýyafete þapka takamazsýnýz.");
						ilerleme = 0;
					}
				}
				if(ilerleme == 1)
				{
					SapkaTakti[playerid] = 1;
					SetPlayerAttachedObject(playerid, 2, cap, 2, CapsSkinOffSet[skin][0], CapsSkinOffSet[skin][1], CapsSkinOffSet[skin][2], CapsSkinOffSet[skin][3], CapsSkinOffSet[skin][4], CapsSkinOffSet[skin][5]);
				}
			}
			if(RagTakti[playerid] == 1)
			{
				RagTakti[playerid] = 1;
				if(PlayerInfo[playerid][pRag] ==  0)
				{
					SetPlayerAttachedObject(playerid, 3, 18911, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  1)
				{
					SetPlayerAttachedObject(playerid, 3, 18912, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  2)
				{
					SetPlayerAttachedObject(playerid, 3, 18913, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  3)
				{
					SetPlayerAttachedObject(playerid, 3, 18914, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  4)
				{
					SetPlayerAttachedObject(playerid, 3, 18915, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  5)
				{
					SetPlayerAttachedObject(playerid, 3, 18916, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  6)
				{
					SetPlayerAttachedObject(playerid, 3, 18917, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  7)
				{
					SetPlayerAttachedObject(playerid, 3, 18918, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  8)
				{
					SetPlayerAttachedObject(playerid, 3, 18919, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
				if(PlayerInfo[playerid][pRag] ==  9)
				{
					SetPlayerAttachedObject(playerid, 3, 18920, 2, 0.08, 0.01, -0.005, 90, 170, 90);
				}
			}
			if(GozlukTakti[playerid] == 1)
			{
				new skin = GetPlayerSkin(playerid);
				GozlukTakti[playerid] = 1;
				new glasseid = 19006 + (PlayerInfo[playerid][pGozluk] - 1);
				SetPlayerAttachedObject(playerid, 4, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
			}
			return 1;
		}
	    if(PlayerInfo[playerid][pSpawn] == 1)
	    {
  			if(PlayerInfo[playerid][pFaction] != 255)
			{
				SetPlayerPos(playerid,DynamicFactions[PlayerInfo[playerid][pFaction]][fX],DynamicFactions[PlayerInfo[playerid][pFaction]][fY],DynamicFactions[PlayerInfo[playerid][pFaction]][fZ]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				return 1;
			}
		}
	    if(PlayerInfo[playerid][pSpawn] == 2)
	    {
	    	new house = PlayerInfo[playerid][pHouseKey];
   			if(house != 255)
			{
				SetPlayerInterior(playerid,Houses[house][ExitInterior]);
				SetPlayerPos(playerid, Houses[house][ExitX], Houses[house][ExitY],Houses[house][ExitZ]);
				SetPlayerVirtualWorld(playerid,house);
				return 1;
			}
		}
	    if(PlayerInfo[playerid][pSpawn] == 3)
	    {
			SetPlayerInterior(playerid, 15);
			SetPlayerVirtualWorld(playerid, playerid);
			SetPlayerPos(playerid, 2284.4546,-1134.9675,1053.8984);
			Otelde[playerid] = 1;
			return 1;
		}
	    if(PlayerInfo[playerid][pSpawn] == 4)
	    {
			SetPlayerPos(playerid,CivilianSpawn[X],CivilianSpawn[Y],CivilianSpawn[Z]);
			SetPlayerVirtualWorld(playerid, CivilianSpawn[World]);
			SetPlayerInterior(playerid, CivilianSpawn[Interior]);
			SetPlayerFacingAngle(playerid,CivilianSpawn[Angle]);
			return 1;
		}
	    if(PlayerInfo[playerid][pSpawn] == 5)
	    {
			SetPlayerPos(playerid,PlayerInfo[playerid][pSpawnX],PlayerInfo[playerid][pSpawnY],PlayerInfo[playerid][pSpawnZ]);
			SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pSpawnW]);
			SetPlayerInterior(playerid, PlayerInfo[playerid][pSpawnInt]);
			return 1;
		}
	}
	return 1;
}
public SetPlayerToFactionSkin(playerid)
{
  		new faction = PlayerInfo[playerid][pFaction];
		new rank = PlayerInfo[playerid][pRank];
		new rankamount = DynamicFactions[faction][fRankAmount];
		if(faction != 255)
		{
			if(DynamicFactions[faction][fUseSkins])
			{
				if(rank == 1 && rankamount >= 1)
				{
	   				if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin1]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin1]);
					}
				}
				else if(rank == 2 && rankamount >= 2)
				{
	    			if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin2]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin2]);
					}
				}
				else if(rank == 3 && rankamount >= 3)
				{
	    			if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin3]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin3]);
					}
				}
				else if(rank == 4 && rankamount >= 4)
				{
					if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin4]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin4]);
					}
				}
				else if(rank == 5 && rankamount >= 5)
				{
					if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin5]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin5]);
					}
				}
				else if(rank == 6 && rankamount >= 6)
				{
					if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin6]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin6]);
					}
				}
				else if(rank == 7 && rankamount >= 7)
				{
					if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin7]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin7]);
					}
				}
				else if(rank == 8 && rankamount >= 8)
				{
					if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin8]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin8]);
					}
				}
				else if(rank == 9 && rankamount >= 9)
				{
					if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin9]);
	    		        }
					}
                    else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin9]);
					}
				}
				else if(rank == 10 && rankamount >= 10)
				{
					if(DynamicFactions[faction][fType] == 1)
	    		    {
	    		        if(CopOnDuty[playerid])
	    		        {
	    		            SetPlayerSkin(playerid,DynamicFactions[faction][fSkin10]);
	    		        }
					}
					else
					{
						SetPlayerSkin(playerid,DynamicFactions[faction][fSkin10]);
					}
				}
   			}
		}
		return 1;
}
public OnPlayerExitedMenu(playerid)
{
	return 1;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
		    if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
		    {
				return 1;
			}
		}
	}
	return 0;
}
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new ProxString[512];
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
				 	format(ProxString, sizeof(ProxString), "%s%s", GetPlayerNameEx2(playerid, i), string);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col1, ProxString);
						}
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col2, ProxString);
						}
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col3, ProxString);
						}
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col4, ProxString);
						}
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col5, ProxString);
						}
					}
    			}
				else
				{
					SendClientMessage(i, col1, ProxString);
				}
			}
		}
	}
	return 1;
}
public ProxDetector2(Float:radi, playerid, string[],string2[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new ProxString[512];
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					format(ProxString, sizeof(ProxString), "%s%s%s", string, GetPlayerNameEx2(playerid, i), string2);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col1, ProxString);
						}
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col2, ProxString);
						}
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col3, ProxString);
						}
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col4, ProxString);
						}
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col5, ProxString);
						}
					}
    			}
				else
				{
					SendClientMessage(i, col1, ProxString);
				}
			}
		}
	}
	return 1;
}
public ProxDetector3(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new ProxString[512];
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					format(ProxString, sizeof(ProxString), "%s {555555}(( %s ))", string, GetPlayerNameEx2(playerid, i));
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col1, ProxString);
						}
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col2, ProxString);
						}
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col3, ProxString);
						}
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col4, ProxString);
						}
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col5, ProxString);
						}
					}
    			}
				else
				{
					SendClientMessage(i, col1, ProxString);
				}
			}
		}
	}
	return 1;
}
public ProxDetector4(Float:radi, playerid,targetid, string[],string2[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new ProxString[512];
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					format(ProxString, sizeof(ProxString), "%s%s %s'a %s", string, GetPlayerNameEx2(playerid, i),GetPlayerNameEx2(targetid, i), string2);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col1, ProxString);
						}
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col2, ProxString);
						}
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col3, ProxString);
						}
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col4, ProxString);
						}
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col5, ProxString);
						}
					}
    			}
				else
				{
					SendClientMessage(i, col1, ProxString);
				}
			}
		}
	}
	return 1;
}
public ProxDetector5(Float:radi, playerid, string[],string2[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new ProxString[512];
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					format(ProxString, sizeof(ProxString), "%s%s%s", string, GetPlayerNameEx2(playerid, i), string2);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col1, ProxString);
						}
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col2, ProxString);
						}
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col3, ProxString);
						}
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col4, ProxString);
						}
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col5, ProxString);
						}
					}
    			}
				else
				{
					SendClientMessage(i, col1, ProxString);
				}
			}
		}
	}
	return 1;
}
strtok(string[],&idx,seperator = ' ')
{
	new ret[128], i = 0, len = strlen(string);
	while(string[idx] == seperator && idx < len) idx++;
	while(string[idx] != seperator && idx < len)
	{
	    ret[i] = string[idx];
	    i++;
		idx++;
	}
	while(string[idx] == seperator && idx < len) idx++;
	return ret;
}
stock Renk1BoyaYap(playerid, boya1, ucret, tip, zaman)
{
	new form[128];
	if(PlayerInfo[playerid][pCash] < ucret)
	{
		HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
		return 0;
	}
	ModifiyeYapiyor[playerid] = 1;
	ModifiyeTip[playerid] = tip;
	ModifiyeZaman[playerid] = zaman;
	ModifiyeObje[playerid] = boya1;
	ModifiyeUcret[playerid] = ucret;
	PlayerActionMessage(playerid, 15.0, "aracý boyamaya baþlar.");
	format(form, sizeof(form), "%d saniye kalmýþtýr.", zaman);
	PlayerDoMessage(playerid,15.0,form);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);
	AnimYapiyor[playerid] = 1;
	return 1;
}
stock Renk2BoyaYap(playerid, boya2, ucret, tip, zaman)
{
	new form[128];
	if(PlayerInfo[playerid][pCash] < ucret)
	{
		HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
		return 0;
	}
	ModifiyeYapiyor[playerid] = 1;
	ModifiyeTip[playerid] = tip;
	ModifiyeZaman[playerid] = zaman;
	ModifiyeObje[playerid] = boya2;
	ModifiyeUcret[playerid] = ucret;
	TogglePlayerControllable(playerid, 0);
	PlayerActionMessage(playerid, 15.0, "aracý boyamaya baþlar.");
	format(form, sizeof(form), "%d saniye kalmýþtýr.", zaman);
	PlayerDoMessage(playerid,15.0,form);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);
	AnimYapiyor[playerid] = 1;
	return 1;
}
stock ModifiyeYap(playerid, model, ucret, tip, zaman)
{
	new form[128];
	if(PlayerInfo[playerid][pCash] < ucret)
	{
		HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
		return 0;
	}
	ModifiyeYapiyor[playerid] = 1;
	ModifiyeTip[playerid] = tip;
	ModifiyeZaman[playerid] = zaman;
	ModifiyeObje[playerid] = model;
	ModifiyeUcret[playerid] = ucret;
	TogglePlayerControllable(playerid, 0);
	PlayerActionMessage(playerid, 15.0, "aracý modifiye etmeye baþlar.");
	format(form, sizeof(form), "%d saniye kalmýþtýr.", zaman);
	PlayerDoMessage(playerid,15.0,form);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);
	AnimYapiyor[playerid] = 1;
	return 1;
}
stock ModifiyeYap2(playerid, model, model2, ucret, tip, zaman)
{
	new form[128];
	if(PlayerInfo[playerid][pCash] < ucret)
	{
		HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
		return 0;
	}
	ModifiyeYapiyor[playerid] = 1;
	ModifiyeTip[playerid] = tip;
	ModifiyeZaman[playerid] = zaman;
	ModifiyeObje[playerid] = model;
	ModifiyeObje2[playerid] = model2;
	ModifiyeUcret[playerid] = ucret;
	PlayerActionMessage(playerid, 15.0, "aracý modifiye etmeye baþlar.");
	format(form, sizeof(form), "%d saniye kalmýþtýr.", zaman);
	PlayerDoMessage(playerid,15.0,form);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);
	AnimYapiyor[playerid] = 1;
	return 1;
}
stock GivePlayerCash(playerid, money)
{
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerInfo[playerid][pCash] += money;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}
stock SetPlayerCash(playerid, money)
{
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerInfo[playerid][pCash] = money;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}
stock ResetPlayerCash(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}
stock GetPlayerCash(playerid)
{
	return PlayerInfo[playerid][pCash];
}
forward BinaKaydet(binaid);
public BinaKaydet(binaid)
{
    new query[400];
	format(query,sizeof(query),"UPDATE binalar SET descr='%s',eX='%f',eY='%f',eZ='%f' WHERE id=%d",
	Building[binaid][BuildingName],Building[binaid][EnterX],Building[binaid][EnterY],Building[binaid][EnterZ],Building[binaid][SQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE binalar SET eFee='%d',eW='%d',eI='%d',eA='%f',exX='%f',exY='%f' WHERE id=%d",
	Building[binaid][EntranceFee],Building[binaid][EnterWorld],Building[binaid][EnterInterior],Building[binaid][EnterAngle],Building[binaid][ExitX],Building[binaid][ExitY],Building[binaid][SQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE binalar SET exZ='%f', exI='%d',exA='%f', Locked = '%d', PickupID = '%d' WHERE id=%d",
	Building[binaid][ExitZ],Building[binaid][ExitInterior],Building[binaid][ExitAngle],Building[binaid][Locked],Building[binaid][PickupID],Building[binaid][SQLid]);
	mysql_query(query);
}
forward FactionKaydet(factionid);
public FactionKaydet(factionid)
{
	new query[400];
	format(query,sizeof(query),"UPDATE factionlar SET fname='%s',fx='%f',fy='%f',fz='%f',fBank='%d' WHERE id=%d",
	DynamicFactions[factionid][fName],DynamicFactions[factionid][fX],DynamicFactions[factionid][fY],DynamicFactions[factionid][fZ],DynamicFactions[factionid][fBank],DynamicFactions[factionid][fSQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE factionlar SET fRank1='%s',fRank2='%s',fRank3='%s',fRank4='%s',fRank5='%s',fRank6='%s',fRank7='%s',fRank8='%s',fRank9='%s',fRank10='%s' WHERE id=%d",
	DynamicFactions[factionid][fRank1],DynamicFactions[factionid][fRank2],DynamicFactions[factionid][fRank3],DynamicFactions[factionid][fRank4],DynamicFactions[factionid][fRank5],DynamicFactions[factionid][fRank6],DynamicFactions[factionid][fRank7],DynamicFactions[factionid][fRank8],DynamicFactions[factionid][fRank9],DynamicFactions[factionid][fRank10],DynamicFactions[factionid][fSQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE factionlar SET fSkin1='%d',fSkin2='%d',fSkin3='%d',fSkin4='%d',fSkin5='%d',fSkin6='%d',fSkin7='%d',fSkin8='%d',fSkin9='%d',fSkin10='%d' WHERE id=%d",
	DynamicFactions[factionid][fSkin1],DynamicFactions[factionid][fSkin2],DynamicFactions[factionid][fSkin3],DynamicFactions[factionid][fSkin4],DynamicFactions[factionid][fSkin5],DynamicFactions[factionid][fSkin6],DynamicFactions[factionid][fSkin7],DynamicFactions[factionid][fSkin8],DynamicFactions[factionid][fSkin9],DynamicFactions[factionid][fSkin10],DynamicFactions[factionid][fSQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE factionlar SET fJoinRank='%d',fUseSkins='%d',fType='%d',fRankAmount='%d',fColor='%s',fUseColor='%d' WHERE id=%d",
	DynamicFactions[factionid][fJoinRank],DynamicFactions[factionid][fUseSkins],DynamicFactions[factionid][fType],DynamicFactions[factionid][fRankAmount],DynamicFactions[factionid][fColor],DynamicFactions[factionid][fUseColor],DynamicFactions[factionid][fSQLid]);
	mysql_query(query);
	return 1;
}/*
forward WebKaydet(id);
public WebKaydet(id)
{
	new query[728];
	format(query,sizeof(query),"UPDATE web SET line1='%s',line2='%s',line3='%s',line4='%s',line5='%s' WHERE name=%s",
	WebSites[id][wLine1],WebSites[id][wLine2],WebSites[id][wLine3],WebSites[id][wLine4],WebSites[id][wLine5],WebSites[id][wName]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE web SET line6='%s',line7='%s',line8='%s',line9='%s',line10='%s' WHERE name=%s",
	WebSites[id][wLine6],WebSites[id][wLine7],WebSites[id][wLine8],WebSites[id][wLine9],WebSites[id][wLine10],WebSites[id][wName]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE web SET line1='%s',line2='%s',line3='%s',line4='%s',line5='%s' WHERE name=%s",
	WebSites[id][wLine11],WebSites[id][wLine12],WebSites[id][wLine13],WebSites[id][wLine14],WebSites[id][wLine15],WebSites[id][wName]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE web SET silindi='%d' WHERE name=%s",
	WebSites[id][wSilindi],WebSites[id][wName]);
	mysql_query(query);
	return 1;
}*/
forward EvKaydet(houseid);
public EvKaydet(houseid)
{
	new query[400];
	format(query,sizeof(query),"UPDATE evler SET Owner='%s',eX='%f',eY='%f',eZ='%f' WHERE id=%d",
	Houses[houseid][Owner],Houses[houseid][EnterX],Houses[houseid][EnterY],Houses[houseid][EnterZ],Houses[houseid][SQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE evler SET eW='%d',eI='%d',eA='%f',exX='%f',exY='%f',exZ='%f',exI='%d',exA='%f',Owned='%d',Rentable='%d' WHERE id=%d",
	Houses[houseid][EnterWorld],Houses[houseid][EnterInterior],Houses[houseid][EnterAngle],Houses[houseid][ExitX],Houses[houseid][ExitY],Houses[houseid][ExitZ],Houses[houseid][ExitInterior],Houses[houseid][ExitAngle],Houses[houseid][Owned],Houses[houseid][RentCost],Houses[houseid][SQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE evler SET HousePrice = '%d', Materials = '%d', Drugs = '%d', Money = '%d', Locked = '%d', PickupID = '%d' WHERE id=%d",
	Houses[houseid][HousePrice],Houses[houseid][Materials],Houses[houseid][Drugs],Houses[houseid][Money],Houses[houseid][Locked],Houses[houseid][PickupID],Houses[houseid][SQLid]);
	mysql_query(query);
	return 1;
}
forward IsyeriKaydet(businessid);
public IsyeriKaydet(businessid)
{
	new query[400];
	format(query,sizeof(query),"UPDATE isyerleri SET descr='%s',Owner='%s',eX='%f',eY='%f',eZ='%f' WHERE id=%d",
	Businesses[businessid][BusinessName],Businesses[businessid][Owner],Businesses[businessid][EnterX],Businesses[businessid][EnterY],Businesses[businessid][EnterZ],Businesses[businessid][SQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE isyerleri SET eW='%d',eI='%d',eA='%f',exX='%f',exY='%f',exZ='%f',exI='%d',exA='%f',Owned='%d',Enterable='%d' WHERE id=%d",
	Businesses[businessid][EnterWorld],Businesses[businessid][EnterInterior],Businesses[businessid][EnterAngle],Businesses[businessid][ExitX],Businesses[businessid][ExitY],Businesses[businessid][ExitZ],Businesses[businessid][ExitInterior],Businesses[businessid][ExitAngle],Businesses[businessid][Owned],Businesses[businessid][Enterable],Businesses[businessid][SQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE isyerleri SET BizPrice = '%d', Cost = '%d', Till = '%d', Locked = '%d', BizType = '%d', Products  = '%d', PickupID  = '%d' WHERE id=%d",
	Businesses[businessid][BizPrice],Businesses[businessid][EntranceCost],Businesses[businessid][Till],Businesses[businessid][Locked],Businesses[businessid][BizType],Businesses[businessid][Products],Businesses[businessid][PickupID],Businesses[businessid][SQLid]);
	mysql_query(query);
	return 1;
}
forward AracKaydet(vehicleid);
public AracKaydet(vehicleid)
{
	new query[400];
	format(query,sizeof(query),"UPDATE araclar SET Model='%d',cX='%f',cY='%f',cZ='%f',cA='%f' WHERE id=%d",
	DynamicCars[vehicleid][CarModel],DynamicCars[vehicleid][CarX],DynamicCars[vehicleid][CarY],DynamicCars[vehicleid][CarZ],DynamicCars[vehicleid][CarAngle],DynamicCars[vehicleid][cSQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE araclar SET Renk1='%d',Renk2='%d',Fact='%d',Tip='%d',Val='%d',satil='%d',sahip='%s',Plaka='%s',Can='%f',Patla='%d', ModNeon = '%d' WHERE id=%d",
	DynamicCars[vehicleid][CarColor1],DynamicCars[vehicleid][CarColor2],DynamicCars[vehicleid][FactionCar],DynamicCars[vehicleid][CarType],DynamicCars[vehicleid][CarValue],DynamicCars[vehicleid][CarOwned],DynamicCars[vehicleid][CarOwner],DynamicCars[vehicleid][CarDescription],DynamicCars[vehicleid][CarHealth],DynamicCars[vehicleid][AracPatladi],DynamicCars[vehicleid][ModNeon], DynamicCars[vehicleid][cSQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE araclar SET Sigorta = '%d', KazaSayisi = '%d',KiraZaman = '%d' WHERE id=%d",
	DynamicCars[vehicleid][cSigorta],DynamicCars[vehicleid][cKazaSayi],DynamicCars[vehicleid][AracKiraZaman],DynamicCars[vehicleid][cSQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE araclar SET ModPaintjob = '%d', ModSpoiler = '%d', ModRoof = '%d', ModLeftSideSkirt = '%d', ModRightSideSkirt = '%d', ModExhaust = '%d', ModWheels = '%d', ModFrontBumper = '%d', ModRearBumper = '%d', ModStereo = '%d', ModHydraulics = '%d', ModNitro = '%d', ModAlarm = '%d' WHERE id=%d",
	DynamicCars[vehicleid][ModPaintjob],DynamicCars[vehicleid][ModSpoiler],DynamicCars[vehicleid][ModRoof],DynamicCars[vehicleid][ModLeftSideSkirt],DynamicCars[vehicleid][ModRightSideSkirt],DynamicCars[vehicleid][ModExhaust],DynamicCars[vehicleid][ModWheels],DynamicCars[vehicleid][ModFrontBumper],DynamicCars[vehicleid][ModRearBumper],DynamicCars[vehicleid][ModStereo],DynamicCars[vehicleid][ModHydraulics],DynamicCars[vehicleid][ModNitro], DynamicCars[vehicleid][ModAlarm],DynamicCars[vehicleid][cSQLid]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE araclar SET Panels = '%d', Doors = '%d', Lights = '%d', Tires = '%d' WHERE id=%d",
	DynamicCars[vehicleid][Panels],DynamicCars[vehicleid][Doors],DynamicCars[vehicleid][Lights],DynamicCars[vehicleid][Tires],DynamicCars[vehicleid][cSQLid]);
	mysql_query(query);
	return 1;
}
forward OtelKaydet();
public OtelKaydet()
{
	new query[400];
	format(query,sizeof(query),"UPDATE otel SET ResepsiyonX='%f',ResepsiyonY='%f',ResepsiyonZ='%f'",
	DynamicOtel[oResepsiyonX],DynamicOtel[oResepsiyonY],DynamicOtel[oResepsiyonZ]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE otel SET ResepsiyonPick='%d',AsansorX='%f',AsansorY='%f',AsansorZ='%f',AsansorInt='%d',AsansorVW='%d',AsansorPick='%d'",
	DynamicOtel[oResepsiyonPickupID],DynamicOtel[oAsansorX],DynamicOtel[oAsansorY],DynamicOtel[oAsansorZ],DynamicOtel[oAsansorInt],DynamicOtel[oAsansorVW],DynamicOtel[oAsansorPickupID]);
	mysql_query(query);
	return 1;
}
forward MeslekKaydet();
public MeslekKaydet()
{
	new query[400];
	format(query,sizeof(query),"UPDATE meslekler SET TaksiX='%f',TaksiY='%f',TaksiZ='%f',TaksiInt='%d',TaksiVW='%d',TaksiAng='%f',TaksiPick='%d'",
	TaxiJobPosition[X],TaxiJobPosition[Y],TaxiJobPosition[Z],TaxiJobPosition[World],TaxiJobPosition[Interior],TaxiJobPosition[Angle],TaxiJobPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE meslekler SET OtobusX='%f',OtobusY='%f',OtobusZ='%f',OtobusInt='%d',OtobusVW='%d',OtobusAng='%f',OtobusPick='%d'",
	OtobusJobPosition[X],OtobusJobPosition[Y],OtobusJobPosition[Z],OtobusJobPosition[World],OtobusJobPosition[Interior],OtobusJobPosition[Angle],OtobusJobPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE meslekler SET YerX='%f',YerY='%f',YerZ='%f',YerInt='%d',YerVW='%d',YerAng='%f',YerPick='%d'",
	CleanerJobPosition[X],CleanerJobPosition[Y],CleanerJobPosition[Z],CleanerJobPosition[World],CleanerJobPosition[Interior],CleanerJobPosition[Angle],CleanerJobPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE meslekler SET TirX='%f',TirY='%f',TirZ='%f',TirInt='%d',TirVW='%d',TirAng='%f',TirPick='%d'",
	TruckJobPosition[X],TruckJobPosition[Y],TruckJobPosition[Z],TruckJobPosition[World],TruckJobPosition[Interior],TruckJobPosition[Angle],TruckJobPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE meslekler SET GemiX='%f',GemiY='%f',GemiZ='%f',GemiInt='%d',GemiVW='%d',GemiAng='%f',GemiPick='%d'",
	ShippingJobPosition[X],ShippingJobPosition[Y],ShippingJobPosition[Z],ShippingJobPosition[World],ShippingJobPosition[Interior],ShippingJobPosition[Angle],ShippingJobPosition[PickupID]);
	mysql_query(query);
	return 1;
}
forward SunucuBilgiKaydet();
public SunucuBilgiKaydet()
{
	new query[400];
	format(query,sizeof(query),"UPDATE sunucubilgi SET GOOC='%d',OOC='%d',Arac='%d'",
	SunucuBilgi[GOOCDurum],SunucuBilgi[OOCDurum],SunucuBilgi[AracDurum]);
	mysql_query(query);
	return 1;
}
forward LokasyonKaydet();
public LokasyonKaydet()
{
	new query[400];
	format(query,sizeof(query),"UPDATE lokasyonlar SET SivilX='%f',SivilY='%f',SivilZ='%f',SivilInt='%d',SivilVW='%d',SivilAng='%f'",
	CivilianSpawn[X],CivilianSpawn[Y],CivilianSpawn[Z],CivilianSpawn[Interior],CivilianSpawn[World],CivilianSpawn[Angle]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar SET AracTestX='%f',AracTestY='%f',AracTestZ='%f',AracTestInt='%d',AracTestVW='%d',AracTestAng='%f', AracTestPick='%d'",
	DrivingTestPosition[X],DrivingTestPosition[Y],DrivingTestPosition[Z],DrivingTestPosition[Interior],DrivingTestPosition[World],DrivingTestPosition[Angle], DrivingTestPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar SET UcakTestX='%f',UcakTestY='%f',UcakTestZ='%f',UcakTestInt='%d',UcakTestVW='%d',UcakTestAng='%f', UcakTestPick='%d'",
	FlyingTestPosition[X],FlyingTestPosition[Y],FlyingTestPosition[Z],FlyingTestPosition[Interior],FlyingTestPosition[World],FlyingTestPosition[Angle], FlyingTestPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar SET BankaX='%f',BankaY='%f',BankaZ='%f',BankaInt='%d',BankaVW='%d',BankaAng='%f', BankaPick='%d'",
	BankPosition[X],BankPosition[Y],BankPosition[Z],BankPosition[Interior],BankPosition[World],BankPosition[Angle],BankPosition[PickupID]);
	mysql_query(query);
	return 1;
}
forward LokasyonKaydet2();
public LokasyonKaydet2()
{
	new query[400];
	format(query,sizeof(query),"UPDATE lokasyonlar2 SET SilahX='%f',SilahY='%f',SilahZ='%f',SilahInt='%d',SilahVW='%d',SilahAng='%f', SilahPick='%d'",
	WeaponLicensePosition[X],WeaponLicensePosition[Y],WeaponLicensePosition[Z],WeaponLicensePosition[Interior],WeaponLicensePosition[World],WeaponLicensePosition[Angle], WeaponLicensePosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar2 SET HapisX='%f',HapisY='%f',HapisZ='%f',HapisInt='%d',HapisVW='%d',HapisAng='%f', HapisPick='%d'",
	PoliceArrestPosition[X],PoliceArrestPosition[Y],PoliceArrestPosition[Z],PoliceArrestPosition[Interior],PoliceArrestPosition[World],PoliceArrestPosition[Angle], PoliceArrestPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar2 SET IsbasiX='%f',IsbasiY='%f',IsbasiZ='%f',IsbasiInt='%d',IsbasiVW='%d',IsbasiAng='%f', IsbasiPick='%d'",
	PoliceDutyPosition[X],PoliceDutyPosition[Y],PoliceDutyPosition[Z],PoliceDutyPosition[Interior],PoliceDutyPosition[World],PoliceDutyPosition[Angle],PoliceDutyPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar2 SET FBIIsbasiX='%f',FBIIsbasiY='%f',FBIIsbasiZ='%f',FBIIsbasiInt='%d',FBIIsbasiVW='%d',FBIIsbasiAng='%f', FBIIsbasiPick='%d'",
	FBIDutyPosition[X],FBIDutyPosition[Y],FBIDutyPosition[Z],FBIDutyPosition[Interior],FBIDutyPosition[World],FBIDutyPosition[Angle],FBIDutyPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar2 SET AracX='%f',AracY='%f',AracZ='%f',AracVW='%d',AracInt='%d',AracAng='%f'",
	AracSpawnPos[X],AracSpawnPos[Y],AracSpawnPos[Z],AracSpawnPos[World],AracSpawnPos[Interior],AracSpawnPos[Angle]);
	mysql_query(query);
	return 1;
}
forward LokasyonKaydet3();
public LokasyonKaydet3()
{
	new query[400];
	format(query,sizeof(query),"UPDATE lokasyonlar3 SET GemiX='%f',GemiY='%f',GemiZ='%f',GemiVW='%d',GemiInt='%d',GemiAng='%f'",
	GemiSpawnPos[X],GemiSpawnPos[Y],GemiSpawnPos[Z],GemiSpawnPos[World],GemiSpawnPos[Interior],GemiSpawnPos[Angle]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar3 SET SilahX='%f',SilahY='%f',SilahZ='%f',SilahVW='%d',SilahInt='%d',SilahAng='%f',SilahPick='%d'",
	PoliceGunPosition[X],PoliceGunPosition[Y],PoliceGunPosition[Z],PoliceGunPosition[World],PoliceGunPosition[Interior],PoliceGunPosition[Angle],PoliceGunPosition[PickupID]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar3 SET ProX='%f',ProY='%f',ProZ='%f',ProVW='%d',ProInt='%d',ProAng='%f',ProPick='%d',Pro='%d'",
	TruckProPosition[X],TruckProPosition[Y],TruckProPosition[Z],TruckProPosition[World],TruckProPosition[Interior],TruckProPosition[Angle],TruckProPosition[PickupID],TruckProPosition[Urun]);
	mysql_query(query);
	format(query,sizeof(query),"UPDATE lokasyonlar3 SET MatX='%f',MatY='%f',MatZ='%f',MatVW='%d',MatInt='%d',MatAng='%f',MatPick='%d',Mat='%d'",
	ShippingMatPosition[X],ShippingMatPosition[Y],ShippingMatPosition[Z],ShippingMatPosition[World],ShippingMatPosition[Interior],ShippingMatPosition[Angle],ShippingMatPosition[PickupID],ShippingMatPosition[Materyal]);
	mysql_query(query);
	return 1;
}
forward BinaYukle();
public BinaYukle()
{
	new query[100];
	new resultline[1024];
	new arrCoords[16][64];
	mysql_real_escape_string("SELECT * FROM binalar ORDER BY id ASC",query);
	mysql_query(query);
	mysql_store_result();
    for(new idx = 1; idx < sizeof(Building); idx++)
	{
		while(mysql_fetch_row(resultline)==1)
		{
			H_split(resultline, arrCoords, '|');
			Building[idx][SQLid] = strval(arrCoords[0]);
			strmid(Building[idx][BuildingName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			Building[idx][EnterX] = floatstr(arrCoords[2]);
			Building[idx][EnterY] = floatstr(arrCoords[3]);
			Building[idx][EnterZ] = floatstr(arrCoords[4]);
			Building[idx][EntranceFee] = strval(arrCoords[5]);
			Building[idx][EnterWorld] = strval(arrCoords[6]);
			Building[idx][EnterInterior] = strval(arrCoords[7]);
			Building[idx][EnterAngle] = floatstr(arrCoords[8]);
			Building[idx][ExitX] = floatstr(arrCoords[9]);
			Building[idx][ExitY] = floatstr(arrCoords[10]);
			Building[idx][ExitZ] = floatstr(arrCoords[11]);
			Building[idx][ExitInterior] = strval(arrCoords[12]);
			Building[idx][ExitAngle] = floatstr(arrCoords[13]);
			Building[idx][Locked] = strval(arrCoords[14]);
			Building[idx][PickupID] = strval(arrCoords[15]);
			Building[idx][PickupID] = CreateStreamPickup(1239, 1, Building[idx][EnterX], Building[idx][EnterY], Building[idx][EnterZ],PICKUP_RANGE);
			printf("X: %f Y: %f Z:%f BINA: %d",Building[idx][EnterX],Building[idx][EnterY],Building[idx][EnterZ],idx);
			idx++;
		}
	}
}
forward FactionYukle();
public FactionYukle()
{
	new query[100];
	new resultline[1024];
	new arrCoords[32][64];
	mysql_real_escape_string("SELECT * FROM factionlar ORDER BY id ASC",query);
	mysql_query(query);
	mysql_store_result();
    for(new idx = 1; idx < sizeof(DynamicFactions); idx++)
	{
		while(mysql_fetch_row(resultline)==1)
		{
			H_split(resultline, arrCoords, '|');
			DynamicFactions[idx][fSQLid] = strval(arrCoords[0]);
			strmid(DynamicFactions[idx][fName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			DynamicFactions[idx][fX] = floatstr(arrCoords[2]);
			DynamicFactions[idx][fY] = floatstr(arrCoords[3]);
			DynamicFactions[idx][fZ] = floatstr(arrCoords[4]);
			DynamicFactions[idx][fBank] = strval(arrCoords[5]);
			strmid(DynamicFactions[idx][fRank1], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(DynamicFactions[idx][fRank2], arrCoords[7], 0, strlen(arrCoords[7]), 255);
            strmid(DynamicFactions[idx][fRank3], arrCoords[8], 0, strlen(arrCoords[8]), 255);
            strmid(DynamicFactions[idx][fRank4], arrCoords[9], 0, strlen(arrCoords[9]), 255);
            strmid(DynamicFactions[idx][fRank5], arrCoords[10], 0, strlen(arrCoords[10]), 255);
            strmid(DynamicFactions[idx][fRank6], arrCoords[11], 0, strlen(arrCoords[11]), 255);
            strmid(DynamicFactions[idx][fRank7], arrCoords[12], 0, strlen(arrCoords[12]), 255);
            strmid(DynamicFactions[idx][fRank8], arrCoords[13], 0, strlen(arrCoords[13]), 255);
            strmid(DynamicFactions[idx][fRank9], arrCoords[14], 0, strlen(arrCoords[14]), 255);
            strmid(DynamicFactions[idx][fRank10], arrCoords[15], 0, strlen(arrCoords[15]), 255);
			DynamicFactions[idx][fSkin1] = strval(arrCoords[16]);
			DynamicFactions[idx][fSkin2] = strval(arrCoords[17]);
			DynamicFactions[idx][fSkin3] = strval(arrCoords[18]);
			DynamicFactions[idx][fSkin4] = strval(arrCoords[19]);
			DynamicFactions[idx][fSkin5] = strval(arrCoords[20]);
			DynamicFactions[idx][fSkin6] = strval(arrCoords[21]);
			DynamicFactions[idx][fSkin7] = strval(arrCoords[22]);
			DynamicFactions[idx][fSkin8] = strval(arrCoords[23]);
			DynamicFactions[idx][fSkin9] = strval(arrCoords[24]);
			DynamicFactions[idx][fSkin10] = strval(arrCoords[25]);
			DynamicFactions[idx][fJoinRank] = strval(arrCoords[26]);
			DynamicFactions[idx][fUseSkins] = strval(arrCoords[27]);
			DynamicFactions[idx][fType] = strval(arrCoords[28]);
			DynamicFactions[idx][fRankAmount] = strval(arrCoords[29]);
			strmid(DynamicFactions[idx][fColor], arrCoords[30], 0, strlen(arrCoords[30]), 255);
			DynamicFactions[idx][fUseColor] = strval(arrCoords[31]);
			if(idx == 4)
			{
			    AracPickup = CreateStreamPickup(1239, 1, DynamicFactions[4][fX],DynamicFactions[4][fY],DynamicFactions[4][fZ],PICKUP_RANGE);
			}
			idx++;
		}
	}
}
/*
forward WebYukle();
public WebYukle()
{
 	new query[100];
	new resultline[1024];
	new arrCoords[18][64];
	mysql_real_escape_string("SELECT * FROM `web`",query);
	mysql_query(query);
	mysql_store_result();
    for(new idx = 1; idx < 301; idx++)
	{
		while(mysql_fetch_row(resultline)==1)
		{
			H_split(resultline, arrCoords, '|');
			strmid(WebSites[idx][wName], arrCoords[0], 0, strlen(arrCoords[0]), 40);
			WebSites[idx][wSQLid] = strval(arrCoords[1]);
			strmid(WebSites[idx][wLine1], arrCoords[2], 0, strlen(arrCoords[2]), 80);
			strmid(WebSites[idx][wLine2], arrCoords[3], 0, strlen(arrCoords[3]), 80);
			strmid(WebSites[idx][wLine3], arrCoords[4], 0, strlen(arrCoords[4]), 80);
			strmid(WebSites[idx][wLine4], arrCoords[5], 0, strlen(arrCoords[5]), 80);
			strmid(WebSites[idx][wLine5], arrCoords[6], 0, strlen(arrCoords[6]), 80);
			strmid(WebSites[idx][wLine6], arrCoords[7], 0, strlen(arrCoords[7]), 80);
			strmid(WebSites[idx][wLine7], arrCoords[8], 0, strlen(arrCoords[8]), 80);
			strmid(WebSites[idx][wLine8], arrCoords[9], 0, strlen(arrCoords[9]), 80);
			strmid(WebSites[idx][wLine9], arrCoords[10], 0, strlen(arrCoords[10]), 80);
			strmid(WebSites[idx][wLine10], arrCoords[11], 0, strlen(arrCoords[11]), 80);
			strmid(WebSites[idx][wLine11], arrCoords[12], 0, strlen(arrCoords[12]), 80);
			strmid(WebSites[idx][wLine12], arrCoords[13], 0, strlen(arrCoords[13]), 80);
			strmid(WebSites[idx][wLine13], arrCoords[14], 0, strlen(arrCoords[14]), 80);
			strmid(WebSites[idx][wLine14], arrCoords[15], 0, strlen(arrCoords[15]), 80);
			strmid(WebSites[idx][wLine15], arrCoords[16], 0, strlen(arrCoords[16]), 80);
			WebSites[idx][wSilindi] = strval(arrCoords[17]);
			printf("%d yüklendi, name: %s",idx,WebSites[idx][wName]);
			idx++;
		}
	}
}
forward WebYukle();
public WebYukle()
{
	new Query[258], sonuc[100], sonuc1;
	for(new i = 1; i < 301; i++)
	{
		format(Query, sizeof(Query), "SELECT `name` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wName],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line1` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine1],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line2` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine2],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line3` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine3],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line4` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine4],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line5` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine5],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line6` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine6],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line7` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine7],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line8` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine8],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line9` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine9],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line10` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine10],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line11` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine11],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line12` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine12],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line13` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine13],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line14` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine14],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `line15` FROM `web` WHERE `id` = '%d'", i); mysql_query(Query); mysql_store_result();
		if(mysql_fetch_row(sonuc) == 1){ mysql_free_result(); }strmid(WebSites[i][wLine15],sonuc,0,strlen(sonuc),80);
		format(Query, sizeof(Query), "SELECT `sqlid` FROM `web` WHERE `id` = '%d'", i);mysql_query(Query);mysql_store_result();
		sonuc1 = mysql_fetch_int();mysql_free_result();WebSites[i][wSilindi] = sonuc1;
	}
}
*/
forward EvYukle();
public EvYukle()
{
	new query[100];
	new resultline[1024];
	new arrCoords[22][64];
	mysql_real_escape_string("SELECT * FROM evler ORDER BY id ASC",query);
	mysql_query(query);
	mysql_store_result();
	for(new idx = 1; idx < sizeof(Houses); idx++)
	{
		while(mysql_fetch_row(resultline)==1)
		{
			H_split(resultline, arrCoords, '|');
			Houses[idx][SQLid] = strval(arrCoords[0]);
			strmid(Houses[idx][Owner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			Houses[idx][EnterX] = floatstr(arrCoords[2]);
			Houses[idx][EnterY] = floatstr(arrCoords[3]);
			Houses[idx][EnterZ] = floatstr(arrCoords[4]);
			Houses[idx][EnterWorld] = strval(arrCoords[5]);
			Houses[idx][EnterInterior] = strval(arrCoords[6]);
			Houses[idx][EnterAngle] = floatstr(arrCoords[7]);
			Houses[idx][ExitX] = floatstr(arrCoords[8]);
			Houses[idx][ExitY] = floatstr(arrCoords[9]);
			Houses[idx][ExitZ] = floatstr(arrCoords[10]);
			Houses[idx][ExitInterior] = strval(arrCoords[11]);
			Houses[idx][ExitAngle] = floatstr(arrCoords[12]);
			Houses[idx][Owned] = strval(arrCoords[13]);
			Houses[idx][Rentable] = strval(arrCoords[14]);
			Houses[idx][RentCost] = strval(arrCoords[15]);
			Houses[idx][HousePrice] = strval(arrCoords[16]);
			Houses[idx][Materials] = strval(arrCoords[17]);
			Houses[idx][Drugs] = strval(arrCoords[18]);
			Houses[idx][Money] = strval(arrCoords[19]);
			Houses[idx][Locked] = strval(arrCoords[20]);
			Houses[idx][PickupID] = strval(arrCoords[21]);
			Houses[idx][PickupID] = CreateStreamPickup(1273, 1, Houses[idx][EnterX], Houses[idx][EnterY], Houses[idx][EnterZ],PICKUP_RANGE);
			if(Houses[idx][Owned] == 1)
			{
				GetCoords2DZone(Houses[idx][EnterX],Houses[idx][EnterY], houselocation, MAX_ZONE_NAME);
				format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d",Houses[idx][Owner],houselocation, idx);
		    	EvTanimi[idx] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[idx][EnterX], Houses[idx][EnterY], Houses[idx][EnterZ]+1.0, 2, 0, 1);
			}
			else
			{
				GetCoords2DZone(Houses[idx][EnterX],Houses[idx][EnterY], houselocation, MAX_ZONE_NAME);
				format(EvYazi, sizeof(EvYazi), "Bu ev satýlýk!\nÜcret: %d$\nAdres: %s %d\nEvi satýn almak için: /satinal",Houses[idx][HousePrice],houselocation,idx);
		    	EvTanimi[idx] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[idx][EnterX], Houses[idx][EnterY], Houses[idx][EnterZ]+1.0, 2, 0, 1);
	 		}
			if(Houses[idx][Owned] == 1 && Houses[idx][Rentable] == 1)
			{
				GetCoords2DZone(Houses[idx][EnterX],Houses[idx][EnterY], houselocation, MAX_ZONE_NAME);
				format(EvYazi, sizeof(EvYazi), "Bu evin sahibi: %s\nAdres: %s %d\nKira ücreti: %d$\nOda kiralamak için evikirala !",Houses[idx][Owner],houselocation,idx,Houses[idx][RentCost]);
		    	EvTanimi[idx] = Create3DTextLabel(EvYazi ,0xB4B5B7FF, Houses[idx][EnterX], Houses[idx][EnterY], Houses[idx][EnterZ]+1.0, 2, 0, 1);
	 		}
			printf("X: %f - Y: %f - Z: %f BINA ID: %d",Houses[idx][EnterX],Houses[idx][EnterY],Houses[idx][EnterZ],idx);
			idx++;
		}
	}
}
forward IsyeriYukle();
public IsyeriYukle()
{
	new query[100];
	new resultline[1024];
	new arrCoords[23][64];
	mysql_real_escape_string("SELECT * FROM isyerleri ORDER BY id ASC",query);
	mysql_query(query);
	mysql_store_result();
    for(new idx = 0; idx < MAX_BUSINESSES; idx++)
	{
		while(mysql_fetch_row(resultline)==1)
		{
			H_split(resultline, arrCoords, '|');
			Businesses[idx][SQLid] = strval(arrCoords[0]);
			strmid(Businesses[idx][BusinessName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(Businesses[idx][Owner], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			Businesses[idx][EnterX] = floatstr(arrCoords[3]);
			Businesses[idx][EnterY] = floatstr(arrCoords[4]);
			Businesses[idx][EnterZ] = floatstr(arrCoords[5]);
			Businesses[idx][EnterWorld] = strval(arrCoords[6]);
			Businesses[idx][EnterInterior] = strval(arrCoords[7]);
			Businesses[idx][EnterAngle] = floatstr(arrCoords[8]);
			Businesses[idx][ExitX] = floatstr(arrCoords[9]);
			Businesses[idx][ExitY] = floatstr(arrCoords[10]);
			Businesses[idx][ExitZ] = floatstr(arrCoords[11]);
			Businesses[idx][ExitInterior] = strval(arrCoords[12]);
			Businesses[idx][ExitAngle] = floatstr(arrCoords[13]);
			Businesses[idx][Owned] = strval(arrCoords[14]);
			Businesses[idx][Enterable] = strval(arrCoords[15]);
			Businesses[idx][BizPrice] = strval(arrCoords[16]);
			Businesses[idx][EntranceCost] = strval(arrCoords[17]);
			Businesses[idx][Till] = strval(arrCoords[18]);
			Businesses[idx][Locked] = strval(arrCoords[19]);
			Businesses[idx][BizType] = strval(arrCoords[20]);
			Businesses[idx][Products] = strval(arrCoords[21]);
			Businesses[idx][PickupID] = strval(arrCoords[22]);
			Businesses[idx][PickupID] = CreateStreamPickup(1272, 1, Businesses[idx][EnterX], Businesses[idx][EnterY], Businesses[idx][EnterZ],PICKUP_RANGE);
		   	if(Businesses[idx][Owned] == 0)
		    {
				format(IsyeriYazi, sizeof(IsyeriYazi), "Bu iþyeri satýlýk!\nÝþyeri ismi: %s\nÜcret: %d$\nÝþyerini satýn almak için: /satinal",Businesses[idx][BusinessName],Businesses[idx][BizPrice]);
    			IsyeriTanimi[idx] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[idx][EnterX], Businesses[idx][EnterY], Businesses[idx][EnterZ]+1.0, 5, 0, 1);
			}
			else
			{
				format(IsyeriYazi, sizeof(IsyeriYazi), "Ýþyeri ismi: %s\nSahibi: %s\nGiriþ ücreti: %d$",Businesses[idx][BusinessName],Businesses[idx][Owner],Businesses[idx][EntranceCost]);
  				IsyeriTanimi[idx] = Create3DTextLabel(IsyeriYazi ,0xB4B5B7FF, Businesses[idx][EnterX], Businesses[idx][EnterY], Businesses[idx][EnterZ]+1.0, 5, 0, 1);
			}
			idx++;
		}
	}
}

public YerdenKaldir(playerid)
{
    ClearAnimations(playerid);
    Yerde[playerid] = 0;
}

forward AracYukle();
public AracYukle()
{
	new resultline[1024];
	new car[37][64];
	new query[100];
	mysql_real_escape_string("SELECT * FROM araclar ORDER BY id ASC",query);
	mysql_query(query);
	mysql_store_result();
    for(new h = 0; h < sizeof(DynamicCars); h++)
	{
		while(mysql_fetch_row(resultline)==1)
		{
			H_split(resultline, car, '|');
			h = AddStaticVehicleEx(strval(car[1]), floatstr(car[2]), floatstr(car[3]), floatstr(car[4]), floatstr(car[5]), strval(car[6]), strval(car[7]), -1);
			DynamicCars[h][cSQLid] = strval(car[0]);
			DynamicCars[h][CarModel] = strval(car[1]);
			DynamicCars[h][CarX] = floatstr(car[2]);
			DynamicCars[h][CarY] = floatstr(car[3]);
			DynamicCars[h][CarZ] = floatstr(car[4]);
			DynamicCars[h][CarAngle] = floatstr(car[5]);
			DynamicCars[h][CarColor1] = strval(car[6]);
			DynamicCars[h][CarColor2] = strval(car[7]);
			DynamicCars[h][FactionCar] = strval(car[8]);
			DynamicCars[h][CarType] = strval(car[9]);
			DynamicCars[h][CarValue] = strval(car[10]);
			DynamicCars[h][CarOwned] = strval(car[11]);
	        strmid(DynamicCars[h][CarOwner], car[12], 0, strlen(car[12]), 20);
	        strmid(DynamicCars[h][CarDescription],car[13], 0, strlen(car[13]), 20);
			DynamicCars[h][CarHealth] = floatstr(car[14]);
			DynamicCars[h][AracPatladi] = strval(car[15]);
			DynamicCars[h][AracKiraZaman] = strval(car[16]);
			DynamicCars[h][cSigorta] = strval(car[17]);
			DynamicCars[h][cKazaSayi] = strval(car[18]);
			DynamicCars[h][ModPaintjob] = strval(car[19]);
			DynamicCars[h][ModSpoiler] = strval(car[20]);
			DynamicCars[h][ModRoof] = strval(car[21]);
			DynamicCars[h][ModLeftSideSkirt] = strval(car[22]);
			DynamicCars[h][ModRightSideSkirt] = strval(car[23]);
			DynamicCars[h][ModExhaust] = strval(car[24]);
			DynamicCars[h][ModWheels] = strval(car[25]);
			DynamicCars[h][ModFrontBumper] = strval(car[26]);
			DynamicCars[h][ModRearBumper] = strval(car[27]);
			DynamicCars[h][ModStereo] = strval(car[28]);
			DynamicCars[h][ModHydraulics] = strval(car[29]);
			DynamicCars[h][ModNitro] = strval(car[30]);
			DynamicCars[h][ModNeon] = strval(car[31]);
			DynamicCars[h][ModAlarm] = strval(car[32]);
			DynamicCars[h][Panels] = strval(car[33]);
			DynamicCars[h][Doors] = strval(car[34]);
			DynamicCars[h][Lights] = strval(car[35]);
			DynamicCars[h][Tires] = strval(car[36]);
			AraciModifiyeEt(h);
			h++;
		}
	}
}
forward AracEkle(modelid,Float:x,Float:y,Float:z, Float:a, color1, color2, factioncar, cartype, carvalue, carowned, carowner[], plaka[], Float:can, aracpatladi);
public AracEkle(modelid,Float:x,Float:y,Float:z, Float:a, color1, color2, factioncar, cartype, carvalue, carowned, carowner[], plaka[], Float:can, aracpatladi)
{
	new query[300];
	format(query,sizeof(query),"INSERT INTO araclar (Model,cX,cY,cZ,cA,Renk1,Renk2,Fact,Tip,Val,satil,sahip,Plaka,Can,Patla) VALUES (%d,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,'%s','%s',%f,%d)",modelid, x, y, z, a, color1, color2, factioncar, cartype, carvalue, carowned, carowner, plaka, can, aracpatladi);
	mysql_query(query);
	mysql_query("SELECT MAX(id) from araclar");
	mysql_store_result();
	new SQLId[12];
	mysql_fetch_row(SQLId);
	return strval(SQLId);
}
forward AracSil(vehicleid);
public AracSil(vehicleid)
{
	DestroyVehicle(vehicleid);
	SQLAracSil(vehicleid);
	OyunculariAractanAt(vehicleid);
	AracBilgileriniYoket(vehicleid);
}
forward AracBilgileriniYoket(vehicleid);
public AracBilgileriniYoket(vehicleid)
{
	DynamicCars[vehicleid][CarModel] = 0;
	DynamicCars[vehicleid][CarX] = 0;
  	DynamicCars[vehicleid][CarY] = 0;
	DynamicCars[vehicleid][CarZ] = 0;
    DynamicCars[vehicleid][CarAngle] = 0;
	DynamicCars[vehicleid][CarColor1] = 0;
	DynamicCars[vehicleid][CarColor2] = 0;
	DynamicCars[vehicleid][FactionCar] = 255;
	DynamicCars[vehicleid][CarType] = 0;
	DynamicCars[vehicleid][CarValue] = 0;
	DynamicCars[vehicleid][CarOwned] = 0;
	DynamicCars[vehicleid][CarOwner] = 0;
    DynamicCars[vehicleid][CarDescription] = 0;
    DynamicCars[vehicleid][CarHealth] = 1000.000;
  	DynamicCars[vehicleid][AracPatladi] = 0;
  	DynamicCars[vehicleid][AracKiraZaman] = 0;
  	DynamicCars[vehicleid][cSigorta] = 0;
   	DynamicCars[vehicleid][cKazaSayi] = 0;
	DynamicCars[vehicleid][ModPaintjob] = 4;
	DynamicCars[vehicleid][ModSpoiler] = 0;
	DynamicCars[vehicleid][ModRoof] = 0;
	DynamicCars[vehicleid][ModLeftSideSkirt] = 0;
	DynamicCars[vehicleid][ModRightSideSkirt] = 0;
	DynamicCars[vehicleid][ModExhaust] = 0;
	DynamicCars[vehicleid][ModWheels] = 0;
	DynamicCars[vehicleid][ModFrontBumper] = 0;
	DynamicCars[vehicleid][ModRearBumper] = 0;
	DynamicCars[vehicleid][ModStereo] = 0;
	DynamicCars[vehicleid][ModHydraulics] = 0;
	DynamicCars[vehicleid][ModNitro] = 0;
	DynamicCars[vehicleid][ModNeon] = 0;
	DynamicCars[vehicleid][ModAlarm] = 0;
}
forward OyunculariAractanAt(vehicleid);
public OyunculariAractanAt(vehicleid)
{
	new Float:AK, Float:IN, Float:AY;
	for(new i ; i < MAX_PLAYERS ; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsPlayerInVehicle(i, vehicleid))
			{
		    	GetPlayerPos(i, AK,IN,AY);
		    	SetPlayerPos(i, AK,IN,AY);
		    	TogglePlayerControllable(i, 1);
			}
		}
	}
}
forward SQLAracSil(vehicleid);
public SQLAracSil(vehicleid)
{
	new query[100];
	format(query, sizeof(query), "DELETE FROM araclar WHERE id = %d",DynamicCars[vehicleid][cSQLid]);
	mysql_query(query);
	return 1;
}
forward OtelYukle();
public OtelYukle()
{
	new resultline[1024];
	new arrCoords[10][64];
	new query[100];
	mysql_real_escape_string("SELECT * FROM otel",query);
	mysql_query(query);
	mysql_store_result();
	while(mysql_fetch_row(resultline)==1)
	{
		H_split(resultline, arrCoords, '|');
		DynamicOtel[oResepsiyonX] = floatstr(arrCoords[0]);
		DynamicOtel[oResepsiyonY] = floatstr(arrCoords[1]);
		DynamicOtel[oResepsiyonZ] = floatstr(arrCoords[2]);
		DynamicOtel[oResepsiyonPickupID] = strval(arrCoords[3]);
		DynamicOtel[oResepsiyonPickupID] = CreateStreamPickup(1239, 1, DynamicOtel[oResepsiyonX],DynamicOtel[oResepsiyonY],DynamicOtel[oResepsiyonZ],PICKUP_RANGE);
		DynamicOtel[oAsansorX] = floatstr(arrCoords[4]);
		DynamicOtel[oAsansorY] = floatstr(arrCoords[5]);
		DynamicOtel[oAsansorZ] = floatstr(arrCoords[6]);
		DynamicOtel[oAsansorInt] = strval(arrCoords[7]);
		DynamicOtel[oAsansorVW] = strval(arrCoords[8]);
		DynamicOtel[oAsansorPickupID] = strval(arrCoords[9]);
		DynamicOtel[oAsansorPickupID] = CreateStreamPickup(1239, 1, DynamicOtel[oAsansorX],DynamicOtel[oAsansorY],DynamicOtel[oAsansorZ],PICKUP_RANGE);
	}
}
forward MeslekYukle();
public MeslekYukle()
{
	new resultline[1024];
	new arrCoords[35][64];
	new query[100];
	mysql_real_escape_string("SELECT * FROM meslekler",query);
	mysql_query(query);
	mysql_store_result();
	while(mysql_fetch_row(resultline)==1)
	{
		H_split(resultline, arrCoords, '|');
		TaxiJobPosition[X] = floatstr(arrCoords[0]);
		TaxiJobPosition[Y] = floatstr(arrCoords[1]);
		TaxiJobPosition[Z] = floatstr(arrCoords[2]);
		TaxiJobPosition[Interior] = strval(arrCoords[3]);
		TaxiJobPosition[World] = strval(arrCoords[4]);
		TaxiJobPosition[Angle] = floatstr(arrCoords[5]);
		TaxiJobPosition[PickupID] = strval(arrCoords[6]);
		TaxiJobPosition[PickupID] = CreateStreamPickup(1210,1,TaxiJobPosition[X],TaxiJobPosition[Y],TaxiJobPosition[Z],PICKUP_RANGE);
		OtobusJobPosition[X] = floatstr(arrCoords[7]);
		OtobusJobPosition[Y] = floatstr(arrCoords[8]);
		OtobusJobPosition[Z] = floatstr(arrCoords[9]);
		OtobusJobPosition[Interior] = strval(arrCoords[10]);
		OtobusJobPosition[World] = strval(arrCoords[11]);
		OtobusJobPosition[Angle] = floatstr(arrCoords[12]);
		OtobusJobPosition[PickupID] = strval(arrCoords[13]);
		OtobusJobPosition[PickupID] = CreateStreamPickup(1210,1,OtobusJobPosition[X],OtobusJobPosition[Y],OtobusJobPosition[Z],PICKUP_RANGE);
		CleanerJobPosition[X] = floatstr(arrCoords[14]);
		CleanerJobPosition[Y] = floatstr(arrCoords[15]);
		CleanerJobPosition[Z] = floatstr(arrCoords[16]);
		CleanerJobPosition[Interior] = strval(arrCoords[17]);
		CleanerJobPosition[World] = strval(arrCoords[18]);
		CleanerJobPosition[Angle] = floatstr(arrCoords[19]);
		CleanerJobPosition[PickupID] = strval(arrCoords[20]);
		CleanerJobPosition[PickupID] = CreateStreamPickup(1210,1,CleanerJobPosition[X],CleanerJobPosition[Y],CleanerJobPosition[Z],PICKUP_RANGE);
		TruckJobPosition[X] = floatstr(arrCoords[21]);
		TruckJobPosition[Y] = floatstr(arrCoords[22]);
		TruckJobPosition[Z] = floatstr(arrCoords[23]);
		TruckJobPosition[Interior] = strval(arrCoords[24]);
		TruckJobPosition[World] = strval(arrCoords[25]);
		TruckJobPosition[Angle] = floatstr(arrCoords[26]);
		TruckJobPosition[PickupID] = strval(arrCoords[27]);
		TruckJobPosition[PickupID] = CreateStreamPickup(1210,1,TruckJobPosition[X],TruckJobPosition[Y],TruckJobPosition[Z],PICKUP_RANGE);
		ShippingJobPosition[X] = floatstr(arrCoords[28]);
		ShippingJobPosition[Y] = floatstr(arrCoords[29]);
		ShippingJobPosition[Z] = floatstr(arrCoords[30]);
		ShippingJobPosition[Interior] = strval(arrCoords[31]);
		ShippingJobPosition[World] = strval(arrCoords[32]);
		ShippingJobPosition[Angle] = floatstr(arrCoords[33]);
		ShippingJobPosition[PickupID] = strval(arrCoords[34]);
		ShippingJobPosition[PickupID] = CreateStreamPickup(1210,1,ShippingJobPosition[X],ShippingJobPosition[Y],ShippingJobPosition[Z],PICKUP_RANGE);
	}
}
forward SunucuBilgiYukle();
public SunucuBilgiYukle()
{
	new resultline[1024];
	new arrCoords[3][64];
	new query[100];
	mysql_real_escape_string("SELECT * FROM sunucubilgi",query);
	mysql_query(query);
	mysql_store_result();
	while(mysql_fetch_row(resultline)==1)
	{
		H_split(resultline, arrCoords, '|');
		SunucuBilgi[GOOCDurum] = strval(arrCoords[0]);
		SunucuBilgi[OOCDurum] = strval(arrCoords[1]);
		SunucuBilgi[AracDurum] = strval(arrCoords[2]);
	}
}
forward LokasyonYukle();
public LokasyonYukle()
{
	new resultline[1024];
	new arrCoords[27][64];
	new query[100];
	mysql_real_escape_string("SELECT * FROM lokasyonlar",query);
	mysql_query(query);
	mysql_store_result();
	while(mysql_fetch_row(resultline)==1)
	{
		H_split(resultline, arrCoords, '|');
		CivilianSpawn[X] = floatstr(arrCoords[0]);
		CivilianSpawn[Y] = floatstr(arrCoords[1]);
		CivilianSpawn[Z] = floatstr(arrCoords[2]);
		CivilianSpawn[World] = strval(arrCoords[3]);
		CivilianSpawn[Interior] = strval(arrCoords[4]);
		CivilianSpawn[Angle] = floatstr(arrCoords[5]);
		DrivingTestPosition[X] = floatstr(arrCoords[6]);
		DrivingTestPosition[Y] = floatstr(arrCoords[7]);
		DrivingTestPosition[Z] = floatstr(arrCoords[8]);
		DrivingTestPosition[World] = strval(arrCoords[9]);
		DrivingTestPosition[Interior] = strval(arrCoords[10]);
		DrivingTestPosition[Angle] = floatstr(arrCoords[11]);
		DrivingTestPosition[PickupID] = strval(arrCoords[12]);
		DrivingTestPosition[PickupID] = CreateStreamPickup(1239,1,DrivingTestPosition[X],DrivingTestPosition[Y],DrivingTestPosition[Z],PICKUP_RANGE);
		FlyingTestPosition[X] = floatstr(arrCoords[13]);
		FlyingTestPosition[Y] = floatstr(arrCoords[14]);
		FlyingTestPosition[Z] = floatstr(arrCoords[15]);
		FlyingTestPosition[World] = strval(arrCoords[16]);
		FlyingTestPosition[Interior] = strval(arrCoords[17]);
		FlyingTestPosition[Angle] = floatstr(arrCoords[18]);
		FlyingTestPosition[PickupID] = strval(arrCoords[19]);
		FlyingTestPosition[PickupID] = CreateStreamPickup(1239,1,FlyingTestPosition[X],FlyingTestPosition[Y],FlyingTestPosition[Z],PICKUP_RANGE);
	}
}
forward LokasyonYukle2();
public LokasyonYukle2()
{
	new resultline[1024];
	new arrCoords[34][64];
	new query[100];
	mysql_real_escape_string("SELECT * FROM lokasyonlar2",query);
	mysql_query(query);
	mysql_store_result();
	while(mysql_fetch_row(resultline)==1)
	{
		H_split(resultline, arrCoords, '|');
		WeaponLicensePosition[X] = floatstr(arrCoords[0]);
		WeaponLicensePosition[Y] = floatstr(arrCoords[1]);
		WeaponLicensePosition[Z] = floatstr(arrCoords[2]);
		WeaponLicensePosition[World] = strval(arrCoords[3]);
		WeaponLicensePosition[Interior] = strval(arrCoords[4]);
		WeaponLicensePosition[Angle] = floatstr(arrCoords[5]);
		WeaponLicensePosition[PickupID] = strval(arrCoords[6]);
		WeaponLicensePosition[PickupID] = CreateStreamPickup(1239,1,WeaponLicensePosition[X],WeaponLicensePosition[Y],WeaponLicensePosition[Z],PICKUP_RANGE);
		PoliceArrestPosition[X] = floatstr(arrCoords[7]);
		PoliceArrestPosition[Y] = floatstr(arrCoords[8]);
		PoliceArrestPosition[Z] = floatstr(arrCoords[9]);
		PoliceArrestPosition[World] = strval(arrCoords[10]);
		PoliceArrestPosition[Interior] = strval(arrCoords[11]);
		PoliceArrestPosition[Angle] = floatstr(arrCoords[12]);
		PoliceArrestPosition[PickupID] = strval(arrCoords[13]);
		PoliceArrestPosition[PickupID] = CreateStreamPickup(1239,1,PoliceArrestPosition[X],PoliceArrestPosition[Y],PoliceArrestPosition[Z],PICKUP_RANGE);
		PoliceDutyPosition[X] = floatstr(arrCoords[14]);
		PoliceDutyPosition[Y] = floatstr(arrCoords[15]);
		PoliceDutyPosition[Z] = floatstr(arrCoords[16]);
		PoliceDutyPosition[World] = strval(arrCoords[17]);
		PoliceDutyPosition[Interior] = strval(arrCoords[18]);
		PoliceDutyPosition[Angle] = floatstr(arrCoords[19]);
		PoliceDutyPosition[PickupID] = strval(arrCoords[20]);
		PoliceDutyPosition[PickupID] = CreateStreamPickup(1239,1,PoliceDutyPosition[X],PoliceDutyPosition[Y],PoliceDutyPosition[Z],PICKUP_RANGE);
        FBIDutyPosition[X] = floatstr(arrCoords[21]);
		FBIDutyPosition[Y] = floatstr(arrCoords[22]);
		FBIDutyPosition[Z] = floatstr(arrCoords[23]);
		FBIDutyPosition[World] = strval(arrCoords[24]);
		FBIDutyPosition[Interior] = strval(arrCoords[25]);
		FBIDutyPosition[Angle] = floatstr(arrCoords[26]);
		FBIDutyPosition[PickupID] = strval(arrCoords[27]);
		FBIDutyPosition[PickupID] = CreateStreamPickup(1239,1,FBIDutyPosition[X],FBIDutyPosition[Y],FBIDutyPosition[Z],PICKUP_RANGE);
		AracSpawnPos[X] = floatstr(arrCoords[28]);
		AracSpawnPos[Y] = floatstr(arrCoords[29]);
		AracSpawnPos[Z] = floatstr(arrCoords[30]);
		AracSpawnPos[World] = strval(arrCoords[31]);
		AracSpawnPos[Interior] = strval(arrCoords[32]);
		AracSpawnPos[Angle] = floatstr(arrCoords[33]);
	}
}
forward LokasyonYukle3();
public LokasyonYukle3()
{
	new resultline[1024];
	new arrCoords[29][64];
	new query[100];
	mysql_real_escape_string("SELECT * FROM lokasyonlar3",query);
	mysql_query(query);
	mysql_store_result();
	while(mysql_fetch_row(resultline)==1)
	{
		H_split(resultline, arrCoords, '|');
		GemiSpawnPos[X] = floatstr(arrCoords[0]);
		GemiSpawnPos[Y] = floatstr(arrCoords[1]);
		GemiSpawnPos[Z] = floatstr(arrCoords[2]);
		GemiSpawnPos[World] = strval(arrCoords[3]);
		GemiSpawnPos[Interior] = strval(arrCoords[4]);
		GemiSpawnPos[Angle] = floatstr(arrCoords[5]);
		PoliceGunPosition[X] = floatstr(arrCoords[6]);
		PoliceGunPosition[Y] = floatstr(arrCoords[7]);
		PoliceGunPosition[Z] = floatstr(arrCoords[8]);
		PoliceGunPosition[World] = strval(arrCoords[9]);
		PoliceGunPosition[Interior] = strval(arrCoords[10]);
		PoliceGunPosition[Angle] = floatstr(arrCoords[11]);
		PoliceGunPosition[PickupID] = strval(arrCoords[12]);
		PoliceGunPosition[PickupID] = CreateStreamPickup(356,1,PoliceGunPosition[X],PoliceGunPosition[Y],PoliceGunPosition[Z],PICKUP_RANGE);
		TruckProPosition[X] = floatstr(arrCoords[13]);
		TruckProPosition[Y] = floatstr(arrCoords[14]);
		TruckProPosition[Z] = floatstr(arrCoords[15]);
		TruckProPosition[World] = strval(arrCoords[16]);
		TruckProPosition[Interior] = strval(arrCoords[17]);
		TruckProPosition[Angle] = floatstr(arrCoords[18]);
		TruckProPosition[PickupID] = strval(arrCoords[19]);
		TruckProPosition[PickupID] = CreateStreamPickup(1276,1,TruckProPosition[X],TruckProPosition[Y],TruckProPosition[Z],PICKUP_RANGE);
		TruckProPosition[Urun] = strval(arrCoords[20]);
		ShippingMatPosition[X] = floatstr(arrCoords[21]);
		ShippingMatPosition[Y] = floatstr(arrCoords[22]);
		ShippingMatPosition[Z] = floatstr(arrCoords[23]);
		ShippingMatPosition[World] = strval(arrCoords[24]);
		ShippingMatPosition[Interior] = strval(arrCoords[25]);
		ShippingMatPosition[Angle] = floatstr(arrCoords[26]);
		ShippingMatPosition[PickupID] = strval(arrCoords[27]);
		ShippingMatPosition[PickupID] = CreateStreamPickup(1276,1,ShippingMatPosition[X],ShippingMatPosition[Y],ShippingMatPosition[Z],PICKUP_RANGE);
		ShippingMatPosition[Materyal] = strval(arrCoords[28]);
	}
}
stock StopMusic(playerid)
{
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
}
public SyncTime()
{
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		PayDay();
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
	}
}
public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		if(gPlayerLogged[targetid])
		{
			new wstring[128];
			new level = PlayerInfo[targetid][pLevel];
			new exp = PlayerInfo[targetid][pExp];
			new nxtlevel = PlayerInfo[targetid][pLevel]+1;
   			new expamount = nxtlevel*levelexp;
			new drugs = PlayerInfo[targetid][pDrugs];
			new mats = PlayerInfo[targetid][pMaterials];
		    new bank = PlayerInfo[targetid][pBank];
		    new warnings = PlayerInfo[targetid][pWarnings];
    		new vatno = PlayerInfo[targetid][pVatno];
		    new Float:hp;
			GetPlayerHealth(targetid,hp);
 			new age = PlayerInfo[targetid][pAge];
 			new phonenumbertext[128];
			new jobtext[128];
			new weplicense[128];
			new flylicense[128];
			new carlicense[128];
			new ranktext[256];
			new IstenilenKas;
			new Cinsiyet[256];
			new otext[20];
			if(PlayerInfo[targetid][pTenRengi] == 1) { otext = "Açýk Tenli"; }
			else if(PlayerInfo[targetid][pTenRengi] == 2) { otext = "Koyu Tenli"; }
			new mtext[20];
			new evli = 0;
			if(PlayerInfo[targetid][pMedeniHal] == 0) { mtext = "Bekar"; }
			else if(PlayerInfo[targetid][pMedeniHal] == 1) { mtext = "Evli"; }
			if(PlayerInfo[targetid][pMedeniHal] == 0) { evli = 0; }
			else if(PlayerInfo[targetid][pMedeniHal] == 1) { evli = 1; }
			switch(PlayerInfo[targetid][pSex])
			{
			    case 1: Cinsiyet = "Erkek";
			    case 2: Cinsiyet = "Kadýn";
			}
			switch(PlayerInfo[targetid][pKasSeviyesi])
			{
			    case 1: IstenilenKas = 4000;
			    case 2: IstenilenKas = 6000;
			    case 3: IstenilenKas = 8000;
			    case 4: IstenilenKas = 10000;
			    case 5: IstenilenKas = 12000;
			    case 6: IstenilenKas = 14000;
			    case 7: IstenilenKas = 16000;
			    case 8: IstenilenKas = 180000;
			    case 9: IstenilenKas = 20000;
			    case 10: IstenilenKas = 999999;
			}
			switch(PlayerInfo[targetid][pJob])
			{
			    case 0: jobtext = "Yok";
			    case 1: jobtext = "Taksi þöförü";
			    case 2: jobtext = "Otobus þöförü";
			    case 3: jobtext = "Yer temizliyicisi";
			    case 4: jobtext = "Týr þöförü";
			    case 5: jobtext = "Gemi þöförü";
			}
			switch(PlayerInfo[targetid][pCarLic])
			{
			    case 0: carlicense = "Yok";
			    case 1: carlicense = "Var";
			}
			switch(PlayerInfo[targetid][pFlyLic])
			{
			    case 0: flylicense = "Yok";
			    case 1: flylicense = "Var";
			}
			switch(PlayerInfo[targetid][pWepLic])
			{
			    case 0: weplicense = "Yok";
			    case 1: weplicense = "Var";
			}
			if(PlayerInfo[targetid][pPhoneNumber] == 0)
			{
				phonenumbertext = "Yok";
			}
			else
			{
				format(phonenumbertext, sizeof(phonenumbertext), "%d",PlayerInfo[targetid][pPhoneNumber]);
			}
			format(wstring, sizeof(wstring),"{FF4000}[%s]",GetPlayerNameEx(targetid));
			BilgiMesajiGonder(playerid, wstring);
			format(wstring, sizeof(wstring), "Seviye: [%d] - Tecrübe: [%d/%d] - Vatandaþlýk No: [%d]",level,exp,expamount,vatno);
			GenelMesajGonder(playerid, wstring);
			if(evli == 1)
			{
				format(wstring, sizeof(wstring), "Cinsiyet: [%s] - Yaþ: [%d] - Doðum yeri: [%s] - Ten rengi: [%s] - Medeni hal: [%s]", Cinsiyet,age,PlayerInfo[targetid][pDogumYeri],otext,PlayerInfo[targetid][pEvlendigiKisi]);
				GenelMesajGonder(playerid, wstring);
			}
			else
			{
				format(wstring, sizeof(wstring), "Cinsiyet: [%s] - Yaþ: [%d] - Doðum yeri: [%s] - Ten rengi: [%s] - Medeni hal: [%s]", Cinsiyet,age,PlayerInfo[targetid][pDogumYeri],otext,mtext);
				GenelMesajGonder(playerid, wstring);
			}
			format(wstring, sizeof(wstring), "Telefon numarasý: [%s] - Meslek: [%s] - Para: [%d$] - Banka: [%d$] - Ürünler [%d]",phonenumbertext,jobtext,GetPlayerCash(targetid),bank, PlayerInfo[targetid][pProducts]);
			GenelMesajGonder(playerid, wstring);
			format(wstring, sizeof(wstring), "Uyuþturucu: [%d] - Materyal: [%d] - Uyarýlar: [%d] - Kas seviyesi: [%d] - Kas durumu: [%d/%d]",drugs,mats,warnings,PlayerInfo[targetid][pKasSeviyesi],PlayerInfo[targetid][pKasDurumu],IstenilenKas);
			GenelMesajGonder(playerid, wstring);
			format(wstring, sizeof(wstring), "Sürücü lisansý: [%s] - Uçuþ lisansý: [%s] - Silah lisansý: [%s]", carlicense, flylicense, weplicense);
			GenelMesajGonder(playerid, wstring);
		    if(PlayerInfo[targetid][pFaction] != 255)
			{
	      		switch(PlayerInfo[targetid][pRank])
			    {
			        case 1: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank1]);
			        case 2: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank2]);
			        case 3: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank3]);
			        case 4: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank4]);
			        case 5: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank5]);
			        case 6: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank6]);
			        case 7: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank7]);
			        case 8: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank8]);
			        case 9: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank9]);
			        case 10: format(ranktext, sizeof(ranktext), "%s", DynamicFactions[PlayerInfo[targetid][pFaction]][fRank10]);
			    }
		 		format(wstring, sizeof(wstring), "Oluþum: [%s] - Rütbe: [%s]",DynamicFactions[PlayerInfo[targetid][pFaction]][fName],ranktext);
  				GenelMesajGonder(playerid, wstring);
			}
			else
			{
				GenelMesajGonder(playerid, "Oluþum: [Yok] - Rütbe: [Yok]");
			}
		}
	}
}
public KarakterOzellik(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&& IsPlayerConnected(targetid))
	{
        new ztext[20];
        if(PlayerInfo[targetid][pSac] == 1) { ztext = "Cesar"; }
        else if(PlayerInfo[targetid][pSac] == 2) { ztext = "Afro"; }
        else if(PlayerInfo[targetid][pSac] == 3) { ztext = "FlatTop"; }
        else if(PlayerInfo[targetid][pSac] == 4) { ztext = "JheriCurl"; }
        else if(PlayerInfo[targetid][pSac] == 5) { ztext = "Cornrow"; }
        else if(PlayerInfo[targetid][pSac] == 6) { ztext = "HightFade"; }
        else { ztext = "Normal"; }

		new coordsstring[512];
		format(coordsstring, sizeof(coordsstring),"[%s - Fiziksel Özellikler]",GetPlayerNameEx(targetid));
		BilgiMesajiGonder(playerid, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Saç kesimi: [%s]",ztext);
		GenelMesajGonder(playerid, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Karýn: [%s] || Bel: [%s] || Göðüs: [%s]",PlayerInfo[targetid][pDovme1],PlayerInfo[targetid][pDovme2],PlayerInfo[targetid][pDovme3]);
		GenelMesajGonder(playerid, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Sol göðüs: [%s] || Sað göðüs: [%s]",PlayerInfo[targetid][pDovme4],PlayerInfo[targetid][pDovme5]);
		GenelMesajGonder(playerid, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Sol kol üst taraf: [%s] || Sol kol alt taraf: [%s]",PlayerInfo[targetid][pDovme6],PlayerInfo[targetid][pDovme7]);
		GenelMesajGonder(playerid, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Sað kol üst taraf: [%s] || Sað kol alt taraf: [%s] ",PlayerInfo[targetid][pDovme8],PlayerInfo[targetid][pDovme9]);
		GenelMesajGonder(playerid, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Sol bacak üst taraf: [%s] || Sol bacak alt taraf: [%s]",PlayerInfo[playerid][pDovme10],PlayerInfo[targetid][pDovme11]);
		GenelMesajGonder(playerid, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Sað bacak üst taraf: [%s] || Sað bacak alt taraf: [%s]",PlayerInfo[targetid][pDovme12],PlayerInfo[targetid][pDovme13]);
		GenelMesajGonder(playerid, coordsstring);
		/*
		format(coordsstring, sizeof(coordsstring), "Karakter özellikleri: [%s]",PlayerInfo[targetid][pOzellik]);
		GenelMesajGonder(playerid, coordsstring); */
	}
}
public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}
public H_split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
	    if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}
stock IsSkinValid(SkinID) return ((SkinID >= 0 && SkinID <= 1)||(SkinID == 2)||(SkinID == 7)||(SkinID >= 9 && SkinID <= 41)||(SkinID >= 43 && SkinID <= 85)||(SkinID >=87 && SkinID <= 118)||(SkinID >= 120 && SkinID <= 148)||(SkinID >= 150 && SkinID <= 207)||(SkinID >= 209 && SkinID <= 272)||(SkinID >= 274 && SkinID <= 288)||(SkinID >= 290 && SkinID <= 299)) ? true:false;

stock ClearScreen(playerid)
{
	for(new i = 0; i < 150; i++)
	{
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	}
	return 0;
}
stock GetPlayerFirstName(playerid)
{
	new namestring[2][MAX_PLAYER_NAME];
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,MAX_PLAYER_NAME);
	H_split(name, namestring, '_');
	return namestring[0];
}
stock GetPlayerLastName(playerid)
{
	new namestring[2][MAX_PLAYER_NAME];
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,MAX_PLAYER_NAME);
	H_split(name, namestring, '_');
	return namestring[1];
}
stock GetVehicleCount()
{
	new count;
	for(new v = 1; v < MAX_VEHICLES; v++)
	{
		if (IsVehicleSpawned(v)) count++;
	}
	return count;
}
stock IsVehicleSpawned(vehicleid)
{
	new Float:VX,Float:VY,Float:VZ;
	GetVehiclePos(vehicleid,VX,VY,VZ);
	if (VX == 0.0 && VY == 0.0 && VZ == 0.0) return 0;
	return 1;
}
stock GetPlayerIpAddress(playerid)
{
	new IP[16];
	GetPlayerIp(playerid, IP, sizeof(IP));
	return IP;
}
RPName(name[],ret_first[],ret_last[])
{
	new len = strlen(name),
		point = -1,
		bool:done = false;
	for(new i = 0; i < len; i++)
	{
	    if(name[i] == '_')
	    {
	        if(point != -1) return 0;
	        else {
				if(i == 0) return 0;
				point = i + 1;
			}
	    } else if(point == -1) ret_first[i] = name[i];
	    else {
			ret_last[i - point] = name[i];
			done = true;
		}
	}
	if(!done) return 0;
	return 1;
}
forward GivePlayerWeaponEx(playerid,weaponid,ammo);
public GivePlayerWeaponEx(playerid,weaponid,ammo)
{
    OyuncuSilahlari[playerid][weaponid] = true;
    return GivePlayerWeapon(playerid,weaponid,ammo);
}
stock GetPlayerNameEx(playerid)
{
	new str[24];
 	new string[24];
 	GetPlayerName(playerid,string,24);
 	strmid(str,string,0,strlen(string),24);
 	for(new i = 0; i < MAX_PLAYER_NAME; i++)
 	{
  		if (str[i] == '_') str[i] = ' ';
 	}
   	return str;
}
stock GetPlayerNameEx2(playerid, forplayerid)
{
    new string[24];
	new kontrol[69+64];
  	format(kontrol, sizeof(kontrol), "SELECT * FROM `tanis` WHERE `TaninanKisi` = '%d' and `TaniyanKisi` = '%d'", PlayerInfo[playerid][pSQLid],PlayerInfo[forplayerid][pSQLid]);
	mysql_query(kontrol);
	mysql_store_result();
	if(mysql_num_rows() >= 1 || PlayerInfo[playerid][pUnlu] == 1)
	{
	  	format(string, sizeof(string), "%s",GetPlayerNameEx(playerid));
	}
	else if(mysql_num_rows() == 0)
	{
	    format(string, sizeof(string), "%s(%d)",GetPlayerNameEx(playerid),playerid);
 	}
 	if(MaskeKullaniyor[playerid] == 1)
 	{
	    format(string, sizeof(string), "Maskeli_%d",PlayerInfo[playerid][pSQLid]);
 	}
 	if(playerid == forplayerid)
 	{
        format(string, sizeof(string), "%s",GetPlayerNameEx(playerid));
 	}
	return string;

}
stock GetPlayerNameSave(playerid)
{
    new string[24];
    GetPlayerName(playerid,string,24);
    new str[24];
    strmid(str,string,0,strlen(string),24);
    return str;
}
stock GetObjectCount()
{
	new count;
	for(new o; o < MAX_OBJECTS; o++)
	{
		if (IsValidObject(o)) count++;
	}
	return count;
}
IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
		return 0;
}

stock ShowServerPassword()
{
	new pass[128];
	if (strlen(PASSWORD) != 0)
	{
		format(pass, sizeof pass, "%s", PASSWORD);
	}
	else
	{
	    pass = "Yok";
	}
	return pass;
}
stock GetCoords2DZone(Float:x, Float:y, zone[], len)
{
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
stock GetPlayer3DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4] && z >= gSAZones[i][SAZONE_AREA][2] && z <= gSAZones[i][SAZONE_AREA][5])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
stock IsPlayerInZone(playerid, zone[])
{
	new TmpZone[MAX_ZONE_NAME];
	GetPlayer3DZone(playerid, TmpZone, sizeof(TmpZone));
	for(new i = 0; i != sizeof(gSAZones); i++)
	{
		if(strfind(TmpZone, zone, true) != -1)
		return 1;
	}
	return 0;
}

stock WebC(id, sutun[])
{
	new Qquery[128], sonucc[24];
	format(Qquery, sizeof(Qquery), "SELECT `%s` FROM `oyuncular` WHERE `id` = '%d'", sutun, id);
	mysql_query(Qquery);
	mysql_store_result();
	if(mysql_fetch_row(sonucc) == 1)
	{ mysql_free_result(); }
	return sonucc;
}

public SendFactionMessage(playerid, faction, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pFaction] != 255)
   			{
	 			if(PlayerInfo[i][pFaction] == faction)
		  		{
					if(FactionDuyma[i] == 1)
    				{
    				    new FactString[512];
						format(FactString, sizeof(FactString), "%s%s", GetPlayerNameEx2(playerid, i), string);
	 	 				SendClientMessage(i, color, FactString);
					}
				}
			}
		}
	}
	for(new a = 1; a < MAX_PLAYERS+1; a++)
	{
	    if(FIzliyor[a] == 1)
		{
            new FactString[512];
			format(FactString, sizeof(FactString), "[IZLEME] %s%s", GetPlayerNameEx(playerid), string);
			SendClientMessage(a, 0x7B7B7BAA, FactString);
		}
	}
}
public SendFactionMessage2(playerid, faction, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pFaction] != 255)
   			{
	 			if(PlayerInfo[i][pFaction] == faction)
		  		{
					if(FactionDuyma[i] == 1)
    				{
    				    new FactString[512];
						format(FactString, sizeof(FactString), "(( %s%s ))", GetPlayerNameEx2(playerid, i), string);
	 	 				SendClientMessage(i, color, FactString);
					}
				}
			}
		}
	}
}
public SendFactionMessage3(playerid, faction, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pFaction] != 255)
   			{
	 			if(PlayerInfo[i][pFaction] == faction)
		  		{
					if(FactionDuyma[i] == 1)
    				{
    				    new FactString[512];
						format(FactString, sizeof(FactString), "(( 911 ÝHBAR: %s [%s] ))", string, GetPlayerNameEx2(playerid, i));
	 	 				SendClientMessage(i, color, FactString);
					}
				}
			}
		}
	}
}
public SendFactionTypeMessage(factiontype, color, string[])
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
	if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFaction] != 255)
		    {
			 	if(DynamicFactions[PlayerInfo[i][pFaction]][fType] == factiontype)
			  	{
				 	if(DynamicFactions[PlayerInfo[i][pFaction]][fType] == 1)
			  	    {
			  	        if(CopOnDuty[i])
			  	        {
			  	            SendClientMessage(i, color, string);
			  	        }
			  	    }
			  	    else
			  	    {
						SendClientMessage(i, color, string);
					}
				}
			}
		}
	}
}

forward KayitBitiyor(playerid);
public KayitBitiyor(playerid)
{
    	new Dovme[32];
		new EvlendigiKisi[32];
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pCash] = 200;
		PlayerInfo[playerid][pBank] = 0;
		PlayerInfo[playerid][pKasSeviyesi] = 1;
		PlayerInfo[playerid][pKasDurumu] = 0;
		new vatno = 1000000 + random(9000000);
  		PlayerInfo[playerid][pVatno] = vatno;
		new bankno = 10000000 + random(90000000);
  		PlayerInfo[playerid][pBankNumber] = bankno;
		SetPlayerCash(playerid,PlayerInfo[playerid][pCash]);
		format(EvlendigiKisi, sizeof(EvlendigiKisi), "Bekar");
		strmid(PlayerInfo[playerid][pEvlendigiKisi], EvlendigiKisi, 0, strlen(EvlendigiKisi), 32);
		format(Dovme, sizeof(Dovme), "Yok");
		strmid(PlayerInfo[playerid][pDovme1], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme2], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme3], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme4], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme5], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme6], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme7], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme8], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme9], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme10], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme11], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme12], Dovme, 0, strlen(Dovme), 32);
		strmid(PlayerInfo[playerid][pDovme13], Dovme, 0, strlen(Dovme), 32);
		if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 1)
		{
		    new skini = random(4);
		    new skin;
		    if(skini >= 2)
		    {
		        skin = 101;
		    }
		    else
		    {
		        skin = 250;
		    }
		    SetPlayerSkin(playerid, skin);
		    PlayerInfo[playerid][pSkin] = skin;
		}
		if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 2)
		{
		    new skini = random(4);
		    new skin;
		    if(skini >= 2)
		    {
		        skin = 28;
		    }
		    else
		    {
		        skin = 67;
		    }
		    SetPlayerSkin(playerid, skin);
		    PlayerInfo[playerid][pSkin] = skin;
		}
		if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 1)
		{
		    new skini = random(4);
		    new skin;
		    if(skini >= 2)
		    {
		        skin = 195;
		    }
		    else
		    {
		        skin = 191;
		    }
		    SetPlayerSkin(playerid, skin);
		    PlayerInfo[playerid][pSkin] = skin;
		}
		if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 2)
		{
		    SetPlayerSkin(playerid, 190);
		    PlayerInfo[playerid][pSkin] = 190;
		}
		PlayerInfo[playerid][pFaction] = 255;
		PlayerInfo[playerid][pSpawn] = 4;
		PlayerInfo[playerid][pHouseKey] = 255;
		PlayerInfo[playerid][pBizKey] = 255;
		PlayerInfo[playerid][pPhoneC] = 255;
		PlayerInfo[playerid][pDil] = 1;
		PlayerInfo[playerid][pIngilizce] = 5;
		PlayerInfo[playerid][pHP] = 100;
		PlayerInfo[playerid][IlkGiris] = 1;
		ClearScreen(playerid);
		SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin],CivilianSpawn[X],CivilianSpawn[Y],CivilianSpawn[Z],0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
		new yazi[300];
		format(yazi,sizeof(yazi),"Sunucuya hoþ geldiniz, %s.",GetPlayerNameEx(playerid));
		GenelMesajGonder(playerid, yazi);
		IpucuMesajiGonder(playerid,"Sunucu hakkýnda yardým almak için /yardim komutunu kullanabilirsiniz.");
		IpucuMesajiGonder(playerid,"Yöneticilerden yardým istemek için /rapor komutunu kullanabilirsiniz.");
		format(yazi, 300, "%s[%d] karakter kaydýný bitirerek oyuna baþladý.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pSQLid]);
		YoneticiMesajiGonder(yazi);
		TogglePlayerControllable(playerid, true);
		SetPlayerVirtualWorld(playerid,0);
		TextDrawHideForPlayer(playerid, lbt1);
  		TextDrawHideForPlayer(playerid, lbb1);
		return 1;
}

public EkranTimer(playerid, renk[])
{
    TextDrawColor(EkranKapat[playerid],HexToInt(renk));
}

public PickupGametexts()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[512];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			if(oldposx != 0.0 && oldposy != 0.0 && oldposz != 0.0)
			{
				for(new h = 0; h < sizeof(Building); h++)
				{
					if (PlayerToPoint(1.0, i,Building[h][EnterX], Building[h][EnterY], Building[h][EnterZ]))
					{
						if(GetPlayerCash(i) >= Building[h][EntranceFee])
						{
						    if(Building[h][EntranceFee] > 1)
						    {
						    	format(string, sizeof(string), "%s~n~~w~Giris parasi: ~g~%d$",Building[h][BuildingName],Building[h][EntranceFee]);
						    	GameTextForPlayer(i, string, 3500, 3);
							}
							else
							{
								format(string, sizeof(string), "%s",Building[h][BuildingName]);
								GameTextForPlayer(i, string, 3500, 3);
							}
						}
						else
						{
	         				if(Building[h][EntranceFee] > 1)
	         				{
	         					format(string, sizeof(string), "%s~n~~w~Giris parasi: ~r~%d$",Building[h][BuildingName],Building[h][EntranceFee]);
	         					GameTextForPlayer(i, string, 3500, 3);
	         				}
	         				else
	         				{
	         					format(string, sizeof(string), "%s",Building[h][BuildingName]);
	         					GameTextForPlayer(i, string, 3500, 3);
	         				}
						}
					}
				}
				if(TaxiCallTime[i] > 0)
	  	 		{
					if(TaxiAccepted[i] < 999)
					{
						if(IsPlayerConnected(TaxiAccepted[i]))
						{
							new Float:A,Float:B,Float:D;
							GetPlayerPos(TaxiAccepted[i], A, B, D);
							SetPlayerCheckpoint(i, A, B, D, 5);
							gPlayerCheckpointStatus[i] = CHECKPOINT_TAKSI0;
						}
					}
				}
				if(PlayerToPoint(1.0, i,DynamicFactions[4][fX],DynamicFactions[4][fY],DynamicFactions[4][fZ]))
				{
	   				GameTextForPlayer(i, "~r~/arac", 3500, 1);
				}
				else if(PlayerToPoint(1.0, i,PoliceArrestPosition[X], PoliceArrestPosition[Y], PoliceArrestPosition[Z]))
				{
					if(DynamicFactions[PlayerInfo[i][pFaction]][fType] == 1)
					{
	   					GameTextForPlayer(i, "~r~/tutukla", 3500, 1);
	   				}
				}
				else if(PlayerToPoint(1.0, i,PoliceDutyPosition[X], PoliceDutyPosition[Y], PoliceDutyPosition[Z]))
				{
					if(DynamicFactions[PlayerInfo[i][pFaction]][fType] == 1)
					{
	   					GameTextForPlayer(i, "~r~/isbasi", 3500, 1);
	   				}
				}
				else if(PlayerToPoint(1.0, i,FBIDutyPosition[X], FBIDutyPosition[Y], FBIDutyPosition[Z]))
				{
					if(DynamicFactions[PlayerInfo[i][pFaction]][fType] == 2)
					{
	   					GameTextForPlayer(i, "~r~/isbasi", 3500, 1);
	   				}
				}
				else if(PlayerToPoint(1.0, i, 1360.1509,527.5118,1067.7399))
				{
				    GameTextForPlayer(i, "~b~OTOPARK", 3500, 1);
				}
				else if(PlayerToPoint(1.0, i, 1797.3883,-1578.6326,14.0825))
				{
				    GameTextForPlayer(i, "~r~/reklam", 2000, 1);
				}
				else if(PlayerToPoint(1.0, i, 1360.1509,527.5118,1067.7399))
				{
				    GameTextForPlayer(i, "~b~L.S.P.D", 3500, 1);
				}
			}
		}
	}
	return 1;
}
public FuelTimer()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
  			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
    		{
	       		new vehicle = GetPlayerVehicleID(i);
	        	if(Fuel[vehicle] >= 1)
		   		{
		   		    if(!MotorsuzArac(vehicle) && MotorDurumu[vehicle])
		   		    {
		   		        if(DynamicCars[vehicle][CarType] != 5 && DynamicCars[vehicle][CarType] != 6 && DynamicCars[vehicle][CarType] != 7)
						{
			              	Fuel[vehicle]--;
			            }
	              	}
		   		}
	   			else
	           	{
					OutOfFuel[vehicle] = 1;
		        	GameTextForPlayer(i,"~r~Aracin benzini bitti.",1500,3);
					MotorDurumu[vehicle] = 0;
					SetVehicleParamsEx(vehicle, MotorDurumu[vehicle], IsikDurum[vehicle], AlarmDurum[vehicle], KapiDurum[vehicle], KaputDurum[vehicle], BagajDurum[vehicle], ObjeDurum[vehicle]);
				}
			}
		}
     }
 	for(new c=0;c<MAX_VEHICLES;c++)
	{
	    if(MotorDurumu[c])
	    {
	        if(!MotorsuzArac(c) && IsVehicleOccupied(c) == 0)
	        {
		        if(Fuel[c] >= 1)
		        {
		   	     	if(DynamicCars[c][CarType] != 5 && DynamicCars[c][CarType] != 6 && DynamicCars[c][CarType] != 7)
					{
		        		Fuel[c]--;
		        	}
		        }
	        }
	    }
	}
	return 1;
}
public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{
		    return 1;
		}
	}
	return 0;
}
forward IsAtATM(playerid);
public IsAtATM(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(2.0,playerid,1002.74249268,-1131.07690430,23.47102356) || PlayerToPoint(2.0,playerid,1186.19226074,-1368.45996094,13.20566177))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,1549.50939941,-1714.86657715,13.18977451) || PlayerToPoint(2.0,playerid,1810.85009766,-1873.44140625,13.22673321))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,1928.70141602,-1784.40222168,13.18977451) || PlayerToPoint(2.0,playerid,2177.94360352,-1773.70129395,13.18493748))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,2404.37548828,-1229.14221191,23.47792816) || PlayerToPoint(2.0,playerid,2419.77197266,-1506.12145996,23.64289856))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,2395.40869141,-1899.03894043,13.18977451) || PlayerToPoint(2.0,playerid,1140.31286621,-1659.84338379,13.59602451))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,810.86120605,-1797.35278320,12.66633701) || PlayerToPoint(2.0,playerid,394.08135986,-2051.06762695,7.47883701))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,603.25732422,-1248.50671387,18.07224274) || PlayerToPoint(2.0,playerid,946.42767334,-984.87750244,38.42980957))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,1736.61889648,-1267.45153809,13.18551064) || PlayerToPoint(2.0,playerid,2235.97509766,-1150.34997559,25.51682281))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,2493.21948242,-1759.34765625,13.18977451) || PlayerToPoint(2.0,playerid,2140.64648438,-1903.89367676,13.19095135))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,2045.54724121,-1921.09985352,13.18977451) || PlayerToPoint(2.0,playerid,1363.73229980,-1752.97949219,13.16567516))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,1023.31549072,-942.95629883,42.06720734) || PlayerToPoint(2.0,playerid,2139.77807617,-1196.98413086,23.68149948))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,2021.16882324,-1406.39147949,16.81385803) || PlayerToPoint(2.0,playerid,1243.25329590,-1560.30676270,13.19736767))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,809.18420410,-1627.14709473,13.02571201) || PlayerToPoint(2.0,playerid,1313.36853027,-898.01428223,39.22102356))
		{
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,978.48022461,-1296.01171875,13.18977451))
		{
		    return 1;
		}
	}
	return 0;
}
public RemoveDriverFromVehicle(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		RemovePlayerFromVehicle(playerid);
		TogglePlayerControllable(playerid,1);
		return 1;
	}
	return 0;
}
public PlayerActionMessage(playerid,Float:radius,message[])
{
	new string[128];
	new string2[128];
	format(string, sizeof(string), "* ");
	format(string2, sizeof(string2), " %s", message);
	ProxDetector5(15.0, playerid, string,string2,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(string, sizeof(string), "* %s %s", GetPlayerNameEx(playerid), message);
	PlayerActionLog(string);
	return 1;
}
public PlayerDoMessage(playerid,Float:radius,message[])
{
	new string[128];
	format(string, sizeof(string), "* %s", message);
	ProxDetector3(15.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(string, sizeof(string), "* %s (( %s ))", message, GetPlayerNameEx(playerid));
	PlayerActionLog(string);
	return 1;
}
public PlayerZarMessage(playerid,Float:radius,message[])
{
	new string[128];
	format(string, sizeof(string), "[ZAR]: * %s", message);
	ProxDetector3(15.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(string, sizeof(string), "[ZAR]: * %s (( %s ))", message, GetPlayerNameEx(playerid));
	PlayerActionLog(string);
	return 1;
}
public PlayerPlayerActionMessage(playerid,targetid,Float:radius,message[])
{
	new string[128];
	new string2[128];
	format(string, sizeof(string), "* ");
	format(string2, sizeof(string2), "%s", message);
	ProxDetector4(15.0, playerid,targetid, string,string2,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(string, sizeof(string), "* %s %s'a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid), message);
	PlayerActionLog(string);
	return 1;
}
public IsVehicleOccupied(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerInVehicle(i,vehicleid))
		return 1;
	}
	return 0;
}
public IsAPlane(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 592 || model == 577 || model == 511 || model == 512 || model == 593 || model == 520 || model == 553 || model == 476 || model == 519 || model == 460 || model == 513)
	{
		return 1;
	}
	return 0;
}
public IsAHelicopter(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 548 || model == 417 || model == 487 || model == 488 || model == 497 || model == 563 || model == 447 || model == 469)
	{
		return 1;
	}
	return 0;
}
public ModifiyeEdilmeyecekArac(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 403 || GetVehicleModel(vehicleid) == 406 ||  GetVehicleModel(vehicleid) == 407 ||  GetVehicleModel(vehicleid) == 408 || GetVehicleModel(vehicleid) == 414 || GetVehicleModel(vehicleid) == 416 || GetVehicleModel(vehicleid) == 417 || GetVehicleModel(vehicleid) == 423 ||
	GetVehicleModel(vehicleid) == 425 || GetVehicleModel(vehicleid) == 427 || GetVehicleModel(vehicleid) == 428 || GetVehicleModel(vehicleid) == 430 || GetVehicleModel(vehicleid) == 431 || GetVehicleModel(vehicleid) == 432 || GetVehicleModel(vehicleid) == 433 || GetVehicleModel(vehicleid) == 434 ||
	GetVehicleModel(vehicleid) == 435 || GetVehicleModel(vehicleid) == 437 || GetVehicleModel(vehicleid) == 443 || GetVehicleModel(vehicleid) == 444 || GetVehicleModel(vehicleid) == 446 || GetVehicleModel(vehicleid) == 447 || GetVehicleModel(vehicleid) == 448 || GetVehicleModel(vehicleid) == 449 ||
	GetVehicleModel(vehicleid) == 450 || GetVehicleModel(vehicleid) == 452 || GetVehicleModel(vehicleid) == 453 || GetVehicleModel(vehicleid) == 454 || GetVehicleModel(vehicleid) == 455 || GetVehicleModel(vehicleid) == 456 || GetVehicleModel(vehicleid) == 457 || GetVehicleModel(vehicleid) == 459 ||
 	GetVehicleModel(vehicleid) == 460 || GetVehicleModel(vehicleid) == 461 || GetVehicleModel(vehicleid) == 462 || GetVehicleModel(vehicleid) == 463 || GetVehicleModel(vehicleid) == 464 || GetVehicleModel(vehicleid) == 465 || GetVehicleModel(vehicleid) == 468 || GetVehicleModel(vehicleid) == 469 ||
 	GetVehicleModel(vehicleid) == 470 || GetVehicleModel(vehicleid) == 471 || GetVehicleModel(vehicleid) == 472 || GetVehicleModel(vehicleid) == 473 || GetVehicleModel(vehicleid) == 476 || GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 484 || GetVehicleModel(vehicleid) == 489 ||
	GetVehicleModel(vehicleid) == 486 || GetVehicleModel(vehicleid) == 487 || GetVehicleModel(vehicleid) == 488 || GetVehicleModel(vehicleid) == 493 || GetVehicleModel(vehicleid) == 494 || GetVehicleModel(vehicleid) == 495 || GetVehicleModel(vehicleid) == 497 || GetVehicleModel(vehicleid) == 498 ||
 	GetVehicleModel(vehicleid) == 499 || GetVehicleModel(vehicleid) == 501 || GetVehicleModel(vehicleid) == 502 || GetVehicleModel(vehicleid) == 503 || GetVehicleModel(vehicleid) == 504 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || GetVehicleModel(vehicleid) == 511 ||
 	GetVehicleModel(vehicleid) == 512 || GetVehicleModel(vehicleid) == 513 || GetVehicleModel(vehicleid) == 514 || GetVehicleModel(vehicleid) == 515 || GetVehicleModel(vehicleid) == 519 || GetVehicleModel(vehicleid) == 520 || GetVehicleModel(vehicleid) == 521 || GetVehicleModel(vehicleid) == 522 ||
 	GetVehicleModel(vehicleid) == 523 || GetVehicleModel(vehicleid) == 524 || GetVehicleModel(vehicleid) == 525 || GetVehicleModel(vehicleid) == 528 || GetVehicleModel(vehicleid) == 530 || GetVehicleModel(vehicleid) == 531 || GetVehicleModel(vehicleid) == 532 || GetVehicleModel(vehicleid) == 537 ||
 	GetVehicleModel(vehicleid) == 538 || GetVehicleModel(vehicleid) == 539 || GetVehicleModel(vehicleid) == 544 || GetVehicleModel(vehicleid) == 548 || GetVehicleModel(vehicleid) == 552 || GetVehicleModel(vehicleid) == 553 || GetVehicleModel(vehicleid) == 556 || GetVehicleModel(vehicleid) == 557 ||
 	GetVehicleModel(vehicleid) == 563 || GetVehicleModel(vehicleid) == 564 || GetVehicleModel(vehicleid) == 568 || GetVehicleModel(vehicleid) == 569 || GetVehicleModel(vehicleid) == 570 || GetVehicleModel(vehicleid) == 571 || GetVehicleModel(vehicleid) == 572 || GetVehicleModel(vehicleid) == 573 ||
 	GetVehicleModel(vehicleid) == 574 || GetVehicleModel(vehicleid) == 577 || GetVehicleModel(vehicleid) == 578 || GetVehicleModel(vehicleid) == 581 || GetVehicleModel(vehicleid) == 582 || GetVehicleModel(vehicleid) == 583 || GetVehicleModel(vehicleid) == 584 || GetVehicleModel(vehicleid) == 586)
	{
		return 1;
	}
 	if(GetVehicleModel(vehicleid) == 588 || GetVehicleModel(vehicleid) == 590 || GetVehicleModel(vehicleid) == 591 || GetVehicleModel(vehicleid) == 592 || GetVehicleModel(vehicleid) == 593 || GetVehicleModel(vehicleid) == 594 || GetVehicleModel(vehicleid) == 595 || GetVehicleModel(vehicleid) == 596 ||
 	GetVehicleModel(vehicleid) == 597 || GetVehicleModel(vehicleid) == 598 || GetVehicleModel(vehicleid) == 599 || GetVehicleModel(vehicleid) == 601 || GetVehicleModel(vehicleid) >= 604)
	{
		return 1;
 	}
 	return 0;
}
public IsABike(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 581 || model == 509 || model == 481 || model == 462 || model == 521 || model == 463 || model == 510 || model == 522 || model == 461 || model == 448 || model == 471 || model == 468 || model == 586)
	{
		return 1;
	}
	return 0;
}
public IsATaxi(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 420)
	{
		return 1;
	}
	return 0;
}
public IsAOtobus(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 437)
	{
		return 1;
	}
	return 0;
}
public IsACleaner(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 574)
	{
		return 1;
	}
	return 0;
}
forward AracGemi(vehicleid);
public AracGemi(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 452 || model == 453 || model == 454 || model == 473 || model == 484)
	{
		return 1;
	}
	return 0;
}
public MotorsuzArac(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 481 || model == 509 || model == 510)
	{
		return 1;
	}
	return 0;
}
stock HexToInt(string[])
{
	if (string[0]==0) return 0;
	new i;
	new cur=1;
	new res=0;
	for (i=strlen(string);i>0;i--)
	{
		if (string[i-1]<58) res=res+cur*(string[i-1]-48); else res=res+cur*(string[i-1]-65+10);
    	cur=cur*16;
	}
	return res;
}
public AddsOn()
{
	adds=1;
	return 1;
}
public EvLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/ev.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public HackLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/hack.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public KickLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public AccountBanLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/accountban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public BanLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public PlayerActionLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/playeraction.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public IsyeriLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/isyeri.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public TalkLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/talk.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public ModifiyeLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/modifiye.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public ParaLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/para.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public SilahLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/silah.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public FactionChatLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/factionchat.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public TelefonLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/telefon.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public PMLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/pm.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public CKLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/ck.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public AracLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/arac.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public OOCLog(string[])
{
	new entry[256];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	format(entry, sizeof(entry), "[%d/%d/%d - %d:%d:%d] %s\r\n",Year, Month, Day, Hour, Minute, Second, string);
	new File:hFile;
	hFile = fopen("S-RP_Scriptfiles/Logs/ooc.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public HangupTimer(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USECELLPHONE)
		{
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			return 1;
		}
	}
	return 0;
}
stock PlayerName(playerid)
{
  new name[255];
  GetPlayerName(playerid, name, 255);
  return name;
}
public IsACopSkin(skinid)
{
	if(skinid == 280 || skinid == 281 || skinid == 282 || skinid == 283 || skinid == 288 || skinid == 284 || skinid == 285 || skinid == 286 || skinid == 287)
	{
		return 1;
	}
	return 0;
}
public JailTimer(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(PlayerInfo[i][pJailed] == 1 || PlayerInfo[i][pJailed] == 2)
	    {
	    	if(PlayerInfo[i][pJailTime] != 0)
	    	{
				PlayerInfo[i][pJailTime]--;
			}
			if(PlayerInfo[i][pJailTime] <= 0)
			{
			    PlayerInfo[i][pJailed] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPlayerSpawn(i);
			}
		}
	}
	return 1;
}
forward OtherTimer();
public OtherTimer()
{
	for(new arac = 0; arac < MAX_VEHICLES; arac++)
	{
		new Float:AracCan;
		new panels,doors,lights,tires;
		GetVehicleHealth(arac, AracCan);
		GetVehicleDamageStatus(arac,panels,doors,lights,tires);
	    if(DynamicCars[arac][AracPatladi] == 1 && DynamicCars[arac][FactionCar] == 255 && DynamicCars[arac][CarType] == 2 && DynamicCars[arac][CarOwned] == 1 && AracCan != 260.0)
	    {
			SetVehicleHealth(arac, 260.0);
		}
	    if(DynamicCars[arac][AracPatladi] == 0 && DynamicCars[arac][FactionCar] == 255 && DynamicCars[arac][CarType] == 2 && DynamicCars[arac][CarOwned] == 1 && AracKaydetmeDurumu[arac] == 1)
	    {
			DynamicCars[arac][CarHealth] = AracCan;
			DynamicCars[arac][Panels] = panels;
			DynamicCars[arac][Doors] = doors;
			DynamicCars[arac][Lights] = lights;
			DynamicCars[arac][Tires] = tires;
			AracKaydet(arac);
		}
		if(DynamicCars[arac][CarType] == 9)
		{
		    DynamicCars[arac][AracKiraZaman]--;
		    if(DynamicCars[arac][AracKiraZaman] <= 0)
		    {
				new string[256];
				DynamicCars[arac][CarType] = 8;
				format(string, sizeof(string), "Kiralik");
				strmid(DynamicCars[arac][CarOwner], string, 0, strlen(string), 20);
				DynamicCars[arac][AracKiraZaman] = 0;
				OyunculariAractanAt(arac);
				AracKaydet(arac);
		    }
		}
	}
	for(new o = 0; o < MAX_PLAYERS; o++)
	{
	    if(PlayerInfo[o][pCash] != GetPlayerMoney(o))
	    {
	        ResetPlayerMoney(o);
	        GivePlayerMoney(o, PlayerInfo[o][pCash]);
	    }
	    if(IsPlayerConnected(o))
		{
		   	new string[256];
		    TanismaSistemi(o);
		    if(IsPlayerInAnyVehicle(o))
	        {
	            if(GetPlayerState(o) == PLAYER_STATE_DRIVER)
	            {
	                if(BarDurum[o] == 0)
	                {
						new AracID = GetPlayerVehicleID(o);
			            SetProgressBarValue(BenzinGosterge[o], Fuel[AracID]);
					}
	    		}
	        }
	        if(PlayerInfo[o][pSpawn] == 5)
	        {
		        new Float:x,Float:y,Float:z;
		        GetPlayerPos(o,x,y,z);
			    PlayerInfo[o][pSpawnX] = x;
				PlayerInfo[o][pSpawnY] = y;
				PlayerInfo[o][pSpawnZ] = z;
				PlayerInfo[o][pSpawnInt] = GetPlayerInterior(o);
				PlayerInfo[o][pSpawnW] = GetPlayerVirtualWorld(o);
         	}
         	if(DestekEkip[o] == 1)
         	{
				if(DynamicFactions[PlayerInfo[o][pFaction]][fType] == 1)
				{
				    for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
					{
						if(DynamicFactions[PlayerInfo[oyuncu][pFaction]][fType] == 1)
						{
						    if(o != oyuncu)
						    {
								new Float:pX, Float:pY, Float:pZ;
								GetPlayerPos(o, pX, pY, pZ);
								SetPlayerCheckpoint(oyuncu, pX, pY, pZ, 5.0);
							}
						}
					}
				}
				if(DynamicFactions[PlayerInfo[o][pFaction]][fType] == 2)
				{
				    for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
					{
						if(DynamicFactions[PlayerInfo[oyuncu][pFaction]][fType] == 2)
						{
						    if(o != oyuncu)
						    {
								new Float:pX, Float:pY, Float:pZ;
								GetPlayerPos(o, pX, pY, pZ);
								SetPlayerCheckpoint(oyuncu, pX, pY, pZ, 5.0);
							}
						}
					}
				}
			}
			if(Bunny[o] >= 5)
			{
			    BunnyZaman[o]--;
			    if(BunnyZaman[o] <= 0)
				{
				    Bunny[o] = 0;
				}
			}
			if(BalikTutuyor[o] == 1)
			{
	            if(BalikSure[o] > 0)
	            {
					BalikSure[o]--;
				}
			}
	        if(BalikTutuyor[o] == 1 && BalikSure[o] <= 0)
	        {
				BalikTutuyor[o] = 0;
				BalikSure[o] = 0;
				TogglePlayerControllable(o, 1);
				new balikpara = random(60);
				GivePlayerCash(o, 10+balikpara);
				PlayerDoMessage(o, 15.0, "Bir çok balýk tutmuþtur.");
				format(string, sizeof(string), "Tuttuðunuz balýklardan %d$ para kazandýnýz.", 10+balikpara);
				BilgiMesajiGonder(o, string);
				IpucuMesajiGonder(o, "Birdaha balýk tutmak için: {86D060}/baliktut");
				DisablePlayerCheckpoint(o);
	        }
	        if(TirTurunda[o] == 1)
	        {
				if(gPlayerCheckpointStatus[o] == CHECKPOINT_TIRCILIK7)
				{
				    TasidigiYukZaman[o]--;
				    if(TasidigiYukZaman[o] <= 0)
				    {
				        TogglePlayerControllable(o, 1);
				        DisablePlayerCheckpoint(o);
				        gPlayerCheckpointStatus[o] = CHECKPOINT_TIRCILIK8;
				        SetPlayerCheckpoint(o, 144.3526,-281.7452,1.3511, 5.0);
						BilgiMesajiGonder(o, "Ürünler araca yüklendi.");
				    }
				}
			}
	        if(GemiTurunda[o] == 1)
	        {
				if(gPlayerCheckpointStatus[o] == CHECKPOINT_GEMICILIK14)
				{
				    TasidigiYukZaman[o]--;
				    if(TasidigiYukZaman[o] <= 0)
				    {
				        TogglePlayerControllable(o, 1);
				        DisablePlayerCheckpoint(o);
				        gPlayerCheckpointStatus[o] = CHECKPOINT_GEMICILIK15;
				        SetPlayerCheckpoint(o, -1492.3344,219.2717,-0.6040, 5.0);
						BilgiMesajiGonder(o, "Materyaller gemiye yüklendi.");
				    }
				}
			}
	        if(TamirEdiyor[o] == 1)
	        {
	            if(TamirSuresi[TamirArac[o]] > 0)
	            {
	            	TamirSuresi[TamirArac[o]]--;
				}
			}
	        if(TamirEdiyor[o] == 1 && TamirSuresi[TamirArac[o]] <= 0)
	        {
				new form[128];
				format(form, sizeof(form), "Araç tamir olmuþtur. - %s - %s",VehicleName[GetVehicleModel(TamirArac[o])-400],DynamicCars[TamirArac[o]][CarDescription]);
				PlayerDoMessage(o,15.0,form);
				PlayerActionMessage(o, 15.0, "Aracý tamir etmeyi býrakýr.");
				DynamicCars[TamirArac[o]][AracPatladi] = 0;
				DynamicCars[TamirArac[o]][CarHealth] = 1000.0;
			    SetVehicleHealth(TamirArac[o], 1000.0);
			    RepairVehicle(TamirArac[o]);
				format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýný tamir etti.", GetPlayerNameEx(o), DynamicCars[TamirArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription]);
				ModifiyeLog(string);
				AracOncedenTamirEdiliyordu[TamirArac[o]] = 0;
				AracTamirOluyor[TamirArac[o]] = 0;
	            TogglePlayerControllable(o, 1);
	            TamirEdiyor[o] = 0;
	            TamirArac[o] = 0;
			}
			if(ModifiyeYapiyor[o] == 1)
			{
	            if(ModifiyeZaman[o] > 0)
	            {
			    	ModifiyeZaman[o]--;
			    }
			}
			if(ModifiyeYapiyor[o] == 1)
			{
				if(ModifiyeTip[o] == 1 && ModifiyeZaman[o] <= 0)
				{
					new Float:angle;
					new Float:cx,Float:cy,Float:cz;
					DynamicCars[ModifiyeArac[o]][ModPaintjob] = 4;
					DynamicCars[ModifiyeArac[o]][CarColor1] = ModifiyeObje[o];
					GetVehiclePos(ModifiyeArac[o],cx,cy,cz);
					GetVehicleZAngle(ModifiyeArac[o], angle);
					DestroyVehicle(ModifiyeArac[o]);
					AracKaydetmeDurumu[ModifiyeArac[o]] = 0;
					CreateVehicle(DynamicCars[ModifiyeArac[o]][CarModel],DynamicCars[ModifiyeArac[o]][CarX],DynamicCars[ModifiyeArac[o]][CarY],DynamicCars[ModifiyeArac[o]][CarZ],DynamicCars[ModifiyeArac[o]][CarAngle],DynamicCars[ModifiyeArac[o]][CarColor1],DynamicCars[ModifiyeArac[o]][CarColor2], -1);
					SetVehicleHealth(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][CarHealth]);
                  	UpdateVehicleDamageStatusEx(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][Panels], DynamicCars[ModifiyeArac[o]][Doors], DynamicCars[ModifiyeArac[o]][Lights], DynamicCars[ModifiyeArac[o]][Tires]);
					AracKaydetmeDurumu[ModifiyeArac[o]] = 1;
					SetVehiclePos(ModifiyeArac[o], cx, cy, cz);
					SetVehicleZAngle(ModifiyeArac[o], angle);
					GivePlayerCash(o, -ModifiyeUcret[o]);
					AraciModifiyeEt(ModifiyeArac[o]);
					SetVehicleNumberPlate(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][CarDescription]);
					SetVehicleParamsEx(ModifiyeArac[o], MotorDurumu[ModifiyeArac[o]], IsikDurum[ModifiyeArac[o]], AlarmDurum[ModifiyeArac[o]], KapiDurum[ModifiyeArac[o]], KaputDurum[ModifiyeArac[o]], BagajDurum[ModifiyeArac[o]], ObjeDurum[ModifiyeArac[o]]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Araç boyanmýþtýr - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý boyamayý býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn 1. rengine %d boyasýný yaptý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 2 && ModifiyeZaman[o] <= 0)
				{
					new Float:angle;
					new Float:cx,Float:cy,Float:cz;
					DynamicCars[ModifiyeArac[o]][ModPaintjob] = 4;
					DynamicCars[ModifiyeArac[o]][CarColor2] = ModifiyeObje[o];
					GetVehiclePos(ModifiyeArac[o],cx,cy,cz);
					GetVehicleZAngle(ModifiyeArac[o], angle);
					DestroyVehicle(ModifiyeArac[o]);
					AracKaydetmeDurumu[ModifiyeArac[o]] = 0;
					CreateVehicle(DynamicCars[ModifiyeArac[o]][CarModel],DynamicCars[ModifiyeArac[o]][CarX],DynamicCars[ModifiyeArac[o]][CarY],DynamicCars[ModifiyeArac[o]][CarZ],DynamicCars[ModifiyeArac[o]][CarAngle],DynamicCars[ModifiyeArac[o]][CarColor1],DynamicCars[ModifiyeArac[o]][CarColor2], -1);
					SetVehicleHealth(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][CarHealth]);
                  	UpdateVehicleDamageStatusEx(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][Panels], DynamicCars[ModifiyeArac[o]][Doors], DynamicCars[ModifiyeArac[o]][Lights], DynamicCars[ModifiyeArac[o]][Tires]);
					AracKaydetmeDurumu[ModifiyeArac[o]] = 1;
					SetVehiclePos(ModifiyeArac[o], cx, cy, cz);
					SetVehicleZAngle(ModifiyeArac[o], angle);
					GivePlayerCash(o, -ModifiyeUcret[o]);
					SetVehicleNumberPlate(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][CarDescription]);
					SetVehicleParamsEx(ModifiyeArac[o], MotorDurumu[ModifiyeArac[o]], IsikDurum[ModifiyeArac[o]], AlarmDurum[ModifiyeArac[o]], KapiDurum[ModifiyeArac[o]], KaputDurum[ModifiyeArac[o]], BagajDurum[ModifiyeArac[o]], ObjeDurum[ModifiyeArac[o]]);
					AraciModifiyeEt(ModifiyeArac[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Araç boyanmýþtýr - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý boyamayý býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn 2. rengine %d boyasýný yaptý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 3 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModSpoiler] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn spoilerýna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 4 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModRoof] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn çatýsýna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 5 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModLeftSideSkirt] = ModifiyeObje[o];
				    DynamicCars[ModifiyeArac[o]][ModRightSideSkirt] = ModifiyeObje2[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn yanlýklarýna %d ve %d numaralý modifiyeleri taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o], ModifiyeObje2[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 6 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModExhaust] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn eksozuna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 7 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModWheels] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn jantlarýna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 8 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModFrontBumper] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn ön tamponuna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 9 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModRearBumper] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn arka tamponuna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 10 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModStereo] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn ses sistemine %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 11 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModHydraulics] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn hidroliðine %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 12 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModNitro] = ModifiyeObje[o];
					AddVehicleComponent(ModifiyeArac[o], ModifiyeObje[o]);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn nitrosuna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 13 && ModifiyeZaman[o] <= 0)
				{
					new Float:angle;
					new Float:cx,Float:cy,Float:cz;
					DynamicCars[ModifiyeArac[o]][ModPaintjob] = ModifiyeObje[o];
					DynamicCars[ModifiyeArac[o]][CarColor2] = 1;
					DynamicCars[ModifiyeArac[o]][CarColor2] = 1;
					GetVehiclePos(ModifiyeArac[o],cx,cy,cz);
					GetVehicleZAngle(ModifiyeArac[o], angle);
					DestroyVehicle(ModifiyeArac[o]);
					AracKaydetmeDurumu[ModifiyeArac[o]] = 0;
					CreateVehicle(DynamicCars[ModifiyeArac[o]][CarModel],DynamicCars[ModifiyeArac[o]][CarX],DynamicCars[ModifiyeArac[o]][CarY],DynamicCars[ModifiyeArac[o]][CarZ],DynamicCars[ModifiyeArac[o]][CarAngle],1,1, -1);
					SetVehicleHealth(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][CarHealth]);
                  	UpdateVehicleDamageStatusEx(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][Panels], DynamicCars[ModifiyeArac[o]][Doors], DynamicCars[ModifiyeArac[o]][Lights], DynamicCars[ModifiyeArac[o]][Tires]);
					AracKaydetmeDurumu[ModifiyeArac[o]] = 1;
					SetVehiclePos(ModifiyeArac[o], cx, cy, cz);
					SetVehicleZAngle(ModifiyeArac[o], angle);
					GivePlayerCash(o, -ModifiyeUcret[o]);
					SetVehicleNumberPlate(ModifiyeArac[o], DynamicCars[ModifiyeArac[o]][CarDescription]);
					SetVehicleParamsEx(ModifiyeArac[o], MotorDurumu[ModifiyeArac[o]], IsikDurum[ModifiyeArac[o]], AlarmDurum[ModifiyeArac[o]], KapiDurum[ModifiyeArac[o]], KaputDurum[ModifiyeArac[o]], BagajDurum[ModifiyeArac[o]], ObjeDurum[ModifiyeArac[o]]);
					ChangeVehicleColor(ModifiyeArac[o],1,1);
					AraciModifiyeEt(ModifiyeArac[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Araç boyanmýþtýr - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý boyamayý býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn paintjobuna %d numaralý rengi yaptý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
	   			}
				if(ModifiyeTip[o] == 14 && ModifiyeZaman[o] <= 0)
				{
				    DynamicCars[ModifiyeArac[o]][ModNeon] = ModifiyeObje[o];
					AracNeon[0][ModifiyeArac[o]] = CreateObject(DynamicCars[ModifiyeArac[o]][ModNeon],0,0,0,0,0,0);
					AracNeon[1][ModifiyeArac[o]] = CreateObject(DynamicCars[ModifiyeArac[o]][ModNeon],0,0,0,0,0,0);
					AttachObjectToVehicle(AracNeon[0][ModifiyeArac[o]], ModifiyeArac[o], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
					AttachObjectToVehicle(AracNeon[1][ModifiyeArac[o]], ModifiyeArac[o], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
					GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn neonuna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
				if(ModifiyeTip[o] == 15 && ModifiyeZaman[o] <= 0)
				{
	                DynamicCars[ModifiyeArac[o]][ModAlarm] = ModifiyeObje[o];
	                GivePlayerCash(o, -ModifiyeUcret[o]);
				 	AracKaydet(ModifiyeArac[o]);
				 	TogglePlayerControllable(o, 1);
				 	new form[128];
					format(form, sizeof(form), "Aracýn modifiyesi tamamlanmýþtýr. - %s - %s",VehicleName[GetVehicleModel(ModifiyeArac[o])-400],DynamicCars[ModifiyeArac[o]][CarDescription]);
					PlayerDoMessage(o,15.0,form);
					PlayerActionMessage(o, 15.0, "aracý modifiye etmeyi býrakýr.");
					format(string, sizeof(string), "%s, %s (%s) adlý kiþinin aracýnýn alarmýna %d numaralý modifiyeyi taktý.", GetPlayerNameEx(o), DynamicCars[ModifiyeArac[o]][CarOwner], DynamicCars[ModifiyeArac[o]][CarDescription], ModifiyeObje[o]);
					ModifiyeLog(string);
					ModifiyeYapiyor[o] = 0;
					ModifiyeTip[o] = 0;
					ModifiyeZaman[o] = 0;
					ModifiyeObje[o] = 0;
					ModifiyeObje2[o] = 0;
					ModifiyeArac[o] = 0;
					ModifiyeUcret[o] = 0;
				}
			}
	 		if(BenchPressTime[o] > 0)
	   		{
	     		BenchPressTime[o] --;
	   		}
		    if(SelectChar[o] == 255)
			{
				format(string, sizeof(string), "~y~Skin ID: ~r~%d~n~~y~Ucret: ~g~%d$",ChosenSkin[o], SkinUcret[o]);
				GameTextForPlayer(o, string, 1000, 3);
			}
			if(TransportTime[o] > 0)
			{
		 		if(TransportTime[o] >= 16)
				{
					TransportTime[o] = 1;
					if(TransportDriver[o] < 999)
					{
						if(IsPlayerConnected(TransportDriver[o]))
						{
							TransportCost[o] += TransportValue[TransportDriver[o]];
						    TransportCost[TransportDriver[o]] = TransportCost[o];
						}
					}
				}
		  		TransportTime[o] += 1;
		  		format(string, sizeof(string), "~r~%d ~w~: ~g~%d$",TransportTime[o],TransportCost[o]);
			    GameTextForPlayer(o, string, 15000, 6);
			}
		}
	}
	return 1;
}
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    if(listid == skineslist)
    {
        if(response)
        {
            SendClientMessage(playerid, 0xFF0000FF, "Skin Deðiþtirildi .");
            SetPlayerSkin(playerid, modelid);
        }
        else SendClientMessage(playerid, 0xFF0000FF, "Skin seçiminden çýktýnýz .");
        return 1;
    }
    else if(listid == skineblist)
    {
        if(response)
        {
            SendClientMessage(playerid, 0xFF0000FF, "Skin Deðiþtirildi .");
            SetPlayerSkin(playerid, modelid);
        }
        else SendClientMessage(playerid, 0xFF0000FF, "Skin seçiminden çýktýnýz .");
        return 1;
    }
    else if(listid == skinbblist)
    {
        if(response)
        {
            SendClientMessage(playerid, 0xFF0000FF, "Skin Deðiþtirildi .");
            SetPlayerSkin(playerid, modelid);
        }
        else SendClientMessage(playerid, 0xFF0000FF, "Skin seçiminden çýktýnýz .");
        return 1;
    }
    else if(listid == skinbslist)
    {
        if(response)
        {
            SendClientMessage(playerid, 0xFF0000FF, "Skin Deðiþtirildi .");
            SetPlayerSkin(playerid, modelid);
        }
        else SendClientMessage(playerid, 0xFF0000FF, "Skin seçiminden çýktýnýz .");
        return 1;
    }
    return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
	if(issuerid != INVALID_PLAYER_ID)
	{
	    /*if(AtesliSilahKontrol(weaponid))
	    {
	        LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	        new wid = GetPlayerWeapon(playerid);
			new ammo = GetPlayerAmmo(playerid);
			if(wid == 0)
			{
				return 1;
			}
		    new Float:xx,Float:yy,Float:zz;
		    GetPlayerPos(playerid, xx,yy,zz);
		    for(new i; i < 251; i++)
		    {
		        if(WeaponInfo[i][wpModel] == 0)
		        {
		    		WeaponInfo[i][wpX] = xx;
		    		WeaponInfo[i][wpY] = yy;
		    		WeaponInfo[i][wpZ] = zz;
		    		WeaponInfo[i][wpAmmo] = ammo;
		    		WeaponInfo[i][wpModel] = wid;
		    		WeaponInfo[i][wpObje] = CreateObject(SilahObjeleri[wid][0],WeaponInfo[i][wpX],WeaponInfo[i][wpY],WeaponInfo[i][wpZ]-1,93.7,120.0,120.0);
		    		RemovePlayerWeapon(playerid,wid);
		    		return 1;
		    	}
		    }
	    }*/
	}
	return 1;
}
forward deagledam(playerid);
forward glockdam(playerid);
forward ak47dam(playerid);
forward m4dam(playerid);
forward tec9dam(playerid);
forward mp5dam(playerid);
forward rifledam(playerid);
forward snipdam(playerid);
public snipdam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {105.0,104.0,103.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public deagledam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {60.0,59.0,61.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public glockdam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {40.0,39.0,41.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public ak47dam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {70.0,69.0,71.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public m4dam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {50.0,49.0,51.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public tec9dam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {50.0,49.0,51.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public mp5dam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {40.0,39.0,41.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public rifledam(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {65.0,64.0,66.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
public OnPlayerShootPlayer(shooter,target,Float:damage)
{
	new OyuncuSilahi = GetPlayerWeapon(shooter);
	if(TaserElinde[shooter] == 1)
	{
	    return 1;
	}
	if(OyuncuSilahi == 24)
	{
	    SetTimerEx("deagledam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 22)
	{
	    SetTimerEx("glockdam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 30)
	{
	    SetTimerEx("ak47dam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 31)
	{
	    SetTimerEx("m4dam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 32)
	{
	    SetTimerEx("tec9dam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 29)
	{
	    SetTimerEx("mp5dam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 25 || OyuncuSilahi == 33)
	{
	    SetTimerEx("rifledam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 34)
	{
	    SetTimerEx("snipdam", 500, false,"i",target);
		return 1;
	}
	else if(OyuncuSilahi == 0)
	{
		if(PlayerInfo[shooter][pKasSeviyesi] == 1)
		{
			SetTimerEx("KasSeviye1", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 2)
		{
			SetTimerEx("KasSeviye2", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 3)
		{
			SetTimerEx("KasSeviye3", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 4)
		{
			SetTimerEx("KasSeviye4", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 5)
		{
			SetTimerEx("KasSeviye5", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 6)
		{
			SetTimerEx("KasSeviye6", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 7)
		{
			SetTimerEx("KasSeviye7", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 8)
		{
			SetTimerEx("KasSeviye8", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 9)
		{
			SetTimerEx("KasSeviye9", 500, false,"i",target);
			return 1;
		}
		if(PlayerInfo[shooter][pKasSeviyesi] == 10)
		{
			SetTimerEx("KasSeviye10", 500, false,"i",target);
			return 1;
		}
	}
    return 1;
}
forward KontrolDurumAyarla(playerid);
public KontrolDurumAyarla(playerid)
{
	KontrolDurum[playerid] = 1;
}
forward TusaBastimi(playerid);
public TusaBastimi(playerid)
{
	if(BenchPresses[playerid] != 0)
	{
	    if(KontrolDurum[playerid] == 1)
		{
	 		if(BenchPresses[playerid] >= 1 && BenchPresses[playerid] <= 29)
	  		{
				new Ok = random(4);
				BenchPresses[playerid]++;
				VerilicekKas[playerid]--;
				if(Ok == 0) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, yukarý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				else if(Ok == 1) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, aþaðý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		 		else if(Ok == 2) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sol ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				else if(Ok == 3) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sað ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
			}
			else
	  		{
	    		OkDurumu[playerid] = 0;
				if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
				{
		 			ClearAnimations(playerid);
				}
				if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
				{
	    			ApplyAnimation(playerid,"benchpress","gym_bp_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
				{
					ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff", 4.0, 0, 0, 0, 1, 0);
	    		}
				SetTimerEx("BenchPressFinish", 1000, false, "i", playerid);
	    	}
	    }
	    else
	    {
	        KillTimer(TusaBastimi(playerid));
		}
	}
}
forward KasSeviye1(playerid);
public KasSeviye1(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan1[3] = {2.0,3.0,4.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan1));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan1[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye2(playerid);
public KasSeviye2(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan2[3] = {4.0,5.0,6.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan2));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan2[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye3(playerid);
public KasSeviye3(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan3[3] = {6.0,7.0,8.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan3));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan3[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye4(playerid);
public KasSeviye4(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan4[3] = {8.0,9.0,10.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan4));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan4[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye5(playerid);
public KasSeviye5(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan5[3] = {10.0,11.0,12.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan5));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan5[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye6(playerid);
public KasSeviye6(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan6[3] = {12.0,13.0,14.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan6));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan6[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye7(playerid);
public KasSeviye7(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan7[3] = {14.0,15.0,16.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan7));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan7[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye8(playerid);
public KasSeviye8(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan8[3] = {16.0,17.0,18.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan8));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan8[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye9(playerid);
public KasSeviye9(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan9[3] = {18.0,19.0,20.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan9));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan9[SallamaSonucuCikanCan]));
	return 0;
}
forward KasSeviye10(playerid);
public KasSeviye10(playerid)
{
	new Float:OyuncuCan;
	GetPlayerHealth(playerid, OyuncuCan);
	new Float:SallamaCan10[3] = {20.0,21.0,22.0};
	new SallamaSonucuCikanCan = random(sizeof(SallamaCan10));
 	SetPlayerHealth(playerid, floatadd(OyuncuCan,-SallamaCan10[SallamaSonucuCikanCan]));
	return 0;
}
public PhoneAnimation(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetTimerEx("HangupTimer", 1000, false, "i", playerid);
		return 1;
	}
	return 0;
}

public LambalariYukle(vehicleid)
{
	if(DynamicCars[vehicleid][ModNeon] != 0)
	{
 		AracNeon[0][vehicleid] = CreateObject(DynamicCars[vehicleid][ModNeon],0,0,0,0,0,0);
		AracNeon[1][vehicleid] = CreateObject(DynamicCars[vehicleid][ModNeon],0,0,0,0,0,0);
		AttachObjectToVehicle(AracNeon[0][vehicleid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		AttachObjectToVehicle(AracNeon[1][vehicleid], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
	if(PolisLamba[0][vehicleid] != 0)
	{
	    PolisLambas(vehicleid);
	}
}

public DrugEffect(playerid)
{
	BilgiMesajiGonder(playerid, "Uyuþturucunun etkisine girdiniz.");
 	SetPlayerWeather(playerid, 500);
    ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);
    SetTimerEx("UndrugEffect", 8000, false, "i", playerid);
	return 1;
}
public UndrugEffect(playerid)
{
	BilgiMesajiGonder(playerid, "Uyuþturucunun etkisinden çýktýnýz.");
 	SetPlayerWeather(playerid, 0);
	DrugsIntake[playerid] = 0;
	return 1;
}

public AnimBitir(playerid)
{
    ClearAnimations(playerid);
    TextDrawHideForPlayer(playerid,EkranKapat[playerid]);
    TogglePlayerControllable(playerid, true);
    Yarali[playerid] = 0;
}

public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
public AtesliSilahKontrol(weaponid)
{
	if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 || weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
	{
	    return 1;
	}
	else
	{
	    return 0;
	}
}
public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
public ResetPlayerWantedLevelEx(playerid)
{
  	SetPlayerWantedLevel(playerid, 0);
	WantedLevel[playerid] = 0;
	return 1;
}
public SetPlayerWantedLevelEx(playerid,level)
{
  	SetPlayerWantedLevel(playerid, level);
	WantedLevel[playerid] = level;
	return 1;
}
public GetPlayerWantedLevelEx(playerid)
{
	return WantedLevel[playerid];
}
public UntasePlayer(playerid)
{
	if(PlayerTased[playerid] == 1)
	{
	    ClearAnimations(playerid);
	    TogglePlayerControllable(playerid,1);
	    PlayerTased[playerid] = 0;
	}
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if (newkeys == KEY_FIRE)
	{
	    if(SigaraIciyor[playerid] == 1)
	    {
	        new Float:KarakterCan;
	        GetPlayerHealth(playerid, KarakterCan);
	        SetPlayerHealth(playerid, KarakterCan+10);
	        if(KarakterCan > 100)
	        {
	            SetPlayerHealth(playerid, 100);
			}
			SigaraKalanHak[playerid]--;
			PlayerActionMessage(playerid, 15.0, "sigarasýndan bir nefes alýr.");
			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_SMOKE_CIGGY)
			{
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
			}
			if(SigaraKalanHak[playerid] <= 0)
			{
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				PlayerDoMessage(playerid, 15.0, "Sigarasý bitmiþtir.");
			    SigaraIciyor[playerid] = 0;
			}
	    }
	    if(TaserElinde[playerid] == 1)
	    {
			if(IsPlayerInAnyVehicle(playerid))
			{
				HataMesajiGonder(playerid, "Araba içerisinde iken taser kullanamazsýnýz.");
			    return 1;
			}
			new suspect = GetClosestPlayer(playerid);
			if(IsPlayerConnected(suspect))
			{
				if(PlayerTased[suspect] == 1)
				{
					HataMesajiGonder(playerid, "Zaten taser uygulanmýþ kiþilere, taser uygulayamazsýnýz.");
					return 1;
				}
				if(PlayerCuffed[suspect] == 1)
				{
					HataMesajiGonder(playerid, "Kelepçelenmiþ kiþilere taser uygulayamazsýnýz.");
					return 1;
				}
				if(GetDistanceBetweenPlayers(playerid,suspect) < 1)
				{
					if(IsPlayerInAnyVehicle(suspect))
					{
						HataMesajiGonder(playerid, "Taser uygulayacaðýnýz kiþi araçta olmamalýdýr.");
						return 1;
					}
					PlayerTased[suspect] = 1;
					new string[256];
					format(string, sizeof(string), "%s size taser uyguladý.", GetPlayerNameEx2(playerid, suspect));
					BilgiMesajiGonder(suspect, string);
					format(string, sizeof(string), "%s adlý kiþiye taser uyguladýnýz.", GetPlayerNameEx2(suspect, playerid));
					BilgiMesajiGonder(playerid, string);
					TogglePlayerControllable(suspect, 0);
					LoopingAnim(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					SetTimerEx("UntasePlayer", 10000, false, "i", suspect);
					PlayerPlayerActionMessage(playerid,suspect,15.0,"taser uygular.");
				}
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if (newkeys == KEY_SECONDARY_ATTACK)
		{
	        if(MotorDurumu[GetPlayerVehicleID(playerid)] == 0)
			{
				RemoveDriverFromVehicle(playerid);
			}
    	}
    }
	new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(newkeys == KEY_SUBMISSION && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(IsikDurum[vehicleid] == 0)
			{
				IsikDurum[vehicleid] = 1;
				SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
				return 1;
			}
			if(IsikDurum[vehicleid] == 1)
			{
				IsikDurum[vehicleid] = 0;
				SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
				return 1;
			}
	    }
  	}
	if (newkeys == KEY_ACTION && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
 	{
  		if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
    	{
			new Float:pX,Float:pY,Float:pZ;
			GetPlayerPos(playerid,pX,pY,pZ);
			new Float:vX,Float:vY,Float:vZ;
			new Found = 0;
			new vid = 0;
    	    if(AracCekiyor[playerid] == 0)
    	    {
				while((vid < MAX_VEHICLES) && (!Found))
				{
	   				vid++;
	   				GetVehiclePos(vid,vX,vY,vZ);
	   				if((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
				    {
	   				    Found = 1;
	   				    AracCekiyor[playerid] = 1;
	   				    AttachTrailerToVehicle(vid, GetPlayerVehicleID(playerid));
	   				    BilgiMesajiGonder(playerid, "Aracý tuttunuz, gidebilirsiniz.");
				    }
				}
			}
			else
			{
   				DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
   				AracCekiyor[playerid] = 0;
   			}
			if(!Found)
   			{
		    }
   		}
   	}
	if (newkeys == KEY_SECONDARY_ATTACK)
	{
	    new string[512];
		if (PlayerToPoint(1.0, playerid,DrivingTestPosition[X],DrivingTestPosition[Y],DrivingTestPosition[Z]))
		{
		    if(GetPlayerVirtualWorld(playerid) == DrivingTestPosition[World])
		    {
		        if(TakingDrivingTest[playerid] == 0)
		        {
					ShowPlayerDialog(playerid, 3800,DIALOG_STYLE_MSGBOX,"Araç ehliyet alýmý","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Araç ehliyeti almassanýz,\npolisler tarafýndan araç\n sürerken yakalandýðýnýzda\nceza yersiniz, almak istiyor musunuz ?\n(500$)\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
			}
		}
		if(PlayerToPoint(1.0, playerid,FlyingTestPosition[X],FlyingTestPosition[Y],FlyingTestPosition[Z]))
		{
    		if(GetPlayerVirtualWorld(playerid) == FlyingTestPosition[World])
	   		{
				ShowPlayerDialog(playerid, 3807,DIALOG_STYLE_MSGBOX,"Uçuþ ehliyet alýmý","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Uçuþ ehliyeti almassanýz,\npolisler tarafýndan hava aracý\n sürerken yakalandýðýnýzda\nceza yersiniz, almak istiyor musunuz ?\n($10000)\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
			}
		}
		if(PlayerToPoint(1.0, playerid,WeaponLicensePosition[X],WeaponLicensePosition[Y],WeaponLicensePosition[Z]))
		{
    		if(GetPlayerVirtualWorld(playerid) == WeaponLicensePosition[World])
	   		{
				ShowPlayerDialog(playerid, 3808,DIALOG_STYLE_MSGBOX,"Silah lisansý alýmý","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Silah lisansý almassanýz,\npolisler tarafýndan üzerinizde\n silah varken yakalandýðýnýzda\nceza yersiniz, almak istiyor musunuz ?\n($2500)\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
			}
		}
		if(PlayerToPoint(1.0, playerid,BankPosition[X],BankPosition[Y],BankPosition[Z]))
		{
    		if(GetPlayerVirtualWorld(playerid) == BankPosition[World])
	   		{
	   		    if(BankaDurum[playerid] == 0)
	   		    {
	   		    	new zttring[256];
					format(zttring, sizeof(zttring), "{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Bankadaki paranýz: %d\nBanka hesap numaranýz: %d\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pBankNumber]);
					ShowPlayerDialog(playerid, 3802,DIALOG_STYLE_MSGBOX,"Banka",zttring,"Ýlerle","Kapat");
					BankaDurum[playerid] = 1;
				}
			}
		}
		if(PlayerToPoint(1.0, playerid,TruckProPosition[X],TruckProPosition[Y],TruckProPosition[Z]))
		{
    		if(GetPlayerVirtualWorld(playerid) == TruckProPosition[World])
	   		{
	   		    if(UrunDurum[playerid] == 0)
	   		    {
	   		    	new zttring[256];
					format(zttring, sizeof(zttring), "{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Ürün deposundaki toplam ürün: %d\nÜrün almak istiyorsanýz, ileriye týklayýnýz.\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", TruckProPosition[Urun]);
					ShowPlayerDialog(playerid, 3810,DIALOG_STYLE_MSGBOX,"Ürün deposu",zttring,"Evet","Kapat");
					UrunDurum[playerid] = 1;
				}
			}
		}
		if(PlayerToPoint(0.60, playerid, 1583.2603,-1637.0574,13.3905) && PlayerInfo[playerid][pFaction] == 1)
		{
		    SetPlayerPos(playerid,1583.3107,-1638.6350,13.3197);
		}
		else if(PlayerToPoint(0.60, playerid, 1583.3107,-1638.6350,13.3197) && PlayerInfo[playerid][pFaction] == 1)
		{
		    SetPlayerPos(playerid,1583.2603,-1637.0574,13.3905);
		}
		
		if(PlayerToPoint(1.0, playerid,ShippingMatPosition[X],ShippingMatPosition[Y],ShippingMatPosition[Z]))
		{
    		if(GetPlayerVirtualWorld(playerid) == ShippingMatPosition[World])
	   		{
	   		    if(MateryalDurum[playerid] == 0)
	   		    {
	     	    	new zttring[256];
					format(zttring, sizeof(zttring), "{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Materyal deposundaki toplam materyal: %d\nMateryal almak istiyorsanýz, ileriye týklayýnýz\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯.", ShippingMatPosition[Materyal]);
					ShowPlayerDialog(playerid, 3812,DIALOG_STYLE_MSGBOX,"Materyal deposu",zttring,"Evet","Kapat");
					MateryalDurum[playerid] = 1;
				}
			}
		}
	 	if(PlayerToPoint(1.0, playerid,DynamicOtel[oResepsiyonX],DynamicOtel[oResepsiyonY],DynamicOtel[oResepsiyonZ]))
		{
			if(PlayerInfo[playerid][pOdaNumarasi] == 0)
			{
	   			ShowPlayerDialog(playerid, 680,DIALOG_STYLE_MSGBOX,"Otel","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Otel odasýný kiralamak istiyor musunuz ?\n(Saat baþý 15$)\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Kirala","Kapat");
			}
		 	else
			{
				format(string, sizeof(string), "{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Sahip olduðunuz odanýn ID: %d\nOtel odanýzýn kirasýný\niptal etmek istiyor musunuz ?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", PlayerInfo[playerid][pOdaNumarasi]);
	   			ShowPlayerDialog(playerid, 681,DIALOG_STYLE_MSGBOX,"Otel",string,"Ýptal et","Kapat");
			}
		}
	 	if(PlayerToPoint(1.0, playerid,DynamicOtel[oAsansorX],DynamicOtel[oAsansorY],DynamicOtel[oAsansorZ]))
		{
		    new Interiorm = GetPlayerInterior(playerid);
		    new VirtualWorld = GetPlayerVirtualWorld(playerid);
		    if(Interiorm == DynamicOtel[oAsansorInt] && VirtualWorld == DynamicOtel[oAsansorVW])
		    {
		        if(AsansorDurum[playerid] == 0)
				{
			       	AsansorDurum[playerid] = 1;
					ShowPlayerDialog(playerid, 682, DIALOG_STYLE_LIST, "Otel asansör","Odama çýk\nOdamý kilitle/kilidini aç\nBaþkasýnýn odasýna git" , "Seç", "Kapat");
				}
			}
		}
		if(PlayerToPoint(1.0, playerid, PoliceGunPosition[X], PoliceGunPosition[Y], PoliceGunPosition[Z]))
		{
			if(DynamicFactions[PlayerInfo[playerid][pFaction]][fType] == 1)
			{
				if(CopOnDuty[playerid] == 1)
				{
					ShowPlayerDialog(playerid, 850, DIALOG_STYLE_LIST, "Ý.E.M silah seçimi","Biber gazý\nJop\nGlock\nShotgun\nMP5\nM4\nÇelik yelek" , "Seç", "Kapat");
				}
			}
		}
		if(PlayerToPoint(1.0, playerid,TaxiJobPosition[X],TaxiJobPosition[Y],TaxiJobPosition[Z]))
		{
		    if(GetPlayerVirtualWorld(playerid) == TaxiJobPosition[World])
		    {
				if(PlayerInfo[playerid][pJob] == 0)
				{
	   				ShowPlayerDialog(playerid, 3809,DIALOG_STYLE_MSGBOX,"Taksicilik mesleði","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Taksicilik mesleðine girerseniz taksi araçlarýný kullanabilir,\nþehir içerisinde müþteri alarak para kazanabilirsiniz,\ngirmek istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Hayir");
				}
				else
				{
					ShowPlayerDialog(playerid, 3814,DIALOG_STYLE_MSGBOX,"Meslekten ayrýlma","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Zaten bir mesleðiniz bulunmakta..\nMesleðinizden $2000 tazminatla ayrýlmak istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Hayir");
				}
		   	}
		}
		if(PlayerToPoint(1.0, playerid,OtobusJobPosition[X],OtobusJobPosition[Y],OtobusJobPosition[Z]))
		{
		    if(GetPlayerVirtualWorld(playerid) == OtobusJobPosition[World])
		    {
				if(PlayerInfo[playerid][pJob] == 0)
				{
	   				ShowPlayerDialog(playerid, 3809,DIALOG_STYLE_MSGBOX,"Otobüscülük mesleði","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Otobüscülük mesleðine girerseniz otobüs araçlarýný kullanabilir,\nþehir içerisinde müþteri alarak para kazanabilirsiniz,\ngirmek istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
				else
				{
					ShowPlayerDialog(playerid, 3814,DIALOG_STYLE_MSGBOX,"Meslekten ayrýlma","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Zaten bir mesleðiniz bulunmakta.\nMesleðinizden $2000 tazminatla ayrýlmak istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
			}
		}
	 	if(PlayerToPoint(1.0, playerid,CleanerJobPosition[X],CleanerJobPosition[Y],CleanerJobPosition[Z]))
		{
		    if(GetPlayerVirtualWorld(playerid) == CleanerJobPosition[World])
		    {
				if(PlayerInfo[playerid][pJob] == 0)
				{
	   				ShowPlayerDialog(playerid, 3809,DIALOG_STYLE_MSGBOX,"Yer temizliyicilik mesleði","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Yer temizleyiciliði mesleðine girerseniz\nyer temizleme araçlarýný kullanabilir,\nþehir içerisindeki pislenmiþ yerleri temizleyerek para kazanabilirsiniz,\ngirmek istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
				else
				{
					ShowPlayerDialog(playerid, 3814,DIALOG_STYLE_MSGBOX,"Meslekten ayrýlma","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Zaten bir mesleðiniz bulunmakta.\nMesleðinizden $2000 tazminatla ayrýlmak istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
			}
		}
		if(PlayerToPoint(1.0, playerid,TruckJobPosition[X],TruckJobPosition[Y],TruckJobPosition[Z]))
		{
		    if(GetPlayerVirtualWorld(playerid) == TruckJobPosition[World])
		    {
				if(PlayerInfo[playerid][pJob] == 0)
				{
	   				ShowPlayerDialog(playerid, 3809,DIALOG_STYLE_MSGBOX,"Týrcýlýk mesleði","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Týrcýlýk mesleðine girerseniz\ntýrcýlýk araçlarýný kullanabilir,\ntýrlar ile yük taþýyarak para kazanabilirsiniz,\ngirmek istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
				else
				{
					ShowPlayerDialog(playerid, 3814,DIALOG_STYLE_MSGBOX,"Meslekten ayrýlma","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Zaten bir mesleðiniz bulunmakta.\nMesleðinizden $2000 tazminatla ayrýlmak istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
			}
		}
		if(PlayerToPoint(1.0, playerid,ShippingJobPosition[X],ShippingJobPosition[Y],ShippingJobPosition[Z]))
		{
		    if(GetPlayerVirtualWorld(playerid) == ShippingJobPosition[World])
		    {
				if(PlayerInfo[playerid][pJob] == 0)
				{
	   				ShowPlayerDialog(playerid, 3809,DIALOG_STYLE_MSGBOX,"Gemicilik mesleði","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Gemicilik mesleðine girerseniz\ngemicilik araçlarýný kullanabilir,\ngemiler ile yük taþýyarak para kazanabilirsiniz,\ngirmek istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
				else
				{
					ShowPlayerDialog(playerid, 3814,DIALOG_STYLE_MSGBOX,"Meslekten ayrýlma","{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Zaten bir mesleðiniz bulunmakta.\nMesleðinizden $2000 tazminatla ayrýlmak istiyor musunuz?\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯","Evet","Kapat");
				}
			}
		}
		if(IsAtATM(playerid))
		{
		    if(BankaDurum[playerid] == 0)
		    {
				new zttring[256];
				format(zttring, sizeof(zttring), "{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯\n{E6E6E6}Bankadaki paranýz: %d\nBanka hesap numaranýz: %d\n{383838}_____________________________\n¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯", PlayerInfo[playerid][pBank], PlayerInfo[playerid][pBankNumber]);
				ShowPlayerDialog(playerid, 3802,DIALOG_STYLE_MSGBOX,"ATM",zttring,"Ýlerle","Kapat");
				BankaDurum[playerid] = 1;
				ATMDurum[playerid] = 1;
			}
		}
		if(PlayerCuffed[playerid] == 1)
		{
		    return 1;
		}
 		for(new i = 0; i < sizeof(BenchPress); i++)
   		{
     		if (IsPlayerInRangeOfPoint(playerid,1.0,BenchPress[i][0], BenchPress[i][1], BenchPress[i][2]))
       		{
				if(BenchPresses[playerid] != 0)
				{
					HataMesajiGonder(playerid, "Zaten bir alet kullanýyorsunuz.");
					return 1;
				}
				if(BenchAvail[i] != 0)
				{
					HataMesajiGonder(playerid, "Kullanmaya çalýþtýðýnýz alet kullanýlmaktadýr.");
					return 1;
				}
				SetPlayerPos(playerid,BenchPress[i][0], BenchPress[i][1], BenchPress[i][2]);
				SetPlayerFacingAngle(playerid,BenchPress[i][3]);
				SetPlayerCameraPos(playerid, BenchPress[i][0]-2, BenchPress[i][1], BenchPress[i][2]+1);
    			SetPlayerCameraLookAt(playerid, BenchPress[i][0], BenchPress[i][1], BenchPress[i][2]);
				BenchAvail[i] = 1;
		 		BenchPressID[playerid] = i;
				BenchPresses[playerid] = 1;
				if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
				{
						ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
				}
				if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
				{
    					ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
				}
				if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
				{
		    			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
				}
    			BilgiMesajiGonder(playerid, "Ekranda çýkan yönlere ard arda basýn.");
   				new Ok = random(4);
				if(Ok == 0) {GenelMesajGonder(playerid, "Yukarý ok tuþuna basýnýz."); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				else if(Ok == 1) {GenelMesajGonder(playerid, "Aþaðý ok tuþuna basýnýz."); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
 				else if(Ok == 2) {GenelMesajGonder(playerid, "Sol ok tuþuna basýnýz."); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				else if(Ok == 3) {GenelMesajGonder(playerid, "Sað ok tuþuna basýnýz."); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				TogglePlayerControllable(playerid,false);
				BenchPressTime[playerid] = 2;
	        }
	    }
		if(PlayerToPoint(3, playerid, 2284.4546,-1134.9675,1053.8984))
		{
			SetPlayerPos(playerid, DynamicOtel[oAsansorX], DynamicOtel[oAsansorY], DynamicOtel[oAsansorZ]);
			SetPlayerInterior(playerid, DynamicOtel[oAsansorInt]);
			SetPlayerVirtualWorld(playerid, DynamicOtel[oAsansorVW]);
			Otelde[playerid] = 0;
			return 1;
		}
		if(PlayerToPoint(1.0, playerid, 1525.0325,-1677.9099,5.8906))
		{
			SetPlayerPos(playerid, 1360.1509,527.5118,1067.7399);
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
		if(PlayerToPoint(1.0, playerid,1360.1509,527.5118,1067.7399))
		{
		    SetPlayerPos(playerid, 1525.0325,-1677.9099,5.8906);
		    SetPlayerVirtualWorld(playerid, 0);
		}
		for(new i = 0; i < sizeof(Building); i++)
		{
			if (PlayerToPoint(1.0, playerid,Building[i][EnterX], Building[i][EnterY], Building[i][EnterZ]))
			{
			    if(GetPlayerVirtualWorld(playerid) == Building[i][EnterWorld])
			    {
					if(Building[i][Locked] == 0)
					{
					    if(GetPlayerCash(playerid) >= Building[i][EntranceFee])
					    {
							SetPlayerInterior(playerid,Building[i][ExitInterior]);
							SetPlayerVirtualWorld(playerid,i);
							SetPlayerPos(playerid,Building[i][ExitX],Building[i][ExitY],Building[i][ExitZ]);
							SetPlayerFacingAngle(playerid,Building[i][ExitAngle]);
							GivePlayerCash(playerid,-Building[i][EntranceFee]);
							TogglePlayerControllable(playerid, 0);
							SetTimerEx("AdamDuzelt", 1000, false,"i",playerid);
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Yeterli paraniz bulunmamaktadir.", 5000, 1);
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
			else if (PlayerToPoint(1, playerid,Building[i][ExitX], Building[i][ExitY], Building[i][ExitZ]))
			{
   				if(GetPlayerVirtualWorld(playerid) == i)
			    {
					if(Building[i][Locked] == 0)
					{
						SetPlayerInterior(playerid,Building[i][EnterInterior]);
						SetPlayerVirtualWorld(playerid,Building[i][EnterWorld]);
						SetPlayerPos(playerid,Building[i][EnterX],Building[i][EnterY],Building[i][EnterZ]);
						SetPlayerFacingAngle(playerid,Building[i][EnterAngle]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
		for(new i = 0; i < sizeof(Houses); i++)
		{
			if (PlayerToPoint(1.0, playerid,Houses[i][EnterX], Houses[i][EnterY], Houses[i][EnterZ]))
			{
				if(GetPlayerVirtualWorld(playerid) == Houses[i][EnterWorld])
			    {
					if(PlayerInfo[playerid][pHouseKey] == i || Houses[i][Locked] == 0)
					{
						SetPlayerInterior(playerid,Houses[i][ExitInterior]);
						SetPlayerPos(playerid,Houses[i][ExitX],Houses[i][ExitY],Houses[i][ExitZ]);
						SetPlayerVirtualWorld(playerid,i);
						SetPlayerFacingAngle(playerid,Houses[i][ExitAngle]);
					}
 					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
			else if (PlayerToPoint(3.0, playerid,Houses[i][ExitX], Houses[i][ExitY], Houses[i][ExitZ]))
			{
   				if(GetPlayerVirtualWorld(playerid) == i)
			    {
			        if(Houses[i][Locked] == 0)
					{
						SetPlayerInterior(playerid,Houses[i][EnterInterior]);
						SetPlayerPos(playerid,Houses[i][EnterX],Houses[i][EnterY],Houses[i][EnterZ]);
						SetPlayerVirtualWorld(playerid,Houses[i][EnterWorld]);
						SetPlayerFacingAngle(playerid,Houses[i][EnterAngle]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
		for(new i = 0; i < sizeof(Businesses); i++)
		{
			if (PlayerToPoint(1.0, playerid,Businesses[i][EnterX], Businesses[i][EnterY], Businesses[i][EnterZ]))
			{
	 			if(GetPlayerVirtualWorld(playerid) == Businesses[i][EnterWorld])
  				{
					if(PlayerInfo[playerid][pBizKey] == i || GetPlayerCash(playerid) >= Businesses[i][EntranceCost])
					{
						if(PlayerInfo[playerid][pBizKey] != i)
						{
							if(Businesses[i][Locked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
								return 1;
							}
							if(Businesses[i][Products] == 0)
							{
								GameTextForPlayer(playerid, "~r~Isyerinin yeterli urunu yok.", 5000, 1);
								return 1;
							}
							if(KiyafetAliyor[playerid] == 1 || Sapka[playerid] > -1 || Rag[playerid] > -1 || Gozluk[playerid] > -1)
							{
								HataMesajiGonder(playerid, "Þuan buradan çýkamazsýnýz.");
								return 1;
							}
                        	if(BenchPresses[playerid] != 0)
                        	{
								HataMesajiGonder(playerid, "Þuan buradan çýkamazsýnýz.");
								return 1;
							}
							GivePlayerCash(playerid,-Businesses[i][EntranceCost]);
							Businesses[i][Till] += Businesses[i][EntranceCost];
							Businesses[i][Products]--;
							SetPlayerInterior(playerid,Businesses[i][ExitInterior]);
							SetPlayerPos(playerid,Businesses[i][ExitX],Businesses[i][ExitY],Businesses[i][ExitZ]);
							SetPlayerVirtualWorld(playerid,i);
							SetPlayerFacingAngle(playerid,Businesses[i][ExitAngle]);
							IsyeriKaydet(i);
						}
						else
						{
							SetPlayerInterior(playerid,Businesses[i][ExitInterior]);
							SetPlayerPos(playerid,Businesses[i][ExitX],Businesses[i][ExitY],Businesses[i][ExitZ]);
							SetPlayerVirtualWorld(playerid,i);
							SetPlayerFacingAngle(playerid,Businesses[i][ExitAngle]);
						}
					}
					else
					{
						HataMesajiGonder(playerid, "Yeterli paranýz bulunmamaktadýr.");
					}
				}
			}
			else if (PlayerToPoint(3, playerid,Businesses[i][ExitX], Businesses[i][ExitY], Businesses[i][ExitZ]))
			{
   				if(GetPlayerVirtualWorld(playerid) == i)
			    {
					if(Businesses[i][Locked] == 0)
					{
						if(KiyafetAliyor[playerid] == 1 || Sapka[playerid] > -1 || Rag[playerid] > -1 || Gozluk[playerid] > -1)
						{
								HataMesajiGonder(playerid, "Þuan buradan çýkamazsýnýz.");
								return 1;
						}
                        if(BenchPresses[playerid] != 0)
                        {
								HataMesajiGonder(playerid, "Þuan buradan çýkamazsýnýz.");
								return 1;
						}
						SetPlayerInterior(playerid,Businesses[i][EnterInterior]);
						SetPlayerVirtualWorld(playerid,Businesses[i][EnterWorld]);
						SetPlayerPos(playerid,Businesses[i][EnterX],Businesses[i][EnterY],Businesses[i][EnterZ]);
						SetPlayerFacingAngle(playerid,Businesses[i][EnterAngle]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Kilitli", 5000, 1);
					}
				}
			}
		}
	}
	if (newkeys == KEY_HANDBRAKE)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInAnyVehicle(playerid))
	        {
	            if(AnimYapiyor[playerid] == 1)
				{
           			ClearAnimations(playerid);
	        		AnimYapiyor[playerid] = 0;
	        	}
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{

				return 1;
			}
		    if(MotorsuzArac(vehicleid))
		    {

		    }
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{

			}
		    if(DynamicCars[vehicleid][AracPatladi] == 1)
			{

			}
			if(OutOfFuel[GetPlayerVehicleID(playerid)] == 1)
			{

			}
			if(MotorDurumu[GetPlayerVehicleID(playerid)] == 1)
			{
				return 1;
			}
		    if(DynamicCars[GetPlayerVehicleID(playerid)][FactionCar] != 255)
			{
				if(PlayerInfo[playerid][pFaction] != DynamicCars[GetPlayerVehicleID(playerid)][FactionCar])
	   			{

				    if(DynamicCars[vehicleid][ModAlarm] > 0)
				    {
						new form[128];
						format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription]);
						PlayerDoMessage(playerid,15.0,form);
						CalanAracID[playerid] = GetPlayerVehicleID(playerid);
						SetTimerEx("Alarm",3000,false,"i",playerid);
				    }
				    if(DynamicCars[vehicleid][ModStereo] > 0)
				    {
						AlarmDurum[vehicleid] = 1;
						SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
				    }
					return 1;
	   			}
			}
			if(DynamicCars[vehicleid][CarType] == 2 || DynamicCars[vehicleid][CarType] == 9 || DynamicCars[vehicleid][CarOwned] == 1)
			{
			    new oName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, oName, 24);
			 	if(strcmp(DynamicCars[vehicleid][CarOwner],oName,true))
			 	{
				    if(DynamicCars[vehicleid][ModAlarm] > 0)
				    {
						new form[128];
						format(form, sizeof(form), "Aracýn alarmý çalmaktadýr. - %s - %s",VehicleName[GetVehicleModel(vehicleid)-400],DynamicCars[vehicleid][CarDescription]);
						PlayerDoMessage(playerid,15.0,form);
						CalanAracID[playerid] = GetPlayerVehicleID(playerid);
						SetTimerEx("Alarm",3000,false,"i",playerid);
				    }
				    if(DynamicCars[vehicleid][ModStereo] > 0)
				    {
						AlarmDurum[vehicleid] = 1;
						SetVehicleParamsEx(vehicleid, MotorDurumu[vehicleid], IsikDurum[vehicleid], AlarmDurum[vehicleid], KapiDurum[vehicleid], KaputDurum[vehicleid], BagajDurum[vehicleid], ObjeDurum[vehicleid]);
				    }
					return HataMesajiGonder(playerid, "Bu aracýn anahtarý sizde bulunmamaktadýr.");
				}
			}
			if(IsAPlane(vehicleid) || IsAHelicopter(vehicleid))
	 		{
	  			if(PlayerInfo[playerid][pFlyLic] == 0)
				{
	  				HataMesajiGonder(playerid, "Uçmayý bilmediðiniz için bu aracý kullanamazsýnýz.");
					return 1;
				}
	   		}
			if(DynamicCars[vehicleid][CarType] == 3)
			{
				if(PlayerInfo[playerid][pJob] != 1)
				{
					HataMesajiGonder(playerid, "Taksi þöförü deðilsiniz.");
					return 1;
	   			}
	   		}
			if(DynamicCars[vehicleid][CarType] == 4)
			{
				if(PlayerInfo[playerid][pJob] != 2)
				{
					HataMesajiGonder(playerid, "Otobüs þöförü deðilsiniz.");
					return 1;
	   			}
	   		}
			if(DynamicCars[vehicleid][CarType] == 5)
			{
				if(PlayerInfo[playerid][pJob] != 3)
				{
					HataMesajiGonder(playerid, "Yer temizliyicisi deðilsiniz.");
					return 1;
	   			}
	   		}
			if(DynamicCars[vehicleid][CarType] == 6)
			{
				if(PlayerInfo[playerid][pJob] != 4)
				{
					HataMesajiGonder(playerid, "Týr þöförü deðilsiniz.");
					return 1;
	   			}
	   		}
			if(DynamicCars[vehicleid][CarType] == 7)
			{
				if(PlayerInfo[playerid][pJob] != 5)
				{
					HataMesajiGonder(playerid, "Gemi þöförü deðilsiniz.");
					return 1;
	   			}
	   		}
			if(DynamicCars[vehicleid][CarType] == 8)
			{
				HataMesajiGonder(playerid, "Bu aracýn motorunu açabilmek için, aracý kiralamanýz gerekmektedir.");
				return 1;
	   		}
			if(IsAOtobus(GetPlayerVehicleID(playerid)) && OtobusTurunda[playerid] == 0)
			{
				HataMesajiGonder(playerid, "Otobüs seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/otobus");
				return 1;
			}
			if(IsACleaner(GetPlayerVehicleID(playerid)) && YerTemizlemeTurunda[playerid] == 0)
			{
				HataMesajiGonder(playerid, "Yer temizleme seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/yertemizle");
				return 1;
			}
			if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 6 && TirTurunda[playerid] == 0)
			{
				HataMesajiGonder(playerid, "Týr seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/tirbasla");
				return 1;
			}
			if(DynamicCars[GetPlayerVehicleID(playerid)][CarType] == 7 && GemiTurunda[playerid] == 0)
			{
				HataMesajiGonder(playerid, "Gemi seferine çýkmadan motoru açamazsýnýz, çýkmak için: {1EFF00}/gemibasla");
				return 1;
			}
			for(new oyuncu = 0; oyuncu < MAX_PLAYERS; oyuncu++)
			{
			    if(ModifiyeYapiyor[oyuncu] == 1)
			    {
			        if(ModifiyeArac[oyuncu] == vehicleid)
			        {
			            HataMesajiGonder(playerid, "Modifiye edilen bir aracýn motorunu çalýþtýramazsýnýz.");
			            return 1;
			        }
			    }
			}
			if(MotorDurumu[GetPlayerVehicleID(playerid)] == 0)
			{
				PlayerActionMessage(playerid,15.0, "anahtarý aracýn kontaðýna takar ve çevirir.");
				SetTimerEx("Motor2",1500,false,"i",playerid);
			}
	    }
	}
	if(newkeys == KEY_JUMP)
	{
	    /*if(!IsPlayerInAnyVehicle(playerid))
	    {
		    Bunny[playerid]++;
		    BunnyZaman[playerid] = 4;
		    if(Bunny[playerid] >= 5)
		    {
		        Yerde[playerid] = 1;
				PlayerDoMessage(playerid,15.0,"Yere düþmüþtür.");
				LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
				Bunny[playerid] = 0;
				SetTimerEx("YerdenKaldir",3000,false,"i",playerid);
		    }
		}*/
	}
	
	// Kapýlar
	
	if(newkeys == KEY_CROUCH)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
		    if(PlayerToPoint(5.0,playerid,1588.59997559,-1638.30004883,15.00000000))
		    {
				MoveObject(kapipd,1597.00000000,-1638.30004883,15.00000000,2);
				SetTimerEx("KapiKapat",6000,false,"ifff",kapipd,1588.59997559,-1638.30004883,15.00000000);
			}
			if(PlayerToPoint(5.0,playerid,1284.09997559,-2056.60009766,60.59999847))
			{
			    MoveObject(kapi1,1283.90002441,-2068.10009766,60.59999847,2);
			    SetTimerEx("KapiKapat",6000,false,"ifff",kapi1,1284.09997559,-2056.60009766,60.59999847);
			}
		}
	}
	
	if(newkeys == (2))
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    if(PlayerToPoint(10,playerid,1588.59997559,-1638.30004883,15.00000000))
		    {
				MoveObject(kapipd,1597.00000000,-1638.30004883,15.00000000,2);
				SetTimerEx("KapiKapat",6000,false,"ifff",kapipd,1588.59997559,-1638.30004883,15.00000000);
			}
			if(PlayerToPoint(10,playerid,1284.09997559,-2056.60009766,60.59999847))
		    {
				MoveObject(kapi1,1283.90002441,-2068.10009766,60.59999847,2);
				SetTimerEx("KapiKapat",6000,false,"ifff",kapi1,1284.09997559,-2056.60009766,60.59999847);
			}
		}
	}
	return 0;
}
public OnPlayerUpdate(playerid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		for(new i = 1; i < sizeof(SpikeInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.80, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
			{
				if(SpikeInfo[i][sCreated] == 1)
				{
					new panels, doors, lights, tires;
					new carid = GetPlayerVehicleID(playerid);
					GetVehicleDamageStatus(carid, panels, doors, lights, tires);
					tires = encode_tires(1, 1, 1, 1);
					new vehicleid;
					SetVehicleHealth(vehicleid,50);
					UpdateVehicleDamageStatus(carid, panels, doors, lights, tires);
					return 0;
				}
			}
		}
	}

	new Float:HP;
	GetPlayerHealth(playerid, HP);
	new Float:Zarar;
	Zarar = PlayerInfo[playerid][pHP] - HP;
	if(Zarar <= 5 && Zarar > 0)
	{
		SetTimerEx("EkranTimer", 100, false, "s", 0xD21700BB);
		SetTimerEx("EkranTimer", 200, false, "s", "0xD2170099");
		SetTimerEx("EkranTimer", 400, false, "s", "0xD2170077");
		SetTimerEx("EkranTimer", 600, false, "s", "0xD2170055");
		SetTimerEx("EkranTimer", 800, false, "s", "0xD2170033");
		SetTimerEx("EkranTimer", 1000, false, "s", "0xD2170011");
	}
	if(IsPlayerInAnyVehicle(playerid) == 1 && KemerTakti[playerid] == 0)
	{
		new Float:TempCarHealth;
		GetVehicleHealth(GetPlayerVehicleID(playerid), TempCarHealth);
		new Float:Difference = floatsub(AracininCani[playerid], TempCarHealth);
		if((floatcmp(AracininCani[playerid], TempCarHealth) == 1) && (floatcmp(Difference,100.0) == 1))
		{
		    Difference = floatdiv(Difference, 7.0);
		    new Float:OldHealth;
		    GetPlayerHealth(playerid, OldHealth);
		    SetPlayerHealth(playerid, floatsub(OldHealth, Difference));
		}
		AracininCani[playerid] = TempCarHealth;
	}
	else
	{
		AracininCani[playerid] = 0.0;
	}
    new Keys,ud,lr;
    GetPlayerKeys(playerid,Keys,ud,lr);
   	if(ud < 0)
	{
    	if(BenchPresses[playerid] != 0)
    	{
    	    if(BenchPresses[playerid] >= 1 && BenchPresses[playerid] <= 29)
    	    {
    	        if(KontrolDurum[playerid] == 1)
    	        {
	    	        if(OkDurumu[playerid] == 1)
	    	        {
	    	            new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid] = VerilicekKas[playerid]+1;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
						    ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, yukarý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, aþaðý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sol ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sað ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
	    	        else
	    	        {
		            	new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid]--;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
						    ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, yukarý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, aþaðý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sol ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sað ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
    	        }
    	    }
    	    else
    	    {
  			    OkDurumu[playerid] = 0;
				if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
				{
	 				ClearAnimations(playerid);
				}
				if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
				{
    				ApplyAnimation(playerid,"benchpress","gym_bp_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
				{
    				ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				SetTimerEx("BenchPressFinish", 1000, false, "i", playerid);
			}
    	}
	}
   	if(ud > 0)
	{
    	if(BenchPresses[playerid] != 0)
    	{
    	    if(BenchPresses[playerid] >= 1 && BenchPresses[playerid] <= 29)
    	    {
    	        if(KontrolDurum[playerid] == 1)
    	        {
	    	        if(OkDurumu[playerid] == 2)
	    	        {
	    	            new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid] = VerilicekKas[playerid]+1;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
						    ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, yukarý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, aþaðý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sol ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sað ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
	    	        else
	    	        {
		            	new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid]--;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
						    ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, yukarý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, aþaðý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sol ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sað ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
  				}

    	    }
    	    else
    	    {
  			    OkDurumu[playerid] = 0;
				if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
				{
	 				ClearAnimations(playerid);
				}
				if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
				{
    				ApplyAnimation(playerid,"benchpress","gym_bp_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
				{
    				ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				SetTimerEx("BenchPressFinish", 1000, false, "i", playerid);
			}
    	}
	}
	if(lr < 0)
	{
    	if(BenchPresses[playerid] != 0)
    	{
    	    if(BenchPresses[playerid] >= 1 && BenchPresses[playerid] <= 29)
    	    {
    	        if(KontrolDurum[playerid] == 1)
    	        {
	    	        if(OkDurumu[playerid] == 3)
	    	        {
	    	            new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid] = VerilicekKas[playerid]+1;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
						    ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, yukarý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, aþaðý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sol ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sað ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
	    	        else
	    	        {
		            	new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid]--;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
						    ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, yukarý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, aþaðý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sol ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sað ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
    			}

    	    }
    	    else
    	    {
  			    OkDurumu[playerid] = 0;
				if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
				{
	 				ClearAnimations(playerid);
				}
				if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
				{
    				ApplyAnimation(playerid,"benchpress","gym_bp_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
				{
    				ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				SetTimerEx("BenchPressFinish", 1000, false, "i", playerid);
			}
    	}
    	if(Sapka[playerid] > -1)
    	{
			if(Sapka[playerid] ==  0)
			{
			    HataMesajiGonder(playerid, "Daha fazla aþaðý inemezsiniz.");
			    return 1;
			}
			new skin, cap;
			skin = (GetPlayerSkin(playerid) - 1);
			Sapka[playerid]--;
			switch(Sapka[playerid])
			{
				case 1:    cap = 18926;
				case 2..9: cap = 18926 + Sapka[playerid];
			}
			for(new s = 0; s < sizeof(HataliKiyafetler); s++)
			{
				if(skin == HataliKiyafetler[s])
				{
				    SetCameraBehindPlayer(playerid);
					Sapka[playerid] = -1;
					RemovePlayerAttachedObject(playerid, 2);
					TogglePlayerControllable(playerid, 1);
					HataMesajiGonder(playerid, "Kullandýðýnýz kýyafete þapka seçemezsiniz.");
					return 1;
				}
			}
			SetPlayerAttachedObject(playerid, 2, cap, 2, CapsSkinOffSet[skin][0], CapsSkinOffSet[skin][1], CapsSkinOffSet[skin][2], CapsSkinOffSet[skin][3], CapsSkinOffSet[skin][4], CapsSkinOffSet[skin][5]);
		}
    	if(Rag[playerid] > -1)
    	{
			if(Rag[playerid] ==  0)
			{
			    HataMesajiGonder(playerid, "Daha fazla aþaðý inemezsiniz.");
			    return 1;
			}
			Rag[playerid]--;
			if(Rag[playerid] ==  0)
			{
				SetPlayerAttachedObject(playerid, 3, 18911, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  1)
			{
				SetPlayerAttachedObject(playerid, 3, 18912, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  2)
			{
				SetPlayerAttachedObject(playerid, 3, 18913, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  3)
			{
				SetPlayerAttachedObject(playerid, 3, 18914, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  4)
			{
				SetPlayerAttachedObject(playerid, 3, 18915, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  5)
			{
				SetPlayerAttachedObject(playerid, 3, 18916, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  6)
			{
				SetPlayerAttachedObject(playerid, 3, 18917, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  7)
			{
				SetPlayerAttachedObject(playerid, 3, 18918, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  8)
			{
				SetPlayerAttachedObject(playerid, 3, 18919, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  9)
			{
				SetPlayerAttachedObject(playerid, 3, 18920, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
    	}
    	if(Gozluk[playerid] > -1)
    	{
			if(Gozluk[playerid] == 1)
			{
			    HataMesajiGonder(playerid, "Daha fazla aþaðý inemezsiniz.");
			    return 1;
			}
			new skin = GetPlayerSkin(playerid);
			Gozluk[playerid]--;
			new glasseid = 19006 + (Gozluk[playerid] - 1);
			SetPlayerAttachedObject(playerid, 4, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
    	}
		if(SelectChar[playerid] == 255)
		{
		    if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 1)
			{
   				for(new SkinID = 0; SkinID < sizeof(AcikErkekSkinler); SkinID++)
			    {
		    		if(SelectCharPlace[playerid] == SkinID) { return SetPlayerSkin(playerid, AcikErkekSkinler[SkinID-1][0]), SelectCharPlace[playerid] = SkinID-1, ChosenSkin[playerid] = AcikErkekSkinler[SkinID-1][0], SkinUcret[playerid] = AcikErkekSkinler[SkinID-1][1]; }
				}
			}
		    if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 2)
			{
   				for(new SkinID = 0; SkinID < sizeof(KoyuErkekSkinler); SkinID++)
			    {
		    		if(SelectCharPlace[playerid] == SkinID) { return SetPlayerSkin(playerid, KoyuErkekSkinler[SkinID-1][0]), SelectCharPlace[playerid] = SkinID-1, ChosenSkin[playerid] = KoyuErkekSkinler[SkinID-1][0], SkinUcret[playerid] = KoyuErkekSkinler[SkinID-1][1]; }
				}
			}
		    if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 1)
			{
   				for(new SkinID = 0; SkinID < sizeof(BeyazKadinSkinler); SkinID++)
			    {
		    		if(SelectCharPlace[playerid] == SkinID) { return SetPlayerSkin(playerid, BeyazKadinSkinler[SkinID-1][0]), SelectCharPlace[playerid] = SkinID-1, ChosenSkin[playerid] = BeyazKadinSkinler[SkinID-1][0], SkinUcret[playerid] = BeyazKadinSkinler[SkinID-1][1]; }
				}
			}
		    if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 2)
			{
   				for(new SkinID = 0; SkinID < sizeof(SiyahKadinSkinler); SkinID++)
			    {
		    		if(SelectCharPlace[playerid] == SkinID) { return SetPlayerSkin(playerid, SiyahKadinSkinler[SkinID-1][0]), SelectCharPlace[playerid] = SkinID-1, ChosenSkin[playerid] = SiyahKadinSkinler[SkinID-1][0], SkinUcret[playerid] = SiyahKadinSkinler[SkinID-1][1]; }
				}
			}
		}
	}
   	if(lr > 0)
	{
    	if(BenchPresses[playerid] != 0)
    	{
    	    if(BenchPresses[playerid] >= 1 && BenchPresses[playerid] <= 29)
    	    {
    	        if(KontrolDurum[playerid] == 1)
    	        {
	    	        if(OkDurumu[playerid] == 4)
	    	        {
	    	            new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid] = VerilicekKas[playerid]+1;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
						    ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, yukarý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, aþaðý ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sol ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Doðru tuþa bastýnýz, sað ok tuþuna basýn"); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
	    	        else
	    	        {
		            	new Ok = random(4);
						BenchPresses[playerid]++;
						VerilicekKas[playerid]--;
						BenchPressTime[playerid] = 2;
						if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
						{
							ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,0);
						}
						if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
						{
						    ApplyAnimation(playerid,"benchpress","gym_bp_up_A", 4.0, 0, 0, 0, 1, 0);
						}
						if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
						{
                            ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast", 4.0, 0, 0, 0, 1, 0);
						}
		   				if(Ok == 0) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, yukarý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~u~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 1; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
		      			else if(Ok == 1) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, aþaðý ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~d~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 2; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
				      	else if(Ok == 2) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sol ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~<~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 3; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
						else if(Ok == 3) {GenelMesajGonder(playerid, "Yanlýþ tuþa bastýnýz, sað ok tuþuna basýn."); TextDrawSetString(Text:TextDraw3[playerid], "~>~"); TextDrawShowForPlayer(playerid, TextDraw3[playerid]); OkDurumu[playerid] = 4; KontrolDurum[playerid] = 0; SetTimerEx("KontrolDurumAyarla",700, false,"i",playerid); SetTimerEx("TusaBastimi",1100, false,"i",playerid);}
	    	        }
    	        }

    	    }
    	    else
    	    {
  			    OkDurumu[playerid] = 0;
				if(BenchPressID[playerid] == 0 || BenchPressID[playerid] == 1 || BenchPressID[playerid] == 2)
				{
	 				ClearAnimations(playerid);
				}
				if(BenchPressID[playerid] == 3 || BenchPressID[playerid] == 4 || BenchPressID[playerid] == 5)
				{
    				ApplyAnimation(playerid,"benchpress","gym_bp_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				if(BenchPressID[playerid] == 6 || BenchPressID[playerid] == 7 || BenchPressID[playerid] == 8)
				{
    				ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff", 4.0, 0, 0, 0, 1, 0);
				}
				SetTimerEx("BenchPressFinish", 1000, false, "i", playerid);
			}
    	}
    	if(Sapka[playerid] > -1)
    	{
			if(Sapka[playerid] == 9)
			{
			    HataMesajiGonder(playerid, "Daha fazla aþaðý inemezsiniz.");
			    return 1;
			}
			new skin, cap;
			skin = (GetPlayerSkin(playerid) - 1);
			Sapka[playerid]++;
			switch(Sapka[playerid])
			{
				case 1:    cap = 18926;
				case 2..9: cap = 18926 + Sapka[playerid];
			}
			for(new s = 0; s < sizeof(HataliKiyafetler); s++)
			{
				if(skin == HataliKiyafetler[s])
				{
				    SetCameraBehindPlayer(playerid);
					Sapka[playerid] = -1;
					RemovePlayerAttachedObject(playerid, 2);
					TogglePlayerControllable(playerid, 1);
					HataMesajiGonder(playerid, "Kullandýðýnýz kýyafete þapka seçemezsiniz.");
					return 1;
				}
			}
			SetPlayerAttachedObject(playerid, 2, cap, 2, CapsSkinOffSet[skin][0], CapsSkinOffSet[skin][1], CapsSkinOffSet[skin][2], CapsSkinOffSet[skin][3], CapsSkinOffSet[skin][4], CapsSkinOffSet[skin][5]);
		}
    	if(Rag[playerid] > -1)
    	{
			if(Rag[playerid] ==  9)
			{
			    HataMesajiGonder(playerid, "Daha fazla yukarý çýkamazsýnýz.");
			    return 1;
			}
			Rag[playerid]++;
			if(Rag[playerid] ==  0)
			{
				SetPlayerAttachedObject(playerid, 3, 18911, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  1)
			{
				SetPlayerAttachedObject(playerid, 3, 18912, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  2)
			{
				SetPlayerAttachedObject(playerid, 3, 18913, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  3)
			{
				SetPlayerAttachedObject(playerid, 3, 18914, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  4)
			{
				SetPlayerAttachedObject(playerid, 3, 18915, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  5)
			{
				SetPlayerAttachedObject(playerid, 3, 18916, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  6)
			{
				SetPlayerAttachedObject(playerid, 3, 18917, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  7)
			{
				SetPlayerAttachedObject(playerid, 3, 18918, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  8)
			{
				SetPlayerAttachedObject(playerid, 3, 18919, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
			if(Rag[playerid] ==  9)
			{
				SetPlayerAttachedObject(playerid, 3, 18920, 2, 0.08, 0.01, -0.005, 90, 170, 90);
			}
    	}
    	if(Gozluk[playerid] > -1)
    	{
			if(Gozluk[playerid] == 30)
			{
			    HataMesajiGonder(playerid, "Daha fazla yukarý çýkamazsýnýz.");
			    return 1;
			}
			new skin = GetPlayerSkin(playerid);
			Gozluk[playerid]++;
			new glasseid = 19006 + (Gozluk[playerid] - 1);
			SetPlayerAttachedObject(playerid, 4, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
    	}
		if(SelectChar[playerid] == 255)
		{
		    if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 1)
			{
   				for(new SkinID = 0; SkinID < sizeof(AcikErkekSkinler); SkinID++)
			    {
 					if(SelectCharPlace[playerid] == SkinID)
	 				{
		 				if(IlkDegisiklik[playerid] == 0)
						{
						 	SetPlayerSkin(playerid, AcikErkekSkinler[SkinID][0]);
					 		SelectCharPlace[playerid] = SkinID;
					 		ChosenSkin[playerid] = AcikErkekSkinler[SkinID][0];
					 		SkinUcret[playerid] = AcikErkekSkinler[SkinID][1];
					 		IlkDegisiklik[playerid] = 1;
					 	}
					 	else
					 	{
						 	SetPlayerSkin(playerid, AcikErkekSkinler[SkinID+1][0]);
					 		SelectCharPlace[playerid] = SkinID+1;
					 		ChosenSkin[playerid] = AcikErkekSkinler[SkinID+1][0];
					 		SkinUcret[playerid] = AcikErkekSkinler[SkinID+1][1];
					 		return 1;
					 	}
					}
				}
			}
		    if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[playerid][pTenRengi] == 2)
			{
   				for(new SkinID = 0; SkinID < sizeof(KoyuErkekSkinler); SkinID++)
			    {
 					if(SelectCharPlace[playerid] == SkinID)
	 				{
		 				if(IlkDegisiklik[playerid] == 0)
						{
						 	SetPlayerSkin(playerid, KoyuErkekSkinler[SkinID][0]);
					 		SelectCharPlace[playerid] = SkinID;
					 		ChosenSkin[playerid] = KoyuErkekSkinler[SkinID][0];
					 		SkinUcret[playerid] = KoyuErkekSkinler[SkinID][1];
					 		IlkDegisiklik[playerid] = 1;
					 	}
					 	else
					 	{
						 	SetPlayerSkin(playerid, KoyuErkekSkinler[SkinID+1][0]);
					 		SelectCharPlace[playerid] = SkinID+1;
					 		ChosenSkin[playerid] = KoyuErkekSkinler[SkinID+1][0];
					 		SkinUcret[playerid] = KoyuErkekSkinler[SkinID+1][1];
					 		return 1;
					 	}
					}
				}
			}
		    if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 1)
			{
   				for(new SkinID = 0; SkinID < sizeof(BeyazKadinSkinler); SkinID++)
			    {
 					if(SelectCharPlace[playerid] == SkinID)
	 				{
		 				if(IlkDegisiklik[playerid] == 0)
						{
						 	SetPlayerSkin(playerid, BeyazKadinSkinler[SkinID][0]);
					 		SelectCharPlace[playerid] = SkinID;
					 		ChosenSkin[playerid] = BeyazKadinSkinler[SkinID][0];
					 		SkinUcret[playerid] = BeyazKadinSkinler[SkinID][1];
					 		IlkDegisiklik[playerid] = 1;
					 	}
					 	else
					 	{
						 	SetPlayerSkin(playerid, BeyazKadinSkinler[SkinID+1][0]);
					 		SelectCharPlace[playerid] = SkinID+1;
					 		ChosenSkin[playerid] = BeyazKadinSkinler[SkinID+1][0];
					 		SkinUcret[playerid] = BeyazKadinSkinler[SkinID+1][1];
					 		return 1;
					 	}
					}
				}
			}
		    if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[playerid][pTenRengi] == 2)
			{
   				for(new SkinID = 0; SkinID < sizeof(SiyahKadinSkinler); SkinID++)
			    {
 					if(SelectCharPlace[playerid] == SkinID)
	 				{
		 				if(IlkDegisiklik[playerid] == 0)
						{
						 	SetPlayerSkin(playerid, SiyahKadinSkinler[SkinID][0]);
					 		SelectCharPlace[playerid] = SkinID;
					 		ChosenSkin[playerid] = SiyahKadinSkinler[SkinID][0];
					 		SkinUcret[playerid] = SiyahKadinSkinler[SkinID][1];
					 		IlkDegisiklik[playerid] = 1;
					 	}
					 	else
					 	{
						 	SetPlayerSkin(playerid, SiyahKadinSkinler[SkinID+1][0]);
					 		SelectCharPlace[playerid] = SkinID+1;
					 		ChosenSkin[playerid] = SiyahKadinSkinler[SkinID+1][0];
					 		SkinUcret[playerid] = SiyahKadinSkinler[SkinID+1][1];
					 		return 1;
					 	}
					}
				}
			}
		}
	}
	return 1;
}
forward BenchPressFinish(playerid);
public BenchPressFinish(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if (BenchPresses[playerid] != 0)
        {
			new form[128];
			format(form, sizeof(form), "%d Puan Kazanmýþtýr.",VerilicekKas[playerid]);
			PlayerDoMessage(playerid,15.0,form);
            BenchPresses[playerid] = 0;
            PlayerInfo[playerid][pKasDurumu] += VerilicekKas[playerid];
            VerilicekKas[playerid] = 0;
            TextDrawHideForPlayer(playerid, TextDraw3[playerid]);
            if(PlayerInfo[playerid][pKasSeviyesi] == 1 && PlayerInfo[playerid][pKasDurumu] >= 4000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 2;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 2");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 2 && PlayerInfo[playerid][pKasDurumu] >= 6000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 3;
                 BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 3");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 3 && PlayerInfo[playerid][pKasDurumu] >= 8000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 4;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 4");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 4 && PlayerInfo[playerid][pKasDurumu] >= 10000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 5;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 5");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 5 && PlayerInfo[playerid][pKasDurumu] >= 12000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 6;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 6");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 6 && PlayerInfo[playerid][pKasDurumu] >= 14000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 7;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 7");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 7 && PlayerInfo[playerid][pKasDurumu] >= 16000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 8;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 8");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 8 && PlayerInfo[playerid][pKasDurumu] >= 18000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 9;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 9");
            }
            if(PlayerInfo[playerid][pKasSeviyesi] == 9 && PlayerInfo[playerid][pKasDurumu] >= 20000)
            {
                PlayerInfo[playerid][pKasDurumu] = 0;
                PlayerInfo[playerid][pKasSeviyesi] = 10;
                BilgiMesajiGonder(playerid, "Gerekli kas durumuna ulaþtýnýz ve seviye atladýnýz, yeni seviyeniz: 10");
            }
            TogglePlayerControllable(playerid,true);
            SetCameraBehindPlayer(playerid);
            BenchAvail[BenchPressID[playerid]] = 0;
		}
		return 1;
	}
	return 1;
}
public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797))
		{
		    return 1;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
		{
		    return 1;
		}
	}
	return 0;
}
public CreateStreamPickup(model,type,Float:x,Float:y,Float:z,range)
{
	new FoundID = 0;
	new ID;

	for ( new i = 0; FoundID <= 0 ; i++)
	{
	    if( Pickup[i][pickupCreated] == 0 )
	    {
	        if( FoundID == 0 )
	        {
	     	   ID = i;
	     	   FoundID = 1;
	        }
	    }
	    if( i > MAX_PICKUPZ )
	    {
		    FoundID = 2;
		}
	}
	if( FoundID == 2 )
	{
	    print("Pickup sýnýrý aþýlmýþ.");
	    return -1;
	}
	Pickup[ID][pickupCreated] = 1;
	Pickup[ID][pickupVisible] = 0;
	Pickup[ID][pickupModel] = model;
	Pickup[ID][pickupType] = type;
	Pickup[ID][pickupX] = x;
	Pickup[ID][pickupY] = y;
	Pickup[ID][pickupZ] = z;
	Pickup[ID][pickupRange] = range;
	return ID;

}
public DestroyStreamPickup(ID)
{
	if(Pickup[ID][pickupCreated])
	{
		DestroyPickup(Pickup[ID][pickupID]);
		Pickup[ID][pickupCreated] = 0;
		return 1;
	}
	return 0;
}
public CountStreamPickups()
{
	new count = 0;
	for(new i = 0; i < MAX_PICKUPZ; i++)
	{
	    if(Pickup[i][pickupCreated] == 1)
	    {
			count++;
	    }
	}
	return count;
}
public StreamPickups()
{
	for(new i = 0; i < MAX_PICKUPZ; i++)
	{
	    if(Pickup[i][pickupCreated] == 1)
	    {
			if(Pickup_AnyPlayerToPoint(Pickup[i][pickupRange],Pickup[i][pickupX],Pickup[i][pickupY],Pickup[i][pickupZ]))
			{
			    if(Pickup[i][pickupVisible] == 0)
			    {
			        Pickup[i][pickupID] = CreatePickup(Pickup[i][pickupModel],Pickup[i][pickupType],Pickup[i][pickupX],Pickup[i][pickupY],Pickup[i][pickupZ]);
			        Pickup[i][pickupVisible] = 1;
				}
			}
			else
			{
			    if(Pickup[i][pickupVisible] == 1)
			    {
			        DestroyPickup(Pickup[i][pickupID]);
					Pickup[i][pickupVisible] = 0;
			    }
			}
	    }
	}
}
public MoveStreamPickup(ID,Float:x,Float:y,Float:z)
{
	if(Pickup[ID][pickupCreated])
	{
	    DestroyPickup(Pickup[ID][pickupID]);
	    Pickup[ID][pickupVisible] = 0;
		Pickup[ID][pickupX] = x;
		Pickup[ID][pickupY] = y;
		Pickup[ID][pickupZ] = z;
		return 1;
	}
	return 0;
}
public ChangeStreamPickupModel(ID,newmodel)
{
    if(Pickup[ID][pickupCreated])
	{
	    DestroyPickup(Pickup[ID][pickupID]);
	    Pickup[ID][pickupVisible] = 0;
		Pickup[ID][pickupModel] = newmodel;
		return 1;
	}
	return 0;
}
public ChangeStreamPickupType(ID,newtype)
{
    if(Pickup[ID][pickupCreated])
	{
	    DestroyPickup(Pickup[ID][pickupID]);
	    Pickup[ID][pickupVisible] = 0;
		Pickup[ID][pickupType] = newtype;
		return 1;
	}
	return 0;
}
public Pickup_AnyPlayerToPoint(Float:radi, Float:x, Float:y, Float:z)
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			new Float:tempposx, Float:tempposy, Float:tempposz;
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			tempposx = (oldposx -x);
			tempposy = (oldposy -y);
			tempposz = (oldposz -z);
			if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{
				return 1;
			}
		}
	}
    return 0;
}


forward TopluMesajGonder(mesaj[]);
public TopluMesajGonder(mesaj[])
{
    new MesajString[620];
	format(MesajString, sizeof(MesajString),"{696969}(( {E6E6E6}%s {696969}))", mesaj);
    SendClientMessageToAll(COLOR_WHITE, MesajString);
    return 1;
}
forward GenelMesajGonder(oyuncuid, mesaj[]);
public GenelMesajGonder(oyuncuid, mesaj[])
{
    new MesajString[620];
	format(MesajString, sizeof(MesajString),"{696969}(( {E6E6E6}%s {696969}))", mesaj);
    SendClientMessage(oyuncuid, COLOR_WHITE, MesajString);
    return 1;
}
forward IpucuMesajiGonder(oyuncuid, mesaj[]);
public IpucuMesajiGonder(oyuncuid, mesaj[])
{
    new IpucuYazi[620];
	format(IpucuYazi, sizeof(IpucuYazi),"{555555} {FFCC66}Ýpucu: {FFFFFF}%s {555555}", mesaj);
    SendClientMessage(oyuncuid, COLOR_WHITE, IpucuYazi);
    return 1;
}
forward KullanimMesajiGonder(oyuncuid, mesaj[]);
public KullanimMesajiGonder(oyuncuid, mesaj[])
{
    new KullanimYazi[620];
	format(KullanimYazi, sizeof(KullanimYazi),"{555555} {6699FF}Kullaným: {FFFFFF}%s {555555}", mesaj);
    SendClientMessage(oyuncuid, COLOR_WHITE, KullanimYazi);
    return 1;
}
forward BilgiMesajiGonder(oyuncuid, mesaj[]);
public BilgiMesajiGonder(oyuncuid, mesaj[])
{
    new BilgiYazi[620];
	format(BilgiYazi, sizeof(BilgiYazi),"{555555} {FF9966}Bilgi: {FFFFFF}%s {555555}", mesaj);
    SendClientMessage(oyuncuid, COLOR_WHITE, BilgiYazi);
    return 1;
}
forward HataMesajiGonder(oyuncuid, mesaj[]);
public HataMesajiGonder(oyuncuid, mesaj[])
{
    new HataYazi[620];
	format(HataYazi, sizeof(HataYazi),"{555555} {CC0000}SUNUCU: {FFFFFF}%s {555555}", mesaj);
    SendClientMessage(oyuncuid, COLOR_WHITE, HataYazi);
    return 1;
}
forward CezaMesajiGonder(oyuncuid, mesaj[]);
public CezaMesajiGonder(oyuncuid, mesaj[])
{
    new CezaYazi[620];
	format(CezaYazi, sizeof(CezaYazi),"{555555}{FF0033}47RolePlay: {FFFFFF}%s {555555}", mesaj);
    SendClientMessage(oyuncuid, COLOR_WHITE, CezaYazi);
    return 1;
}
forward YoneticiMesajiGonder(mesaj[]);
public YoneticiMesajiGonder(mesaj[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= 2)
			{
	       		if(AdminDuty[i] == 1)
				{
				    new AdminYazi[1500];
	  				format(AdminYazi, sizeof(AdminYazi), "{696969}(( {A6A6A6}ADM: {E6E6E6}%s {696969}))", mesaj);
					SendClientMessage(i, COLOR_WHITE, AdminYazi);
				}
			}
		}
	}
}
forward TamYoneticiMesajiGonder(mesaj[]);
public TamYoneticiMesajiGonder(mesaj[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= 2)
			{
				new AdminYazi[1500];
	  			format(AdminYazi, sizeof(AdminYazi), "{696969}(( {A6A6A6}ADM: {E6E6E6}%s {696969}))", mesaj);
				SendClientMessage(i, COLOR_WHITE, AdminYazi);
			}
		}
	}
}
forward OzelYoneticiMesajiGonder(mesaj[]);
public OzelYoneticiMesajiGonder(mesaj[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= 1)
			{
			    if(AdminDuyma[i] == 1)
			    {
					new AdminYazi[1500];
		  			format(AdminYazi, sizeof(AdminYazi), "{555555}(( {E6E6E6}%s {555555}))", mesaj);
					SendClientMessage(i, COLOR_WHITE, AdminYazi);
				}
			}
		}
	}
}
forward YetersizYetki(playerid, mesaj[]);
public YetersizYetki(playerid, mesaj[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    HataMesajiGonder(playerid, "Bu komut için yetkiniz yeterli deðil.");
	}
	else
	{
	    new string[256];
		format(string, sizeof(string), "Hatalý bir komut kullandýnýz.");
		HataMesajiGonder(playerid, string);
	}
	return 1;
}
stock GetFromAccountStr(username[], obtaining[], holdingvar[])
{
	new Query[128];
	format(Query, sizeof(Query), "SELECT `%s` FROM `Oyuncular` WHERE `ad` = '%s'", obtaining, username);
	mysql_query(Query);
	mysql_store_result();
	if(mysql_fetch_row(holdingvar) == 1)
	{
		mysql_free_result();
	}
	return 1;
}

stock GetFromAccountInt(username[], obtaining[], holdingvar)
{
	new Query[128];
	new Str[32];
	format(Query, sizeof(Query), "SELECT `%s` FROM `Oyuncular` WHERE `ad` = '%s'", obtaining, username);
	mysql_query(Query);
	mysql_store_result();
	format(Str, sizeof(Str), "%d", holdingvar);
	if(mysql_fetch_row(Str) == 1)
	{
		mysql_free_result();
	}
	return 1;
}

stock GetFromAccountFloat(username[], obtaining[], Float:holdingvar)
{
	new Query[128];
	new Str[64];
	format(Query, sizeof(Query), "SELECT `%s` FROM `Oyuncular` WHERE `ad` = '%s'", obtaining, username);
	mysql_query(Query);
	mysql_store_result();
	format(Str, sizeof(Str), "%f", holdingvar);
	if(mysql_fetch_row(Str) == 1)
	{
		mysql_free_result();
	}
	return 1;
}

stock LoadAccountVariables(playerid)
{
	new EscapedName[MAX_PLAYER_NAME];
	new query[1024];
 	mysql_real_escape_string(GetPlayerNameSave(playerid), EscapedName);
	format(query, sizeof(query), "SELECT * FROM `Oyuncular` WHERE `ad` = '%s'", EscapedName);
	mysql_query(query);
	mysql_store_result();
	mysql_fetch_row_format(query, "|");
	sscanf(query, "e<p<|>ds[32]s[128]ddddddffddddddddddddddddds[128]ddds[128]s[128]dddddddds[32]s[32]s[32]s[32]s[32]s[32]s[32]s[32]s[32]s[32]s[32]s[32]s[32]ddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffffddd>", PlayerInfo[playerid]);
	mysql_free_result();
}

stock DepoYukle()
{
	new query[1024];
	format(query, sizeof(query), "SELECT * FROM `Depo`");
	mysql_query(query);
	mysql_store_result();
	mysql_fetch_row_format(query, "|");
	sscanf(query, "e<p<|>fffddfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd>", DepoSistemi);
	mysql_free_result();
}

forward MySQLConnect(sqlhost[], sqluser[], sqlpass[], sqldb[]);
public MySQLConnect(sqlhost[], sqluser[], sqlpass[], sqldb[])
{
	print("[MySQL] Sunucuya baglaniliyor...");
 	mysql_init();
	mysql_connect(sqlhost, sqluser, sqlpass,sqldb);
	if(mysql_ping()==0)
	{
		print("[MySQL] Sunucu ile baglanti basarli olarak sonuclandi.");
		return 1;
	}
	else
	{
		print("[MySQL] Baglanti basarisiz, tekrar deneniyor...");
		mysql_connect(sqlhost, sqluser, sqlpass, sqldb);
		if(mysql_ping()==0)
		{
			print("[MySQL] Yeniden sunucu ile baglanti basarli olarak sonuclandi.");
			return 1;
		}
		else
		{
			print("[MySQL] Yeninden baglanti basarisiz, sunucu kapatiliyor...");
			SendRconCommand("exit");
			return 0;
		}
	}
}

forward MySQLDisconnect();
public MySQLDisconnect()
{
	mysql_close();
	return 1;
}

forward MySQLCheckConnection();
public MySQLCheckConnection()
{
	if(mysql_ping()==0)
	{
		return 1;
	}
	else
	{
		print("[MySQL] Baglanti her ihtimale karsi tekrar yapiliyor...");
		MySQLDisconnect();
		MySQLConnect(MYSQL_HOST,MYSQL_USER,MYSQL_PASS,MYSQL_DB);
		if(mysql_ping()==0)
		{
			print("[MySQL] Yeniden sunucu ile baglanti basarli olarak sonuclandi.");
			return 1;
		}
		else
		{
			print("[MySQL] Yeninden baglanti basarisiz, sunucu kapatiliyor...");
			SendRconCommand("exit");
			return 0;
		}
	}
}

forward MySQLCheckAccount(sqlplayersname[]);
public MySQLCheckAccount(sqlplayersname[])
{
	new query[128];
	new escstr[MAX_PLAYER_NAME+6];
	mysql_real_escape_string(sqlplayersname, escstr);
	format(query, sizeof(query), "SELECT id FROM Oyuncular WHERE ad = '%s' LIMIT 1", escstr);
	mysql_query(query);
	mysql_store_result();
	if (mysql_num_rows()==0)
	{
		return 0;
	}
	else
	{
		new strid[32];
		new intid;
		mysql_fetch_row(strid);
		intid = strval(strid);
		return intid;
	}
}

forward MySQLUpdateBuild(query[], sqlplayerid);
public MySQLUpdateBuild(query[], sqlplayerid)
{
	new querylen = strlen(query);
	new querymax = MAX_STRING;
	if (querylen < 1) format(query, querymax, "UPDATE Oyuncular SET ");
	else if (querymax-querylen < 50)
	{
		new whereclause[32];
		format(whereclause, sizeof(whereclause), " WHERE id=%d", sqlplayerid);
		strcat(query, whereclause, querymax);
		mysql_query(query);
		format(query, querymax, "UPDATE Oyuncular SET ");
	}
	else if (strfind(query, "=", true) != -1) strcat(query, ",", MAX_STRING);
	return 1;
}

forward MySQLUpdateFinish(query[], sqlplayerid);
public MySQLUpdateFinish(query[], sqlplayerid)
{
	if (strcmp(query, "WHERE id=", false) == 0) mysql_query(query);
	else
	{
		new whereclause[32];
		format(whereclause, sizeof(whereclause), " WHERE id=%d", sqlplayerid);
		strcat(query, whereclause, MAX_STRING);
		mysql_query(query);
		format(query, MAX_STRING, "UPDATE Oyuncular SET ");
	}
	return 1;
}

forward MySQLUpdatePlayerInt(query[], sqlplayerid, sqlvalname[], sqlupdateint);
public MySQLUpdatePlayerInt(query[], sqlplayerid, sqlvalname[], sqlupdateint)
{
	MySQLUpdateBuild(query, sqlplayerid);
	new updval[64];
	format(updval, sizeof(updval), "%s=%d", sqlvalname, sqlupdateint);
	strcat(query, updval, MAX_STRING);
	return 1;
}

forward MySQLUpdatePlayerFlo(query[], sqlplayerid, sqlvalname[], Float:sqlupdateflo);
public MySQLUpdatePlayerFlo(query[], sqlplayerid, sqlvalname[], Float:sqlupdateflo)
{
	new flotostr[32];
	format(flotostr, sizeof(flotostr), "%f", sqlupdateflo);
	MySQLUpdatePlayerStr(query, sqlplayerid, sqlvalname, flotostr);
	return 1;
}

forward MySQLUpdatePlayerStr(query[], sqlplayerid, sqlvalname[], sqlupdatestr[]);
public MySQLUpdatePlayerStr(query[], sqlplayerid, sqlvalname[], sqlupdatestr[])
{
	MySQLUpdateBuild(query, sqlplayerid);
	new escstr[128];
	new updval[128];
	mysql_real_escape_string(sqlupdatestr, escstr);
	format(updval, sizeof(updval), "%s='%s'", sqlvalname, escstr);
	strcat(query, updval, MAX_STRING);
	return 1;
}

forward MySQLCreateAccount(newplayersname[], newpassword[]);
public MySQLCreateAccount(newplayersname[], newpassword[])
{
	new query[128];
	new sqlplyname[64];
	new sqlpassword[64];
	mysql_real_escape_string(newplayersname, sqlplyname);
	mysql_real_escape_string(newpassword, sqlpassword);
	format(query, sizeof(query), "INSERT INTO Oyuncular (username, password) VALUES ('%s', '%s')", sqlplyname, sqlpassword);
	mysql_query(query);
	new newplayersid = MySQLCheckAccount(newplayersname);
	if (newplayersid != 0)
	{
		return newplayersid;
	}
	return 0;
}
public GameModeRestart()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    GenelMesajGonder(i,"Sunucu güncelleniyor, lütfen bekleyiniz.");
		    new Float:can;
			new Float:zirh;
		    GetPlayerHealth(i, can);
		    GetPlayerArmour(i, zirh);
		    PlayerInfo[i][pHP] = can;
		    PlayerInfo[i][pArmour] = zirh;
		    SetPlayerDrunkLevel(i, 0);
			DisablePlayerCheckpoint(i);
            SetPlayerInterior(i,3);
			SetPlayerFacingAngle(i,181.0);
    		SetPlayerCameraPos(i,-2369.7380,1406.2711,118.5225);
			SetPlayerCameraLookAt(i,-2643.2627,1909.2942,99.7135);
			OnPlayerDataSave(i);
			OyuncuSilahlariniKaydet(i);
			gPlayerLogged[i] = 0;
			PlayerInfo[i][OyunDurum] = 0;
			RemovePlayerAttachedObject(i, 0);
			RemovePlayerAttachedObject(i, 1);
			RemovePlayerAttachedObject(i, 2);
			RemovePlayerAttachedObject(i, 3);
			RemovePlayerAttachedObject(i, 4);
			TextDrawHideForAll(TextDraw3[i]);
			TextDrawDestroy(TextDraw3[i]);
			HideProgressBarForPlayer(i, BenzinGosterge[i]);
	        DestroyProgressBar(Bar: BenzinGosterge[i]);
			if(CopOnDuty[i] == 1)
			{
			    CopOnDuty[i] = 1;
			    SetPlayerSkin(i, PlayerInfo[i][pSkin]);
			}
		}
	}
	SetTimer("GameModeRestartFunction", 4000, 0);
 	for(new i; i < sizeof(Building); i++)
	{
 		BinaKaydet(i);
	}
 	for(new i; i < sizeof(DynamicFactions); i++)
	{
 		FactionKaydet(i);
	}
 	for(new i; i < sizeof(Houses); i++)
	{
	    EvKaydet(i);
	}
 	for(new i; i < sizeof(Businesses); i++)
	{
	    IsyeriKaydet(i);
	}
 	for(new i; i < sizeof(DynamicCars); i++)
	{
	    AracKaydet(i);
	}
	OtelKaydet();
	MeslekKaydet();
	DepoKaydet();
	LokasyonKaydet();
	LokasyonKaydet2();
	LokasyonKaydet3();
	return 1;
}

stock SicilBilgiSTR(id, sutun[])
{
	new Query[128], sonuc[24];
	format(Query, sizeof(Query), "SELECT `%s` FROM `sicil` WHERE `sqlid` = '%d'", sutun, id);
	mysql_query(Query);
	mysql_store_result();
	if(mysql_fetch_row(sonuc) == 1)
	{ mysql_free_result(); }
	return sonuc;
}

stock SicilBilgiINT(id, sutun[])
{
	new Query[128], sonuc;
	format(Query, sizeof(Query), "SELECT `%s` FROM `sicil` WHERE `sqlid` = '%d'", sutun, id);
	mysql_query(Query);
	mysql_store_result();
	sonuc = mysql_fetch_int();
	mysql_free_result();
	return sonuc;
}

stock SicilArat(id)
{
	new arat[256];
	format(arat,sizeof(arat),"SELECT * FROM `sicil` WHERE `sqlid` = '%d'",id);
	mysql_query(arat);
	mysql_store_result();
	if(mysql_num_rows() < 1)
	{
	    return 0;
	}
	else
	{
		return 1;
	}
}

stock AracBilgiSTR(plaka[], sutun[])
{
	new Query[128], sonuc[24];
	format(Query, sizeof(Query), "SELECT `%s` FROM `aracsorgu` WHERE `plaka` = '%s'", sutun, plaka);
	mysql_query(Query);
	mysql_store_result();
	if(mysql_fetch_row(sonuc) == 1)
	{ mysql_free_result(); }
	return sonuc;
}

stock AracBilgiINT(plaka[], sutun[])
{
	new Query[128], sonuc;
	format(Query, sizeof(Query), "SELECT `%s` FROM `aracsorgu` WHERE `plaka` = '%s'", sutun, plaka);
	mysql_query(Query);
	mysql_store_result();
	sonuc = mysql_fetch_int();
	mysql_free_result();
	return sonuc;
}

stock AracSucArat(plaka[])
{
	new arat[256];
	format(arat,sizeof(arat),"SELECT * FROM `aracsorgu` WHERE `plaka` = '%s'",plaka);
	mysql_query(arat);
	mysql_store_result();
	if(mysql_num_rows() < 1)
	{
	    return 0;
	}
	else
	{
		return 1;
	}
}

stock SQLKontrol(sqlid)
{
	new arat[256];
	format(arat,sizeof(arat),"SELECT * FROM `oyuncular` WHERE `id` = '%d'",sqlid);
	mysql_query(arat);
	mysql_store_result();
	return mysql_num_rows();
}

stock PlakaKontrol(plaka[])
{
	new arat[256];
	format(arat,sizeof(arat),"SELECT * FROM `araclar` WHERE `Plaka` = '%s'",plaka);
	mysql_query(arat);
	mysql_store_result();
	return mysql_num_rows();
}

stock SQLIsim(sqlid)
{
	new Query[128], sonuc[24];
	format(Query, sizeof(Query), "SELECT `ad` FROM `oyuncular` WHERE `id` = '%d'", sqlid);
	mysql_query(Query);
	mysql_store_result();
	if(mysql_fetch_row(sonuc) == 1)
	{ mysql_free_result(); }
	return sonuc;
}

stock SQLModel(plaka[])
{
	new Query[128], sonuc[24];
	format(Query, sizeof(Query), "SELECT `Model` FROM `araclar` WHERE `Plaka` = '%s'", plaka);
	mysql_query(Query);
	mysql_store_result();
	if(mysql_fetch_row(sonuc) == 1)
	{ mysql_free_result(); }
	return sonuc;
}

stock StringKontrol(icerik[],ksayi)
{
	new str[24];
 	strmid(str,icerik,0,strlen(icerik),24);
 	new sayi;
 	for(new i = 0; i < 25; i++)
 	{
  		if (str[i] == '1') sayi += 1;
  		if (str[i] == '2') sayi += 1;
  		if (str[i] == '3') sayi += 1;
  		if (str[i] == '4') sayi += 1;
  		if (str[i] == '5') sayi += 1;
  		if (str[i] == '6') sayi += 1;
  		if (str[i] == '7') sayi += 1;
  		if (str[i] == '8') sayi += 1;
  		if (str[i] == '9') sayi += 1;
  		if (str[i] == '0') sayi += 1;
 	}
	if(sayi > ksayi)
	{
	    return 0;
	}
	else
	{
	    return 1;
	}
}

stock AddTrafficCone(playerid, Float:x,Float:y,Float:z,Float:aa)
{
	new id = Koniler[playerid]+1;
	TrafikKoni[playerid][id] = CreateObject(1238, x, y, z-0.9, 0, 0, aa-90);
	return 1;
}

stock BarikatKur(playerid, Float:x,Float:y,Float:z,Float:aa)
{
	Barikat[playerid][1] = CreateObject(981, x, y, z, 0, 0, aa+180);
	return 1;
}

stock CreateStrip(playerid, Float:x,Float:y,Float:z,Float:aa)
{
    for(new i = 1; i < sizeof(SpikeInfo); i++)
  	{
  	    if(SpikeInfo[i][sCreated] == 0)
  	    {
            SpikeInfo[i][sCreated] = 1;
            SpikeInfo[i][sX]= x;
            SpikeInfo[i][sY]= y;
            SpikeInfo[i][sZ]= z;
            SpikeInfo[i][sPlayer]= playerid;
            SpikeInfo[i][sObject] = CreateObject(2892, x, y, z-0.9, 0, 0, aa-90);
            Tuzak[playerid] = i;
	        return 1;
  	    }
  	}
  	return 0;
}

stock DeleteStrip(playerid)
{
	new strip = Tuzak[playerid];
	if(SpikeInfo[strip][sCreated] == 1)
 	{
  		SpikeInfo[strip][sCreated]=0;
    	SpikeInfo[strip][sX]=0.0;
     	SpikeInfo[strip][sY]=0.0;
      	SpikeInfo[strip][sZ]=0.0;
       	SpikeInfo[strip][sPlayer]=0;
        DestroyObject(SpikeInfo[strip][sObject]);
        Tuzak[playerid] = 0;
	}
    return 0;
}

stock DeleteAllStrip()
{
    for(new i = 1; i < sizeof(SpikeInfo); i++)
  	{
  	    if(SpikeInfo[i][sCreated] == 1)
  	    {
  	        SpikeInfo[i][sCreated]=0;
            SpikeInfo[i][sX]=0.0;
            SpikeInfo[i][sY]=0.0;
            SpikeInfo[i][sZ]=0.0;
            SpikeInfo[i][sPlayer]=0;
            DestroyObject(SpikeInfo[i][sObject]);
		}
	}
    return 0;
}
forward kalkis(playerid);
public kalkis(playerid)
{
	kalkabilir[playerid] = 1;
	KillTimer(olmesin(playerid));
	KillTimer(texttimer(playerid));
	sayi[playerid] = 0;
	BilgiMesajiGonder(playerid, "(/kalk) komutunu kullanabilirsiniz .");
	SetPlayerHealth(playerid,100);
}
forward olmesin(playerid);
public olmesin(playerid)
{
    SetPlayerHealth(playerid,100);
}
forward texttimer(playerid);
public texttimer(playerid)
{
	new string[256];
    format(string, sizeof(string), "%d", 90-sayi[playerid]);
    kalansn[playerid] = TextDrawCreate(577, 432, string);
	TextDrawAlignment(kalansn[playerid], 1);
	TextDrawFont(kalansn[playerid], 3);
	TextDrawLetterSize(kalansn[playerid], 2, 2);
	TextDrawColor(kalansn[playerid], 0xCF0000FF);
	sayi[playerid]++;
	TextDrawDestroy(kalansn[playerid]);
}
forward PolisLambas(arac);
public PolisLambas(arac)
{
	new model = GetVehicleModel(arac);
	PolisLamba[1][arac] = CreateObject(18646,0.0, 0.0, 0.0, 0.0, 0.0, 96.0);
	if(model == 402 || model == 405 || model == 445 || model == 500)
	{
	    AttachObjectToVehicle(PolisLamba[1][arac], arac, -0.65, 1.25, 0.325, 0.0, 0.0, 0.0);
	}
	else if(model == 551 || model == 560 || model == 562)
	{
	    AttachObjectToVehicle(PolisLamba[1][arac], arac, -0.65, 1.25, 0.40, 0.0, 0.0, 0.0);
	}
	else if(model == 421 || model == 400 || model == 411 || model == 526)
	{
	    AttachObjectToVehicle(PolisLamba[1][arac], arac, -0.65, 1.30, 0.275, 0.0, 0.0, 0.0);
	}
	else if(model == 424 || model == 426 || model == 429)
	{
		AttachObjectToVehicle(PolisLamba[1][arac], arac, -0.70, 1.30, 0.375, 0.0, 0.0, 0.0);
	}
}

encode_tires(tires1, tires2, tires3, tires4) {

	return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);

}

public PosKontrol(Float:radi, Float:xxX,Float:yyY,Float:zzZ, Float:xX,Float:yY,Float:zZ)
{
	new Float:tempposx, Float:tempposy, Float:tempposz;
	tempposx = (xxX -xX);
	tempposy = (yyY -yY);
	tempposz = (zzZ -zZ);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
			return 1;
	}
	return 0;
}

public GirisTimer(playerid)
{
	if(!gPlayerLogged[playerid])
	{
	    Kick(playerid);
	}
}

public PanelGuncelle()
{
	for(new i; i < sizeof(DynamicFactions)+1; i++)
	{
	    if(DynamicFactions[i][fSQLid] != 0)
	    {
		    new Query[128], sonuc;
			format(Query, sizeof(Query), "SELECT `Guncelle` FROM `factionlar` WHERE `id` = '%d'", i);
			mysql_query(Query); mysql_store_result(); sonuc = mysql_fetch_int(); mysql_free_result();
			if(sonuc == 1)
			{
			    printf("Faction: %d güncellendi.",i);
  				format(Query, sizeof(Query), "SELECT `fSkin1` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin1] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin2` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin2] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin3` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin3] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin4` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin4] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin5` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin5] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin6` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin6] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin7` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin7] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin8` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin8] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin9` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin9] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fSkin10` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fSkin10] = mysql_fetch_int(); mysql_free_result();
                format(Query, sizeof(Query), "SELECT `fJoinRank` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fJoinRank] = mysql_fetch_int(); mysql_free_result();
				format(Query, sizeof(Query), "SELECT `fUseSkins` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); DynamicFactions[i][fUseSkins] = mysql_fetch_int(); mysql_free_result();
				new sonuc1[50];
				format(Query, sizeof(Query), "SELECT `fRank1` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank1],sonuc1, 0, sizeof(sonuc1), 50);
                format(Query, sizeof(Query), "SELECT `fRank2` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank2],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank3` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank3],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank4` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank4],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank5` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank5],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank6` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank6],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank7` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank7],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank8` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank8],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank9` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank9],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "SELECT `fRank10` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fRank10],sonuc1, 0, sizeof(sonuc1), 50);
                format(Query, sizeof(Query), "SELECT `fname` FROM `factionlar` WHERE `id` = '%d'", i);
				mysql_query(Query); mysql_store_result(); if(mysql_fetch_row(sonuc1) == 1) { mysql_free_result(); } strmid(DynamicFactions[i][fName],sonuc1, 0, sizeof(sonuc1), 50);
				format(Query, sizeof(Query), "UPDATE `factionlar` SET `Guncelle` = '0' WHERE `id` = '%d'",i);
				mysql_query(Query);
			}
		}
	}
}

public Adres_Update()
{
	new zone[MAX_ZONE_NAME], string[60];
	for(new i=0; i<MAX_PLAYERS; i++){
	if(gPlayerLogged[i]){
	GetPlayer2DZone(i, zone, MAX_ZONE_NAME);
	format(string,sizeof(string),"~w~%s", zone);
	TextDrawSetString(Adres[i], string);
	TextDrawShowForPlayer(i, Adres[i]);}}
	return 1;
}

stock OyunDurumGuncelle(playerid,dr)
{
	new name[64];
	GetPlayerName(playerid,name,64);
	new islem[248];
	format(islem,sizeof(islem),"UPDATE `oyuncular` SET `OyunDurum` = '%d' WHERE `ad` = '%s'",dr,name);
	mysql_query(islem);
}

stock HPRenk(Float:HP)
{
	new renk[30];
	if(HP >= 85)
	{
	    renk = "{00F600}";
	}
	else if(HP >= 50)
	{
	    renk = "{F6DF49}";
	}
	else if(HP >= 25)
	{
	    renk = "{F67630}";
	}
	else if(HP < 25)
	{
	    renk = "{F60000}";
	}
	return renk;
}

stock YeniPlakaPanpa()
{
			for(new AracVer; AracVer < MAX_VEHICLES+1; AracVer++)
			{
		 	    new Plaka[64];
			    new CaptchSymb[22][] = {"A","B","C","D","E","F","G","H","I","K","L","M","N","O","P","R","S","T","U","V","Y","Z"};
				new sayiSymb[10][] = {0,1,2,3,4,5,6,7,8,9};
				new Symb1 = random(sizeof(CaptchSymb));
			 	new	Symb2 = random(sizeof(CaptchSymb));
			 	new	Symb3 = random(sizeof(CaptchSymb));
			  	new	Symb4 = random(sizeof(CaptchSymb));
				new SymbS1 = random(sizeof(sayiSymb));
			 	new	SymbS2 = random(sizeof(sayiSymb));
		 		new	SymbS3 = random(sizeof(sayiSymb));
				format(Plaka, sizeof(Plaka), "%d%d%s%s %d%s%s", sayiSymb[SymbS1], sayiSymb[SymbS2],CaptchSymb[Symb1],CaptchSymb[Symb2], sayiSymb[SymbS3], CaptchSymb[Symb3],CaptchSymb[Symb4]);
				SetVehicleNumberPlate(AracVer, Plaka);
				strmid(DynamicCars[AracVer][CarDescription], Plaka, 0, strlen(Plaka), 20);
				AracKaydet(AracVer);
				return 1;
			}
}
public mmicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(mmelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `9mmm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==22)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `9mmm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==22)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `9mmm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					mmelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public molotoficin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(molotofelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `molotofm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==18)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `molotofm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					format(query, sizeof(query), "UPDATE `ssayi` SET `molotof` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==18)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `molotofm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					molotofelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public sawnofficin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(sawnoffelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `sawnoffm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==26)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `sawnoffm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==26)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `sawnoffm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					sawnoffelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public mp5icin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(mp5elinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `mp5m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==29)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `mp5m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==29)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `mp5m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					mp5elinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public tufekicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(tufekelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `tufekm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==33)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `tufekm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==33)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `tufekm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					tufekelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public roketicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(roketelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `roketm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==35)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `roketm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==35)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `roketm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					roketelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public yanginicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(yanginelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `yanginm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==42)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `yanginm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==42)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `yanginm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					yanginelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public kameraicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(kameraelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `kameram` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==43)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `kameram` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==43)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `kameram` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					kameraelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public sprayicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(sprayelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `spraym` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==41)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `spraym` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==41)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `spraym` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					sprayelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public spistolicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(spistolelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `spistolm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==23)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `spistolm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==23)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `spistolm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					spistolelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public shoutgunicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(shoutgunelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `shoutgunm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==25)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `shoutgunm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==25)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `shoutgunm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					shoutgunelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public tec9icin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(tec9elinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `tec9m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==32)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `tec9m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==32)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `tec9m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					tec9elinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public uziicin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(uzielinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `uzim` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==28)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `uzim` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==28)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `uzim` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					uzielinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public m4icin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(m4elinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `m4m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==31)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `m4m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==31)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `m4m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					m4elinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public ak47icin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(ak47elinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `ak47m` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==30)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `ak47m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==30)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `ak47m` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					ak47elinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public snipericin(playerid)
{
	if(Silahelinde[playerid]==1)
	{
 		if(sniperelinde[playerid]==1)
  		{
    		new query[128], mmmermisi;
    		format(query, sizeof(query), "SELECT `sniperm` FROM `osilah` WHERE `ad` = '%s'", GetPlayerNameSave(playerid));
			mysql_query(query);
			mysql_store_result();
			mmmermisi = mysql_fetch_int();
			mysql_free_result();
			new ammo2 = GetPlayerAmmo(playerid);
			if(mmmermisi != ammo2)
			{
				new wep = GetPlayerWeapon(playerid);
        		if(wep==34)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `sniperm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
		  		}
			}
			else if(ammo2 == 0)
			{
			    new wep = GetPlayerWeapon(playerid);
			    if(wep==34)
		  		{
					format(query, sizeof(query), "UPDATE `osilah` SET `sniperm` = '%d' WHERE `ad` = '%s'", ammo2, GetPlayerNameSave(playerid));
					mysql_query(query);
					sniperelinde[playerid]=0;
       				Silahelinde[playerid]=0;
		  		}
			}

		}
	}
}
public GameModeRestartFunction()
{
	GameModeExit();
}
